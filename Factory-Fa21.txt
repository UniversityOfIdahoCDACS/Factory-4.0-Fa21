// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\Nick\Documents\gitRepos\Factory-4.0-Fa21\Factory-Fa21.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
a62a087049bba1773bd5d5bdb3637f5a7f18099aef7d652b6709940840b188be230902105c416ae2
19c48109ba007b573c8989081a652ddaa4e8b632477102002c1f935a4702d11b683369ee841587a4
d6d27cd241df97ddc540a100992cec9a97fa478380dda25c3c4a459f64368dc6b02fe1f595acedee
f18d3dd9331fa5c5f44bd820c32e38971538ae9b5b04e87bf0121dd5770a56f7259e806233540a00
fb41323fe2527fdad5b37510afee1eeeb9a47cfa0ded94bde86582b42859a5433b1b3164a69a4601
2fac823d31a2c7b0ba801f80a5f1976a169436caafb9b665f996de8771565de9e955066ce497cadc
68f2bbaa5c7ad3ce1d91a008cc1eb477878b494a403653215de457187ea11681048675957dbdc695
0528933ea1437e248185344beedafad6f424e3196f3f420cb05907a961941b4363c8a9cd3d33ecd2
caaea4f65e36a7701775d7d14b215377371daa395250656b3e0124aa18284dbb2c0fe439ea306394
6fb5018cf3d9e76337708e8997d7ca06d607620d84cb8684bd88121c8d9c7fa63d11d008b0b5fa90
48512f85dcce73a8fa20faf407f430ececedd888e6e34cba56aa38959a74e44b2c1efbdd5f78c353
c7c2e003e7931df77afa1a6f13b0b60409bb1bdc8006e4c0fce05adeef6d9466a487125f450c466b
4d877760838c47450ebeea84acef13789a8783c4f241dde8546622ca6727c9a72ae5cd44d6a3fbb6
25dfa83a84ac2e227ef8f9fd70f1222e8289bb40917627fcf2a862dd1f9a58fb2c7ccb4f68e4823b
05e6016dbe6bd30539ff4275661152a7062d228b5e5ae730e02aeb7cb66a5f4b0ebce1189b2720c2
7fd1310868184940fc27e9bd9a5ea796a1e2dff74c793c299e5b7dd411a4f80ae67f1bcf6dbc96aa
e7686756f6aa83ce9060791d8df2b0b457c123cb4324ecf18ef12edd473fd280230c27d33b855e85
3e3b3b2b7d2d744802b994abc340632103004a034297b96ccd25da8d536afdc9f1d6aa280c248970
79105cbd964d4d1e4a97c813da72f5a663d79dc3af8e03c273de0b84ea7d225cd574c951fc77faec
0da70f8dd196d4e3ea8788e824954c4451d2dce7387a7a13c30b5937d27d36c700f3aafd1f6d1634
f78d9c5435f35b1d02348cc015425a5251b715da01dad6a31c43e08474a8980edb24c855df7fd5fd
e87add6a40ac1492d759cc42765c692421bdca5a651dfc8e00c935bf7407dc8cfd6757805df19d2d
984b77d5c1e96a7ed690ff162dabe028f579448a32f7fe7956208f965fc722e24c6a43ceddb96faa
2ba49f98dbbe30c0e085773d66ec00d7bb332045a1d69046b7f85c788ee8380c70e99fbf17d3fa1c
f6f362187705bddd8dcb117b82c086df0540e6935dd447be12ada371316f8d7a15e5192b5fb8ca7d
1ca52cd08116f700a518f715f80969f338260a8a5b630a17c735c788617974f833ed32e0d5e77828
afe0c47fdf10a0051823c235afa750ee4b05492ccf9391775120e09045df3300effd14f76166d14f
41ba38270e46597ee5c3a3dbc53f18442133b18f1c92e4eeeb1237b9ea1285b38d1de8645580dc65
aad2bc6c3538b010fc278ca77fe1e650945a4fd79f45c37f294cd07106404c0609d4ec1c101405ba
2950fbcfd9ae9218a146e69205264b7be7b9b918a6f621d637fe0fc60b28d97bfcef1283d9978a9e
d729820b274f42a2b684c6da5b91af3d4819bb94747231a132624bd759a6b1026423a134a7433647
1348fe5879a33042663a10d788b5e808e9f47d264b14e931a2f47ea170795d416412cf18c54d08ad
8db98292048a1e5566c517769f69687d5fd9e9bb13fea648304a0b0bd10d4266a35b1434a95d023f
02de102927031fba6ce34854a3f6aca49bb173e4657e28b7dd7eb736a1efc533a64273375aaf34a8
dfa13ea8b540f1ab811c541de55267f54c588affa91ed37bce7a52374d48b18ccd6f6d1e54936ab8
cf05cd8c572425be54b21dee9e0667b6019b96900dcec5fbf29dfdbf32f4337f3c202410107405d1
010426091583bf9f78e29c7a2ce658ee4dfa5eddb0810236e30645705dc3a4ae0c34bdf1d4156ad4
fd27b4d862a17ee4987e06ad3d3de0e7bda8b0a626a979bfb3824b7624c7d655398a99cc4a1e7e0b
a5b7033f8c690d5b6c6ad5d390b1709a609e2eb87c3007c0dac30ac5dd8334b2786ed049b64835b1
e8d9df76548b94b949b3f1737509cc027b22bb68097fdad30db96cb7cce0fc46b7a90f4c8de4a293
bece3475376f12d71d742d825a3b6d48411fa471aa22a6dc915d1a91de605dab5f6d31c888305107
1b843683320cb7da8b4b6de9aaa9501daae83b1b806bdbcd56a3519d06340d9f13ec7ef7f32306b8
88108bd1613a49c6a7418954a51ec6b1ef17d2a067f5c7a6652fdeb10cd1d4466ca093bac37e962c
1a304473482b61f90b7e24e1bd9656795137700cbf4c7348ea61d566a22863d765b33b5f49eb21d5
5d99f3fe9cac80b1e2acd36c7c17a573a34679f917ca0c611bf2c21c4169f6818f26faad0e6e90d2
2b9e3f53064c0508d5189f8c415ac2b85f60101fad494c59a576ed9f096ca76319b47d6c5340d1ce
f1308df44b67fefe847efb885db14aa362e9630b8fd87b1ad379acf6ee26451dd3e02a4709b1105a
240e88fcb34f438229517958407e53485dc352e90f0e5d4498a5c3ec05aaee74e5a5f03bf32130d9
ee8ea625ecd69a44cf4b9a4ef4d0509a9f22c72dd278a7d728decb5d479759e46ba015fce87fcd17
9c0a7d9db312dc9e75a4ad21471c4813b6ddfb544a7922cbc494684cb027ccdf0dc71b8a49150107
8a1c9727086bb73f965528d3123e5251f0ec9571e736d7e32178c4135201ba6198ac8fa77f2bf817
77d8db24178d52a4cb12346844792242fe6d42528c81bed142f408c55a0bd40142e3ddfd37ee351f
46bf101ed4222b56bcffbcb21c31a0cf16f0a43f521d4c5df99f2cedea87756879c037dfb63bc407
c4a77e732294f7a325c4aca7a326f03fba8785786ec2b0d0787250165d3d4ce5b6da052dc919cb73
909af893e95074dc27f8735794d1706898446e87f17020240313f8cf5b538fd97ea48573ea67714e
a0d0e1f061c6739e07cfd0ce640ac532443f0ade9142b4014f70119ab62bc10215a324fe8dd35b32
eec9a4b11a1d6674222e78712348e6b1340b9bc0ed29cc83d0d11f2bafc3c92f321e9c9e4c6e4da8
02f93a63c4e7c654acc261da459a9c7921383e277d313338a1f4790d85a6c5247437b7b9bde2db91
b72e8e333899916a9005a6cecd3cdbcce90397589e099f03506b6fb971580ff6c97f114ee513493d
452cae22e9be49f71afac8a2b8a4963e08a3bae606b8c51a36355aece26e9fd3f156eb212e480dc8
686330eef14b32ed2b9e319589bd7ea94f3fd2b51dbfdb9b9e6711daa784bf8608797328403bd5f2
f75aee3ea67151254cfa2b013e789b311937f423c555bf0216797ed529d9752afe7ee27f5c388cc1
884a5ca65880e869c701adc7b3f2bae482c3243662da5d5451f0ccc1288018b5a27903ee2a2d509c
0c7e47327726f662a223df91163f66a3a8ad0c30355ca9516e3f41fe9227e42bdaf22b3bb9c23191
ec82549b445aa1918fa317e1527590b40ead799980206bb462c96c753e8e95f9a6e9fcf7e7037729
198be621bebd24a5e00a36b801006636e93f942ee7eeb5fdbabe32a62448adcdbd6fbe020f668324
3e35f2155ac8d1a5c7feed23c7bd55cde75a579e73a36d8bbfa18f7ebc547a2e78b1429cff150a72
a5523ba84347f636f2c4aac7537d78edade98bb53104e372b2b05531892afe9e8020fc8aeffd5891
66d7cca03f728728d71a043f1c363cdb4a8a987deb20ea8ece14cc93ae481f82c73f6ef3dcccb281
76db790d53765c77c33586816434595ddfb56f573c74a4e4752a5a527d49ae824f90d3a976b70f70
787ddc202cdfd0e1ff51a70deac490c6d182ed14c44033e65c92a8f04dcdddf7c1afc22a455b572d
f24b721b2555c20909e0f9c8d678fc86777f0e4dab1466dbad4d84bf315ec86f5a289da420a0eecc
352d70e4c45d1251cbe0b06fb912b079160d59988bc1d9c27638bfbee72a7fe51ebbb2ef65ae6400
60ba7298c88e4f238fa717bde3ca83b5e70082d6b1e8c917e355945fbca74bcfa9dbf8ea8490b4f1
04e8274bda6c07d0f1ebe59e88f85a8f8384b75805a6235b546c68fac45f1895f1746d5a66c7d0c5
eac4e5e2d8f766692b34233b16ed50737060f36002d6c2615a0aa93c4510b3999ae6b4b2ef1f34ed
524172c4fdd28dcba835f54ad868dfeb035086e12164e670eb88c0fd1a4dd095797b3f75ba1d1bf6
fc646bc27e8fae57830b1791da76c7ca83011765a734d753f1594fb509066f8760ecbe23e8093b1f
eb3fb72b96b59369aee09cdd95cb4fc3f686d3e37d2ec84989efaa07806837525c3a51ba620b0aa5
2313200e634b25538427431d7def6aaeaef3b30d2e938491a6b7afda2cd11bb0aa10651c2b0b089e
41f90085accecc391829d1b6af36506fdb0424a7defffa08846daca06f987a921156e350ec6793b5
9a694104d2aa5f7379b9d79e67bfed6fd577d1c021ba7a651f2582906862a707a3fcb474430e7887
30b502aafbfb8180b518444c5c3696f46db8ecb0fcb44e48a0cf16c84bfaa31c41c408be9d55fabf
0233d6d2124c17549b4160933acb1e2dab5f240389c48ef1b457405809c5a836cf080922b926fef5
db2c0bed632b842481c0a650e690eed3c8be688201419ebba6fa7fb8fdda8f9d2288f121cbc0ac32
c3e78e2f4b0e0458dd1aef9307e4ca2e916a92171024715488e17d2b723b844af46b73c510539953
2998f6fb9561d9268f00500fcd82547d6317e5be5de69ab0a117b62ae5691d5fea50e6d5ef09260e
54e05c6ca7a03dbde5e76e3afa24e8974b754f9278a4ac2513594a33194a4179a060f3d356aa1a24
1ee0cfe7bd09b5857e4952bce3542ff1b46bad8aa86b3a55cce1de2679e9319efc974a9f7d05ee70
f9f2c0f7bf090b60a63635cfcc1a62065fa23e44089191d45c6261098f108946ca84e6a70a6c4400
3b6c2482ce0c0da050c1d26af2d2aacfd6cfe26b51d4c5e52be59706715d9294ab6420c312d60ca3
c95ffbf3484bb5e1522eaa0e67de173eb708444a8058165859607d62875f3faabad2e4fa385e3d88
c278d70bdcdb11c9fdd9ce0fdffcbc6176c920a55037dabcab7ead8e4031c73ca41614c424b98ab5
dc9a40f1ac86435d739d89472c605d6ce7005945ed9c0bc703b03b3af5c6de4bac815f01bf9f3046
dcea6e70f4dddfc8397e6459aed60fc86572a65b506ee55604b4854123579b5a385383825b82bc59
dcb25db3208939ca05a5e643f8724947c8f89be89b4c47257658ca7d2e957797d96a0e30d79a24c7
19111d3751a5244172705293a1fff180f7af9f42ed134d5be5fc2bf4b96c2294d3c26e778b056074
668d508c3a7f82ee5255e1870df4e18d67830558ff3a121351a644c5e7476dbc7fcb7afb60a92308
3c672a77d0a7843c919e6ac52e68f13531ed4b235b90376d2f3c4c75fe198701a5c7cfb776c9d06a
39db7737f6dc8d8da766a2d01dd7323c776f72fc3d6c8a0480c5e2754520f4f75165bc0238fa06ce
5ec696e23de9cd040ce9461e48edb5fc2a56a95933714896ef25a45c7e87598e7a03820522bcac73
16c3878bc2ab351c0f95e1eb87a55fa119a8d428cd7fa1a68ce468e5ee6f9458373571a67d5be9d8
7b40feb90f8f599554b30deeffd13527830173f7e22448af53e94317c75ffcf0d48831d97f086810
b7599308c620128beeac2f79c495a3ce56eaa1abcafca54b36b9a98e8f4b559e0039cd39df09f843
205db3be8833af322f608d5776a87ee9b4a61726b738534d3d252cb52f8a54978d4e1a710be71936
77fb15dbbd0a7859cc20213263a32da47c316e43ee75b1e20455656390da3cfd470acac51804dd1d
be14812a8e60ef2a854b6da87251715fa1c3b9725b6db3c825cd4354c1dad070173ac2498acc9c0d
c12a63fde882c8563409ea090f78ce7f997bad661c28d94cadb59c9be23bceb70b5e0a6aca407df7
d0190d96869df1391b91ffe58475e628333577521268f084b29650b535859a579c10847c38f97534
93779673bf5ca3237b43f74204b65b9798e1c06427732c788f7783bb9e654ede41acf5a124d591b9
48769fca43cf1c70e9bc6177415294938e21021f125f342ab4ef73f2662bdfd000b04eba385983f1
e296551375d219547ec26bc3ee083e99fce7e67560f2c1e98175aecc3d134cb812efbdb8263aa0e5
c07671426db88af9b141152f685a1e3fabc55cc6e5e7896b3ac415b556d2ba7c27d43c28075eff42
bb3d58f27d9a6bb2ec1d9f48750812fe03bdc77ec80a2e9a1f55e3d7ba55c909e494da2efaf8bf8d
49697c2dba2003ddd1176cebb1351f4ace3327bc224340916b6999538937a0fb54d1fb105a5211bf
c0178a33593edc7d885e1fb7f4f0348efcfb67ddf62a7d5eb546d778581980abb59792d6d6531755
e334432d63502346be3eb0390b07e52c15b3a45bf9dc5ce29ea15f615f817e1b69bee8eb23e30cc0
f90a5c75a77aeceb2e70ffe7e56a196aad487bb77331efda3f70c64a208cbc55ac08ebc3dcc0a0c2
9754fbbd056177edfb0ed8b913d53a3fbafeadf38db6dae76b682289813a4bd2486bcf3ef876240b
4643443d89117213b64ca560cf237d36870f79e923661ac2ccb7b7ed9e11da3079a958e34b6a3cca
58193671e26623ddcf25ab618ae48ca968135eb22566df5889a11e696b82aaef2039745b11ab47cb
b2367b0c590cfa93ff2e457b8cdaaf6f9c3da218a93268a1464df544a07dc32e535d2cba4ee30ea4
af69784fac3d2f0ac2af7204db720206560182a3563a57f9281ca6558bd31415fc29e3e617468a04
75c2125289148d6437e2232628289182200d3294ac713bb414359d65a308fa5d4f5bbfab04311fed
92b3ce5bfdb6ee27e64ed9b1562b0c50c6091585b49169a12a4e1336ed42be0c7a7c06c8c30d88b4
5e11dffa1f82b9c5ad399e4f5442918dc4928559d29cb170f771c4d43121b2b8dd2933c5b333d394
d254b4d842d5def786366936c02bd8b942c2da54035147e01a24633fd24883a871f4930e775c5083
7ac1383b9c343843ac7cd95b364e9d565b23eb9190f9c1d5f4e45c17c3fe97a7e5dadd66f19042ec
3044cae475a0f96eb3b2763d1413590dfd8b689e31ca7aa9a47177c9cd86a19eb3ba56762dd4c220
f5f0b5f46b917c1b3951a017873ab414829e4c459e1d04cac0058c9ead36fe2fdbd79ba8ef55c666
f67fc9ed0a8a2b9c9523da02c2e4bb596fea5474cb582fdf663aca1dd762d92ec03c41bf480850ac
b39bc1c452b856bf3f31dc6e69a5d1a77dc404483fec3b989a5bcaca5462929e686b358942c70694
eb469e8aba604889881befcf6ba46e138227d70eb95d3b25dd83e9e28cfcebedc13320aa10704484
5eab2bc6d0ad807b78cc1f1b2abc63d9e5f70003e9bca39c478018c4fc730d630a926e7d6c63867d
d1efaf7693aca3ef58d9b0646423e9cc5ba84db67b4ec5c4e8a846e1d2e65ea2c7a57a43ff92a845
c05f5763b646b8cd17e0dcc93ed11ee33cf124b3824aee7d3ca6bd2ba3f57d1c563a69a4fe16933b
697090c326927864842388291568ff415459a9a258c9219df0239ba83e3bf14d49f831fe22838a79
892be6e25302e7fc887dd38a9f2c47c4a3b6e437e2cb2cca8580c746961ae8aedc92ec37b51e3e67
1e98ca93c8065b3af974f921710d6606a716ec0031791f12d08e387ac5f077db2ef6aeb70aa681f3
7010173c1321679189297ad6d4b8c4c76bfc1c4da465a183a6dc4caf569c4ad2eb2760c223854d8f
27cc6bd851af926b256ee24e517a9d136bf62110d2ddb7151f78c94a7fb6eaa0d62723696eefc121
568cd8f72606824d450020bff80043b9e231d332d841272fa9ff384f63bc69674ac2ff363c1af92c
e3a9cb0048a0bb0fc752555c74ee66e7b01ac5fb6c5f322c33aa3e7fedb9e58d1dff4e3c76179434
a6392a422f03dd9f568c74722aa1856232cecb46ff40db52ee89e0b37bd7b3a5cffc53edb1d81b27
6facff9af5a9d5971945fe4f6da04d200205cc9420f5d8f7440c6a15555f1f5c7f71573de400cee4
79337900334e0c6c59b790ba0072abbb4c5c6e6822efe5c375eda225255280ab6e8dabcb09dce1d8
34f3f4056ee0a53cdd273af39ea4f3df98cfa7597d7b0a51e1fe4bce9ac9ec3a9372d2ddf4777d99
703c196db1109596d2293e745a4632f4d3f2e695d2cf35d716e4be2b7d2f23fe156708992cce32ac
34cb4a9037620c3e7ac154e0a03ffd9bd7121a71bfc9ea5099b2e559aa534e50314318e5acad93e6
9ec303edb8419ebbeffc803488bc215e2d230cdfb3263a035e6061af8c1704be0ed0df35a0f73c82
85878cac4b02e60c7c6a15a6a90492503139b46194adc3ccd5f2026f00ea784401cc01162c16c745
3b11cfe02840539d0d58532763d3eeeae2a89304564feb340e0a179e387948c274482327e8112a51
60b4f58b285921d238594e3cca2edbfd6503055edad4a362d7b2cd048834567addc310aa58954001
ee17f5431f0dbbb1cefc90fba65d920a265438ce374ea1827976bbe076ab7193cca0b8c2895b834e
99d0e23b3ee1469c7904e2896c7036441dfc1222e157b244da71a338c13b441b82911c6fc5372b0f
3117e024cb374bc1af0a5ba26b3dadc5a1bc50de87322799c23db8c99e4b30754e2c6667446bd356
52666469a8364e4fe53ae5b2b7a8182ca84c1d740b1e5eaefa5ce11d0bea46e087cbdf10c223da00
2e474f667c2857b7cb8c942bd5fbea83d348b88762ac693abf50b46de66ea1494a8776b6d025a8b1
a154bff24c716b22eb7b6ed387f9a316a3927fc0ca969a5bc2b327d8b568080ae3f3066d219f21e3
31bb693ca580badadf1d57f236b7a5496af54c055a679fda63ac9b636fdcee1660683827e276aead
0767930140fa802575221825c6f27469a1a0219e3c8d4f8a2eb4021de275c3c46a551e2057047957
e2561f36eb61920a8e87f34dbf332557c420fde378ca00c12dd06cfedc46ff08fc08c8732ce9778b
04694410619550230fdcb5507fe094854d4e306484a6943b2463f7c36c366600a22c519f74130fe3
1bca2ba85c66ae1be84765ac847ea9c2f6c25362d51d130a016db2c9ac093d93ef9023f5942bccff
874e549f520fa9ea9de42ca2e2d0f40dbf69e5a4c8a0970c57d0b20966bee19d706b04533fdad6bd
505aa1396cc924332654313f2b4c1bfd60a6a59412cf282677159dfefedc210ccc0273e486110d76
1a89739bfc0b6596ba3f8439069df3a49222d55dd13896a2114429e8ef3136cf881040fb9bbb56f2
41932a8ae6a1fccf9fbd89086c8d32610e0150bf5545f6f9d367778c7d376fbb5a9da721feeaf6b1
8412c9e57bd4e9ae438bdf5b4d23fc0e39c7ae0034e6ddf8bb2f27e596d1af18f2102ffd632d22fa
cd1d5aa9d467a5fba229281c9dc6762dbf1659c38407ab7ef4073b3fa24c2bf36cc551ea537f8575
db41e631f6ed0fcf630faa5fb470a56b401215708462b28f010ba4dce6dcaaae495b76124ff3ae87
b38685acba5135c2859b8c231f301f2f50b35c8533d65d27bdd146adf437539e3a4e8fe9c12a3dbe
f60345e77fa0c0b7697444eb2b28d97fce70abd5765cd44d00e7c2714ef6fb301a9d7a3ebe85eb33
7da10347b5da9f664df72b4d1e8c1b67b0c765a57af2b78439daaa9f5caae04caa816bfe1a8d47f0
81780968a3e2f05b47404687e6617ae0d2a4e9b00b414612ae76b8e90d76e3b2de2597c1bc79540a
12097d13e5ca272011d3d09ce7c4e685af794d1f2532d7e23f54e355cb7a312b0480e8b53ea597e6
b5e3392907802fa0280d15ff12dea2ee6ba08fe393d64f41602acc09841c4faa0f2539e14571565a
a3736c819186417ca208393f9e61d0378f12c7d751b4970a9105c48a62d8168a8806c7a6e888e09d
5ed8188de1aaa398f38fa72c2d898f47300dd5836f005d1c0c28803f46b2d43c3d66ce52f78b0c9b
2ac0aef99274c304b1598c2748291e8076f3c46eb7b3aff8b6b42e6da26581320a2266087f08dc2c
ea7bf3e0bd939f88c128c7c9a5e1f4da4519cface08db1dc8ce0aaca119923345f161b654ab83b09
bec9ad9b78d07716738930493404ab755647c5f33b5902c964f9dceef90b8ac5a1b13ef9c1e1e352
9547a7140db60f11843d8db8f8998593c6228ec1f0474a225b6135ed2fdb2808ed39ed778b7ef237
8c42e92ab0be6e1a485ba564c121e6b26ea246d743cd7c885b1dae6aa494664719259ca46028e8d4
fd6be2683790eef954e5c3ca4dd2019d391412cb2ad9d89f77e8f19e3d2e18ecb41213882ce92aaa
d8ba8b2271ffc83e40bc56216c89b58b5d94b0372e5cab7add93875b5073de980e9f4f962e3d791f
ebd5ca31f0ce7880efd916a3eb0c29f8261f867425df3eff3732604cf8b67a2db6306307df0e8fb0
a955931b5ee30428be83209e4457c49c3376f84367be247170ff84cce7e1fc17bfe79bced93e3030
0c5e9244b972fc5187994851a201f76524b0d8378c41e04d49054a714315f107abfeeac56e45e9ec
67b35a7d540a70f45354f20ac8b2daf84110e497e31a5d5f22dd68764cfcfec6bc79596cab305fc5
e9c335a35cdfeab958d1e73c01aa90bf1e689c55e6a950c285d3006eda057b889c34ccafeb79ebbd
841ba0a13dce6d731403cfbe53331ec6272b137a4e0460be940455b638303c087fc0abd3cdd52fea
25dc61e40bf68988a078e0323d52606de253cd007e347a6dcba6c141f5b77959dc0360127bd93644
e78f4906df1fbbb7dbdccc286c2c0e201a2c34cee46785f5e154d6dfbd03051c76714209992ba365
a86a0a1808dde5f7e0779768583dcd9e9877a1a4d4d7cdcae76df56288a60c7581c2389fbdafe566
2624b1565f2a427db8ef1f8b19c1f4d7352d0c0e6309e26569ec85427627c6022e522799d65f8217
18d86dc1914afe3e2e0917ce8eac35c98e299e8b614ffa17c6b21daaa57ed2258be81a26b521ca7d
434da469e8bb6a9e312726610c60aa29a89f4b082fbc7c439c8924b6604bca7f604764f1c06c7a88
aec79fd3f67b83cdffad315bf84e20bfaec6470c6ca8f14df946c4f1dcb8f3ed5e090fa72aefb50b
328bebb7bc640a81647593a4d90bae5ff5bc34c18be5ef6811d56fd460e7102d1cd9ed5fbd7a950d
63f9922918b78df8a4abafba6d32afdb30970fdb8711f7b4898ca748116bd10ca8e50435b618dcf5
82f8580f47416f5ab3bcc12e5a19478b400f426d6f10b83b2497cf9cee5c0ba6d7b38427183bbca9
261feecab68f1c00523ae3e98a249aba33fc0fff284e455778262e2945982cf64b83d2657ed8415d
f7cdc8340621555b95b3df6b796c395f46211060700cd8499f1f39e1859aa98cdb9161423f26baca
2a097dd6df6bb1c3cd94e934b7f53634bf55b623ca170ce440e46dde3839e9c8dad1616cf8e8b9d7
3e5437fa4252314297c5dc8b7ed178ed493e10362f0bec4316f8602776eb4b8349082ef143d7467c
b8fd50526cd29b20459f8f7f23ac7a0f3ed7657a64e7922e4622a0d1f2a1a00cdc1807c6afe68ff8
e27bcaa67c7fec9b9a2e19a4a45f28f689b8fae79ba68d306b552ae54ccc2acc9c3f22009d5b32b5
fe8611249f366fda6f47d86e3af857e7571521edc10e219851f243a2e5586d06c692607a4c62
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 PID_0 PID  0
 SSC_Copy_State <Virtual>  0
 HBW_Encoders PROGRAM  0 -1
 CP_State_Program PROGRAM  0 -1
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC200 C400 1 0x0 MC210 C410 1 0x0 MC220 C420 1 0x0 MC230 C430 1 0x0 MC240 C440 1 0x0 MC300 C500 1 0x0 MC301 C501 1 0x0 MC302 C502 1 0x0 MC303 C503 1 0x0 MC304 C504 1 0x0 MC305 C505 1 0x0 MC306 C506 1 0x0 MC307 C507 1 0x0 MC350 C550 1 0x0 X32 MHR400 1 0x0 1345 V810 1 0x0 180 V811 1 0x0 175 V812 1 0x0 860 V813 1 0x0 200 V814 1 0x0 400 V820 1 0x0 420 V821 1 0x0 440 V822 1"

// Rung VGR_Copy_State#2
// Offset 51
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC400 C800 1 0x0 MC401 C801 1 0x0 MC402 C802 1 0x0 MC403 C803 1 0x0 MC404 C804 1 0x0 MC405 C805 1 0x0 MC406 C806 1 0x0 MC407 C807 1 0x0 Y16 MI400 1 0x0 Y43 MI401 1"

// Rung MPO_Copy_State#2
// Offset 25
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MHR1600 V3200 1 0x0 MC800 C1610 1 0x0 MC801 C1650 1 0x0 MC802 C1651 1 0x0 MC803 C1652 1 0x0 MC804 C1653 1 0x0 MC805 C1654 1 0x0 MC806 C1655 1 0x0 V3201 MHR1601 1"

// Rung SLD_Copy_State#2
// Offset 23
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 C1200 1"

// Rung SSC_Copy_State#2
// Offset 7
NOP

// Rung SSC_Copy_State#3
// Offset 8
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Mini Factory Fall 2021 Project For CS 453/454/553/554 "
"Advanced Robotics I and II<br> <br>Date 09/17/21"
#END

NOP

// Rung $Main#2
// Offset 1
#BEGIN FMT_COMMENT 
"Run CP_State Program"
#END

STR ST1
RUN CP_State_Program

// Rung $Main#3
// Offset 4
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#4
// Offset 7
#BEGIN FMT_COMMENT 
"Run HBW_Encoders"
#END

STR ST1
RUN HBW_Encoders

// Rung $Main#5
// Offset 10
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#6
// Offset 13
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#7
// Offset 16
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#8
// Offset 19
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block CP_State_Program
$PRGRM CP_State_Program

// Rung CP_State_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"<center><FONT tsize=4>This program runs copy state "
"functions at the top of every scan</FONT><br>"
"</center><center><FONT tsize=4>Use this for copy state "
"rungs that need to be executed every "
"scan</FONT><br></center>"
#END

NOP

// Rung CP_State_Program#2
// Offset 1
#BEGIN FMT_COMMENT 
"HBW General Copy State"
#END

STR ST1
COPY 0x1 "4 0x0 MC101 C101 1 0x0 MC102 C102 1 0x0 MC103 C103 1 0x0 MC104 C104 1 0x0 MHR105 V105 1 0x0 MHR106 V106 1 0x0 MC110 C110 1 0x0 MC111 C111 1 0x0 MC112 C112 1 0x0 MC113 C113 1 0x0 MC114 C114 1 0x0 MC115 C115 1 0x0 MC116 C116 1 0x0 MC117 C117 1 0x0 MHR118 V118 1 0x0 MHR119 V119 1 0x0 MHR120 V120 1 0x0 C130 MC130 1 0x0 V131 MHR131 1 0x0 HBW_Program.S0_15 MHR132 1 0x0 CT10.Acc MHR137 1 0x0 V10 MHR139 1"

// End of Code Block CP_State_Program
$PGMEND CP_State_Program

// Beginning of Code Block HBW_Encoders
$PRGRM HBW_Encoders

// Rung HBW_Encoders#1
// Offset 0
#BEGIN FMT_COMMENT 
"<center><FONT tsize=4>HBW X (Horizontal) Encoder "
"logic</FONT><br></center>"
#END

NOP

// Rung HBW_Encoders#2
// Offset 1
#BEGIN FMT_COMMENT 
"X Encoder Up Down Counter"
#END

STR C51
STR C50
UDCG CT10 DST511 DST511

// Rung HBW_Encoders#3
// Offset 6
STR HBW_Encoders.FirstRun
OUT Y99

// Rung HBW_Encoders#4
// Offset 8
STR ST1
OUT C99

// Rung HBW_Encoders#5
// Offset 10
STR X8
OUT C8

// Rung HBW_Encoders#6
// Offset 12
STR X9
OUT C9

// Rung HBW_Encoders#7
// Offset 14
#BEGIN FMT_COMMENT 
"Encoder Right. Move to Conveyor"
#END

STRPD X8
ANDN X9
STRND X8
AND X9
ORSTR
STR X8
ANDPD X9
ORSTR
STRN X8
ANDND X9
ORSTR
OUT C50

// Rung HBW_Encoders#8
// Offset 30
#BEGIN FMT_COMMENT 
"Encoder Left. Move to Storage"
#END

STRPD X9
ANDN X8
STRND X9
AND X8
ORSTR
STR X9
ANDPD X8
ORSTR
STRN X9
ANDND X8
ORSTR
OUT C51

// End of Code Block HBW_Encoders
$PGMEND HBW_Encoders

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
NOP

// Rung HBW_Program#2
// Offset 1
#BEGIN FMT_COMMENT 
"Initialization and Reset stage"
#END

SG HBW_Program.S0

// Rung HBW_Program#3
// Offset 3
#BEGIN FMT_COMMENT 
"Jump to Homing Stage"
#END

STR ST1
JMP HBW_Program.S5

// Rung HBW_Program#4
// Offset 5
#BEGIN FMT_COMMENT 
"Ready Stage<br>"
#END

SG HBW_Program.S1

// Rung HBW_Program#5
// Offset 7
#BEGIN FMT_COMMENT 
"Set Ready status"
#END

STR ST1
OUT C130

// Rung HBW_Program#6
// Offset 9
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 0 V131

// Rung HBW_Program#7
// Offset 12
#BEGIN FMT_COMMENT 
"Task Send"
#END

STR C101
JMP HBW_Program.S7

// Rung HBW_Program#8
// Offset 14
#BEGIN FMT_COMMENT 
"Task Recieve"
#END

STR C102
JMP HBW_Program.S12

// Rung HBW_Program#9
// Offset 16
#BEGIN FMT_COMMENT 
"Task Reset"
#END

STR C103
JMP HBW_Program.S0

// Rung HBW_Program#10
// Offset 18
#BEGIN FMT_COMMENT 
"Manual Control"
#END

STR C104
JMP HBW_Program.S3

// Rung HBW_Program#11
// Offset 20
SG HBW_Program.S12

// Rung HBW_Program#12
// Offset 22
NOP

// Rung HBW_Program#13
// Offset 23
NOP

// Rung HBW_Program#14
// Offset 24
NOP

// Rung HBW_Program#15
// Offset 25
#BEGIN FMT_COMMENT 
"Task Send"
#END

SG HBW_Program.S7

// Rung HBW_Program#16
// Offset 27
#BEGIN FMT_COMMENT 
"X Home - PWM"
#END

STRLE V10 700
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 200 V118
OUT Y50

// Rung HBW_Program#17
// Offset 46
STRGT V10 700
JMP HBW_Program.S1

// Rung HBW_Program#18
// Offset 51
#BEGIN FMT_COMMENT 
"Fault State"
#END

SG HBW_Program.S2

// Rung HBW_Program#19
// Offset 53
NOP

// Rung HBW_Program#20
// Offset 54
STR ST2
JMP HBW_Program.S0

// Rung HBW_Program#21
// Offset 56
#BEGIN FMT_COMMENT 
"HBW Manual Control"
#END

SG HBW_Program.S3

// Rung HBW_Program#22
// Offset 58
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 50 V131

// Rung HBW_Program#23
// Offset 61
#BEGIN FMT_COMMENT 
"Manual X PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 100 V118

// Rung HBW_Program#24
// Offset 76
#BEGIN FMT_COMMENT 
"Manual X Left"
#END

STR C110
OUT Y50

// Rung HBW_Program#25
// Offset 78
#BEGIN FMT_COMMENT 
"Manual X Right"
#END

STR C111
ANDN X0
OUT Y51

// Rung HBW_Program#26
// Offset 81
#BEGIN FMT_COMMENT 
"Manual Y PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 100 V118

// Rung HBW_Program#27
// Offset 96
#BEGIN FMT_COMMENT 
"Manual Y In"
#END

STR C112
ANDN X11
OUT Y7

// Rung HBW_Program#28
// Offset 99
#BEGIN FMT_COMMENT 
"Manual Y Out"
#END

STR C113
ANDN X10
OUT Y6

// Rung HBW_Program#29
// Offset 102
#BEGIN FMT_COMMENT 
"Manual Z PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 100 V118

// Rung HBW_Program#30
// Offset 117
#BEGIN FMT_COMMENT 
"Manual Z Up"
#END

STR C114
ANDN X3
OUT Y5

// Rung HBW_Program#31
// Offset 120
#BEGIN FMT_COMMENT 
"Manual Z Down"
#END

STR C115
OUT Y4

// Rung HBW_Program#32
// Offset 122
#BEGIN FMT_COMMENT 
"Manual Conveyor PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 100 V118

// Rung HBW_Program#33
// Offset 137
#BEGIN FMT_COMMENT 
"Manual Conveyor In"
#END

STR C116
OUT Y49

// Rung HBW_Program#34
// Offset 139
#BEGIN FMT_COMMENT 
"Manual Conveyor Out"
#END

STR C117
OUT Y48

// Rung HBW_Program#35
// Offset 141
#BEGIN FMT_COMMENT 
"Jump to Ready"
#END

STR C103
JMP HBW_Program.S0

// Rung HBW_Program#36
// Offset 143
#BEGIN FMT_COMMENT 
"<FONT tsize=4>Homing Stage</FONT>"
#END

SG HBW_Program.S5

// Rung HBW_Program#37
// Offset 145
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 33 V131

// Rung HBW_Program#38
// Offset 148
#BEGIN FMT_COMMENT 
"X Home - PWM"
#END

STRN X0
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 200 100
OUT Y51

// Rung HBW_Program#39
// Offset 164
#BEGIN FMT_COMMENT 
"Y Home - PWM"
#END

STRN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 75
OUT Y7

// Rung HBW_Program#40
// Offset 180
#BEGIN FMT_COMMENT 
"Z Home - PWM"
#END

STRN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 200 75
OUT Y5

// Rung HBW_Program#41
// Offset 196
#BEGIN FMT_COMMENT 
"Y Home - PWM"
#END

STRN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 200 75
OUT Y7

// Rung HBW_Program#42
// Offset 212
#BEGIN FMT_COMMENT 
"Jump to Homing Reset Stage"
#END

STR X0
AND X3
AND X11
JMP HBW_Program.S6

// Rung HBW_Program#43
// Offset 216
#BEGIN FMT_COMMENT 
"<FONT tsize=4>Homing Reset Stage</FONT>"
#END

SG HBW_Program.S6

// Rung HBW_Program#44
// Offset 218
#BEGIN FMT_COMMENT 
"Reset counter for X axis encoder"
#END

STR ST1
RSTCT CT10

// Rung HBW_Program#45
// Offset 220
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 66 V131

// Rung HBW_Program#46
// Offset 223
#BEGIN FMT_COMMENT 
"Timer Delay<br>Wait for motor momentom to actually stop"
#END

STR ST1
ONDTMR T3 500 C0

// Rung HBW_Program#47
// Offset 227
#BEGIN FMT_COMMENT 
"Reset X Encoder"
#END

STR T3.Done
OUT C99

// Rung HBW_Program#48
// Offset 229
#BEGIN FMT_COMMENT 
"Jump to Ready"
#END

STR T3.Done
JMP HBW_Program.S1

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
SG VGR_Program.S0

// Rung VGR_Program#2
// Offset 2
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#3
// Offset 10
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#4
// Offset 12
SG VGR_Program.S1

// Rung VGR_Program#5
// Offset 14
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#6
// Offset 22
#BEGIN FMT_COMMENT 
"Rotate Crane CW if limiter is not hit"
#END

STR ST1
ANDN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y26

// Rung VGR_Program#7
// Offset 39
#BEGIN FMT_COMMENT 
"Retract crane arm on X axis until limiter is hit"
#END

STR ST1
ANDN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 50
OUT Y24

// Rung VGR_Program#8
// Offset 56
#BEGIN FMT_COMMENT 
"Retract crane arm on Y axis until limiter is hit"
#END

STR ST1
ANDN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y22

// Rung VGR_Program#9
// Offset 73
STR X25
AND X26
AND X27
JMP VGR_Program.S2

// Rung VGR_Program#10
// Offset 77
SG VGR_Program.S2

// Rung VGR_Program#11
// Offset 79
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#12
// Offset 87
#BEGIN FMT_COMMENT 
"VGR.T0 - Reset VGR to 0 state"
#END

STR C400
JMP VGR_Program.S2

// Rung VGR_Program#13
// Offset 89
#BEGIN FMT_COMMENT 
"VGR.T1 - Move disk from HBW to MPO"
#END

STR C410
JMP VGR_Program.S3

// Rung VGR_Program#14
// Offset 91
#BEGIN FMT_COMMENT 
"VGR.T2 - Move disk from SLD to Loading Bay"
#END

STR C420
JMP VGR_Program.S4

// Rung VGR_Program#15
// Offset 93
#BEGIN FMT_COMMENT 
"VGR.T3 - Move disk from Loading Bay to HBW"
#END

STR C430
JMP VGR_Program.S5

// Rung VGR_Program#16
// Offset 95
#BEGIN FMT_COMMENT 
"VGR.T4 - Move disk from Loading Bay to Shipping Truck"
#END

STR C440
JMP VGR_Program.S6

// Rung VGR_Program#17
// Offset 97
#BEGIN FMT_COMMENT 
"MANUAL CONTROL"
#END

STR C500
JMP VGR_Program.S7

// Rung VGR_Program#18
// Offset 99
SG VGR_Program.S3

// Rung VGR_Program#19
// Offset 101
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#20
// Offset 109
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#21
// Offset 111
SG VGR_Program.S4

// Rung VGR_Program#22
// Offset 113
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#23
// Offset 121
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#24
// Offset 123
SG VGR_Program.S5

// Rung VGR_Program#25
// Offset 125
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#26
// Offset 133
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#27
// Offset 135
SG VGR_Program.S6

// Rung VGR_Program#28
// Offset 137
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#29
// Offset 145
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#30
// Offset 147
SG VGR_Program.S7

// Rung VGR_Program#31
// Offset 149
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#32
// Offset 157
#BEGIN FMT_COMMENT 
"Rotate Crane CW"
#END

STR C501
ANDN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y26

// Rung VGR_Program#33
// Offset 174
#BEGIN FMT_COMMENT 
"Rotate Crane CCW"
#END

STR C502
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y27

// Rung VGR_Program#34
// Offset 190
#BEGIN FMT_COMMENT 
"Extend Crane X+"
#END

STR C503
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 50
OUT Y25

// Rung VGR_Program#35
// Offset 206
#BEGIN FMT_COMMENT 
"Retract Crane X-"
#END

STR C504
ANDN X25
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 50
OUT Y24

// Rung VGR_Program#36
// Offset 223
#BEGIN FMT_COMMENT 
"Extend Crane Y-"
#END

STR C506
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y23

// Rung VGR_Program#37
// Offset 239
#BEGIN FMT_COMMENT 
"Retract Crane Y+"
#END

STR C505
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y22

// Rung VGR_Program#38
// Offset 255
#BEGIN FMT_COMMENT 
"Turn on Compressor when in S7"
#END

STR C500
SET Y28

// Rung VGR_Program#39
// Offset 257
#BEGIN FMT_COMMENT 
"Set Vacuum"
#END

STRN C507
SET Y29

// Rung VGR_Program#40
// Offset 259
#BEGIN FMT_COMMENT 
"Release Vacuum"
#END

STR C507
RST Y29

// Rung VGR_Program#41
// Offset 261
#BEGIN FMT_COMMENT 
"Turn off compressor when not in S7"
#END

STRN C500
RST Y28

// Rung VGR_Program#42
// Offset 263
STRN C500
JMP VGR_Program.S1

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"This first stage currently sends the crane back to the "
"turn table, resets the compressor, and resets out detection "
"bit. Once it is sent back to the turn table it jumps to "
"stage 1"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STRN X16
OUT Y15

// Rung MPO_Program#4
// Offset 12
STR ST1
RST Y17

// Rung MPO_Program#5
// Offset 14
STR ST1
RST Y47

// Rung MPO_Program#6
// Offset 16
STR ST1
RST Y18

// Rung MPO_Program#7
// Offset 18
STR ST1
RST C1000

// Rung MPO_Program#8
// Offset 20
STR ST1
RST Y20

// Rung MPO_Program#9
// Offset 22
STR ST1
RST Y21

// Rung MPO_Program#10
// Offset 24
STRN X12
OUT Y46

// Rung MPO_Program#11
// Offset 26
STR C801
JMP MPO_Program.S7

// Rung MPO_Program#12
// Offset 28
STR X16
AND X12
ANDN C801
JMP MPO_Program.S1

// Rung MPO_Program#13
// Offset 32
SG MPO_Program.S1

// Rung MPO_Program#14
// Offset 34
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#15
// Offset 42
#BEGIN FMT_COMMENT 
"Always be Detecting if we have something, if we get "
"something set C1000 on"
#END

STRND X24
SET C1000

// Rung MPO_Program#16
// Offset 45
#BEGIN FMT_COMMENT 
"If we have something (C1000) and we get a go from Doug "
"(C800), start by turning on the compressor"
#END

STR C1000
AND C800
ANDN X17
SET Y17

// Rung MPO_Program#17
// Offset 49
#BEGIN FMT_COMMENT 
"If the compressor is on, and we are outside the oven, open "
"the door"
#END

STR Y17
AND X18
SET Y20

// Rung MPO_Program#18
// Offset 52
#BEGIN FMT_COMMENT 
"If the Oven Door is Open, and we are not all the way "
"inside, move the loading tray inside"
#END

STR Y20
ANDN X17
AND C800
OUT Y44

// Rung MPO_Program#19
// Offset 56
STR Y20
AND X17
RST Y20

// Rung MPO_Program#20
// Offset 59
STRND Y20
AND X17
RST Y17

// Rung MPO_Program#21
// Offset 63
STRND Y20
AND X17
OFFDTMR T100 3000 Y16

// Rung MPO_Program#22
// Offset 69
STRPD T100.Done
AND X17
JMP MPO_Program.S2

// Rung MPO_Program#23
// Offset 73
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#24
// Offset 75
SG MPO_Program.S2

// Rung MPO_Program#25
// Offset 77
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#26
// Offset 85
STR X17
SET Y17

// Rung MPO_Program#27
// Offset 87
STR X17
ANDN Y20
SET Y20

// Rung MPO_Program#28
// Offset 90
STR Y20
ANDN X18
OUT Y52

// Rung MPO_Program#29
// Offset 93
STR X18
RST Y17

// Rung MPO_Program#30
// Offset 95
STR X18
RST Y20

// Rung MPO_Program#31
// Offset 97
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#32
// Offset 99
STR X18
JMP MPO_Program.S3

// Rung MPO_Program#33
// Offset 101
SG MPO_Program.S3

// Rung MPO_Program#34
// Offset 103
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#35
// Offset 111
#BEGIN FMT_COMMENT 
"If we have detected something at the oven (c800), are not "
"already at the oven (X19), and the vacuum is not on [Which "
"means we do not have anything] (Y18), move crane towards "
"oven (Y53)"
#END

STRN X19
AND C800
ANDN Y18
OUT Y53

// Rung MPO_Program#36
// Offset 115
#BEGIN FMT_COMMENT 
"When we first reach the oven (X19), turn on the compressor(Y17)"
#END

STRPD X19
SET Y17

// Rung MPO_Program#37
// Offset 118
#BEGIN FMT_COMMENT 
"When we reach the oven (X19) go down, and come back up "
"after 3 seconds"
#END

STRPD X19
OFFDTMR T101 3000 Y19

// Rung MPO_Program#38
// Offset 123
#BEGIN FMT_COMMENT 
"Turn on the vacuum in order to pick up disk, before the "
"timer turns the crane down bit off. #TODO finish comment "
"here"
#END

STRLE T101.Acc 750
AND T101.Timing
SET Y18

// Rung MPO_Program#39
// Offset 129
STRPD T101.Done
AND X19
JMP MPO_Program.S4

// Rung MPO_Program#40
// Offset 133
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#41
// Offset 135
SG MPO_Program.S4

// Rung MPO_Program#42
// Offset 137
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#43
// Offset 145
#BEGIN FMT_COMMENT 
"When the vacuum is on [which means we have something] "
"(Y18), we are done timing (T0.Done), and we are not at the "
"turn table position (X16) then run the crane over to the "
"turn table position(Y15)"
#END

STR Y18
ANDN X16
OUT Y15

// Rung MPO_Program#44
// Offset 148
#BEGIN FMT_COMMENT 
"When we turn off the vacuum(Y18) and are at the turntable "
"positon(X16), jump to the next stage"
#END

STRPD X16
OFFDTMR T102 3000 Y19

// Rung MPO_Program#45
// Offset 153
STRLE T102.Acc 750
AND T102.Timing
RST Y18

// Rung MPO_Program#46
// Offset 159
STR X16
ANDPD T102.Done
JMP MPO_Program.S5

// Rung MPO_Program#47
// Offset 163
#BEGIN FMT_COMMENT 
"This is the reset button"
#END

STR C802
JMP MPO_Program.S0

// Rung MPO_Program#48
// Offset 165
SG MPO_Program.S5

// Rung MPO_Program#49
// Offset 167
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#50
// Offset 175
STRN X15
AND C800
OUT Y45

// Rung MPO_Program#51
// Offset 178
STRPD X15
OFFDTMR T103 3000 Y43

// Rung MPO_Program#52
// Offset 183
STR X15
ANDPD T3.Done
ANDN X13
JMP MPO_Program.S6

// Rung MPO_Program#53
// Offset 188
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#54
// Offset 190
SG MPO_Program.S6

// Rung MPO_Program#55
// Offset 192
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#56
// Offset 200
STR C800
ANDN X13
OUT Y45

// Rung MPO_Program#57
// Offset 203
STRPD X13
SET Y18

// Rung MPO_Program#58
// Offset 206
STRPD X13
OFFDTMR T103 750 Y21

// Rung MPO_Program#59
// Offset 211
STRPD X13
SET Y47

// Rung MPO_Program#60
// Offset 214
STRPD X14
RST Y47

// Rung MPO_Program#61
// Offset 217
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#62
// Offset 219
STRN X14
JMP MPO_Program.S0

// Rung MPO_Program#63
// Offset 221
NOP

// Rung MPO_Program#64
// Offset 222
SG MPO_Program.S7

// Rung MPO_Program#65
// Offset 224
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#66
// Offset 232
STR ST1
FLASHER 500 500 Y39

// Rung MPO_Program#67
// Offset 237
STR ST1
FLASHER 500 500 Y40

// Rung MPO_Program#68
// Offset 242
STR ST1
FLASHER 500 500 Y41

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"State 0: Listen for Doug's instruction to start module."
#END

SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
NOP

// Rung SLD_Program#3
// Offset 3
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#4
// Offset 11
#BEGIN FMT_COMMENT 
"Wait for Doug Start Command"
#END

STR C1610
JMP SLD_Program.S1

// Rung SLD_Program#5
// Offset 13
#BEGIN FMT_COMMENT 
"Enter manual mode S10"
#END

STR C1650
JMP SLD_Program.S10

// Rung SLD_Program#6
// Offset 15
#BEGIN FMT_COMMENT 
"Stage 10 has manual controls for SLD"
#END

SG SLD_Program.S10

// Rung SLD_Program#7
// Offset 17
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#8
// Offset 25
#BEGIN FMT_COMMENT 
"Manual control for conveyor belt"
#END

STR C1651
OUT Y30

// Rung SLD_Program#9
// Offset 27
#BEGIN FMT_COMMENT 
"Manual Compressor Control"
#END

STR C1652
OUT Y31

// Rung SLD_Program#10
// Offset 29
#BEGIN FMT_COMMENT 
"Manual White Ejector"
#END

STR C1653
OUT Y32

// Rung SLD_Program#11
// Offset 31
#BEGIN FMT_COMMENT 
"Manual Red Ejector"
#END

STR C1654
OUT Y33

// Rung SLD_Program#12
// Offset 33
#BEGIN FMT_COMMENT 
"Manual Blue Ejector"
#END

STR C1655
OUT Y34

// Rung SLD_Program#13
// Offset 35
STR ST1
SUBSCRIB "4 WX0 V3201 1 0x4"

// Rung SLD_Program#14
// Offset 40
#BEGIN FMT_COMMENT 
"Manual Auto Run"
#END

STR C1611
JMP SLD_Program.S1

// Rung SLD_Program#15
// Offset 42
STRN C1650
JMP SLD_Program.S0

// Rung SLD_Program#16
// Offset 44
SG SLD_Program.S1

// Rung SLD_Program#17
// Offset 46
#BEGIN FMT_COMMENT 
"When the light barrier is broken, turns on timer to run "
"conveyor belt with disk until the middle of color sensor."
#END

STR ST1
ANDND X35
OFFDTMR T200 3000 C1600

// Rung SLD_Program#18
// Offset 52
#BEGIN FMT_COMMENT 
"C1600 is set to true when timer is running so the conveyor moves"
#END

STR C1600
OUT Y30

// Rung SLD_Program#19
// Offset 54
#BEGIN FMT_COMMENT 
"When the timer is done, move to stage 2."
#END

STR T200.Done
JMP SLD_Program.S2

// Rung SLD_Program#20
// Offset 56
NOP

// Rung SLD_Program#21
// Offset 57
SG SLD_Program.S2

// Rung SLD_Program#22
// Offset 59
#BEGIN FMT_COMMENT 
"State 2 is where color is determined by checking if the "
"analog value is within a range, and conveyor timer distance "
"is set based on color.<br> <br>"
"Need to integrate a counter here still."
#END

NOP

// Rung SLD_Program#23
// Offset 60
#BEGIN FMT_COMMENT 
"Subscrib is to get value from color sensor and convert it "
"to something the HMI understands.<br> <br>Need help with HMI"
#END

STR ST1
SUBSCRIB "4 WX0 V3200 1 0x4"

// Rung SLD_Program#24
// Offset 65
#BEGIN FMT_COMMENT 
"The disk should now be in the center of the color sensor. "
"This function checks if the color of the disk is in the "
"blue range. If so, sets boolean value C1601 to true."
#END

STR ST1
RANGECHECK V3200 0x1 23000 22000 C1601

// Rung SLD_Program#25
// Offset 70
STR ST1
RANGECHECK V3200 0x1 20500 19500 C1602

// Rung SLD_Program#26
// Offset 75
STR ST1
RANGECHECK V3200 0x1 16000 15000 C1603

// Rung SLD_Program#27
// Offset 80
#BEGIN FMT_COMMENT 
"If C1601 is true, Off Delay timer starts output is set to "
"C1604 which when true runs Y30 for timer length."
#END

STR C1601
OFFDTMR T201 3000 C1604

// Rung SLD_Program#28
// Offset 84
#BEGIN FMT_COMMENT 
"When C1604 is true, turn on conveyor."
#END

STR C1604
OUT Y30

// Rung SLD_Program#29
// Offset 86
STR C1602
OFFDTMR T202 2000 C1605

// Rung SLD_Program#30
// Offset 90
STR C1605
OUT Y30

// Rung SLD_Program#31
// Offset 92
STR C1603
OFFDTMR T203 1000 C1606

// Rung SLD_Program#32
// Offset 96
STR C1606
OUT Y30

// Rung SLD_Program#33
// Offset 98
STR T201.Done
JMP SLD_Program.S3

// Rung SLD_Program#34
// Offset 100
NOP

// Rung SLD_Program#35
// Offset 101
SG SLD_Program.S3

// Rung SLD_Program#36
// Offset 103
NOP

// Rung SLD_Program#37
// Offset 104
STRND X36
OFFDTMR T204 5000 C1611

// Rung SLD_Program#38
// Offset 109
STR C1611
OUT Y34

// Rung SLD_Program#39
// Offset 111
STR T204.Done
JMP SLD_Program.S1

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STRN X40
OUT Y36

// Rung SSC_Program#4
// Offset 12
STRN X41
OUT Y38

// Rung SSC_Program#5
// Offset 14
STR X40
AND X41
JMP SSC_Program.S1

// Rung SSC_Program#6
// Offset 17
SG SSC_Program.S1

// Rung SSC_Program#7
// Offset 19
#BEGIN FMT_COMMENT 
"This Stage will be for looking at the High Bay Warehouse"
#END

STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#8
// Offset 27
#BEGIN FMT_COMMENT 
"If something is detected for pick up for 2 seconds (X42 is "
"not on), write to MI600 to let Doug know we got something."
#END

STRN X42
ONDTMR T150 2000 MI600

// Rung SSC_Program#9
// Offset 31
#BEGIN FMT_COMMENT 
"This means something has been dropped off, but is now "
"being picked up by the crane so turn off MI600"
#END

STRPD X42
AND MI600
RST MI600

// Rung SSC_Program#10
// Offset 35
#BEGIN FMT_COMMENT 
"If something is detected for drop off (x43 is not on), "
"write to MI601 to let Doug know we have something"
#END

STRN X43
ONDTMR T150 2000 MI601

// End of Code Block SSC_Program
$PGMEND SSC_Program

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"T3","T_HBW_S6","",""
#END

