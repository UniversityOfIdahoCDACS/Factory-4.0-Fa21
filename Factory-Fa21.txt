// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\Nick\Documents\gitRepos\Factory-4.0-Fa21\Factory-Fa21.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
c64a681029dbc1175bb5b5ddd3031f3a1f7869fa8f1d054b0769f46820d1e8de436962703c210a82
79a4e169da601b375ce9e9687a054dbac488d652271162604c7ff33a2762b17b0853098ee475e7c4
b6b21cb221bff7bda520c160f94c8cfaf79a27e3e0bdc23c5c2a25ff0456eda6d04f8195f5cc8d8e
91ed5db9537fc5a5942bb840a34e58f77558cefb3b64881b90727db5176a369745fee00253346a60
9b21525f82321fbab5d31570cf8e7e8ed9c41c9a6d8df4dd8805e2d44839c5235b7b5104c6fa2661
4fcce25d51c2a7d0dae07fe0c591f70a76f456aacfd9d60599f6bee711363d898935660c84f7aabc
0892dbca3c1ab3ae7df1c068ac7ed417e7eb292a205633413d8437781ec176e164e615f51ddda6f5
6548f35ec1231e44e1e5542b8eba9ab6944483790f5f226cd03967c901f47b2303a8c9ad5d538cb2
aacec4963e56c7107715b7b12b413317577dca593230050b5e6144ca78482ddb4c6f84598a5003f4
0fd561ec93b987035710eee9f7b7aa66b667026de4abe6e4dde8727cedfc1fc65d71b068d0d59af0
28314fe5bcae13c89a409a946794508c8c8db8e886832cda36ca58f5fa14842b4c7e9bbd3f18a333
a7a2806387f37d971a9a7a0f73d0d66469db7bbce06684a09c803abe8f0df406c4e7723f256c260b
2de71700e3ec27256ede8ae4cc8f7318fae7e3a49221bd88340642aa0747a9c74a85ad24b6c39bd6
45bfc85ae4cc4e421e98999d1091424ee2e9db20f116479c92c802bd7ffa389b4c1cab2f0884e25b
6586610dde0bb365599f2215067132c7664d42eb3e3a8750804a8b1cd60a3f2b6edc8178fb4740a2
1fb15168087829209c4789ddfa3ec7f6c182bf972c195c49fe3b1db471c4986a861f7baf0ddcf6ca
8708073696cae3aef000197ded92d0d437a143ab23448c91ee914ebd275fb2e0436c47b35be53ee5
5e5b5b4b1d4d142862d9f4cba320034163602a6322f7d90cad45baed330a9da991b6ca486c44e910
19703cddf62d2d7e2af7a873ba1295c603b7fda3cfee63a213be6be48a1d423cb514a9319c179a8c
6dc76fedb1f6b4838ae7e88844f52c2431b2bc87581a1a73a36b3957b21d56a76093ca9d7f0d7654
97edfc3455933b7d6254eca075223a3231d775ba61bab6c37c2380e414c8f86ebb44a835bf1fb59d
881abd0a20cc74f2b739ac22163c094441ddaa3a057d9cee60a955df1467bcec9d0737e03d91fd4d
f82b17b5a1890a1eb6f09f764dcb8048951924ea52979e193640eff63fa742822c0a23aebdd90fca
4bc4fff8bbde50a080e5175d068c60b7db534025c1b6f026d7983c18ee88586c1089ffdf77b39a7c
969302781765ddbdedab711be2a0e6bf652086f33db427de72cdc311510fed1a7585794b3fd8aa1d
7cc54cb0e1769760c57897759869099358466aea3b036a77a755a7e801191498538d5280b5871848
cf80a41fbf70c0657843a255cfc7308e2b65294caff3f117314080f025bf53608f9d74970106b12f
21da58476e26391e85a3c3bba55f78244153d1ef7cf2848e8b7257d98a72e5d3ed7d880435e0bc05
cab2dc0c5558d0709c47ecc71f818630f43a2fb7ff25a31f492cb01166202c6669b48c7c707465da
49309bafb9cef278c12686f265462b1b87d9d978c69641b6579e6fa66b48b91b9c8f72e3b9f7eafe
b749e26b472f22c2d6e4a6ba3bf1cf5d2879dbf4141251c152022bb739c6d1620443c154c7235627
73289e3819c35022065a70b7e8d5886889941d462b748951c2941ec110193d210472af78a52d68cd
edd9e2f264ea7e3506a57716ff09081d3fb989db739ec628502a6b6bb16d2206c33b7454c93d625f
62be704947637fda0c832834c396ccc4fbd11384051e48d7bd1ed756c18fa553c62213573acf54c8
bfc15ec8d52091cbe17c347d853207952c38ea9fc97eb31bae1a32572d28d1ecad0f0d7e34f30ad8
af65adec374445de34d27d8efe6607d661fbf6f06daea59b92fd9ddf5294531f5c404470701465b1
6164466975e3dfff1882fc1a4c86388e2d9a3ebdd0e16256836625103da3c4ce6c54dd91b4750ab4
9d47d4b802c11e84f81e66cd5d5d8087ddc8d0c646c919dfd3e22b1644a7b63559eaf9ac2a7e1e6b
c5d7635fec096d3b0c0ab5b3f0d110fa00fe4ed81c5067a0baa36aa5bde354d2180eb029d62855d1
88b9bf1634ebf4d929d391131569ac621b42db08691fbab36dd90cd7ac809c26d7c96f2ced84c2f3
deae5415570f72b77d144de23a5b0d28217fc411ca42c6bcf13d7af1be003dcb3f0d51a8e8503167
7be456e3526cd7baeb2b0d89cac9307dca885b7be00bbbad36c331fd66546dff738c1e97934366d8
e870ebb1015a29a6c721e934c57ea6d18f77b2c00795a7c6054fbed16cb1b4260cc0f3daa31ef64c
7a502413284b01996b1e4481ddf636193157106cdf2c13288a01b506c24803b705d35b3f298b41b5
3df9939efccce0d182ccb30c1c77c513c326199977aa6c017b92a27c210996e1ef469acd6e0ef0b2
4bfe5f33662c6568b578ffec213aa2d83f00707fcd292c39c5168dff690cc70379d41d0c3320b1ae
9150ed942b079e9ee41e9be83dd12ac30289036befb81b7ab319cc968e46257db3804a2769d1703a
446ee89cd32f23e249311938201e33283da332896f6e3d24f8c5a38c65ca8e1485c5905b934150b9
8eeec6458cb6fa24af2bfa2e94b030faff42a74db218c7b748beab3d27f739840bc0759c881fad77
fc6a1dfdd372bcfe15c4cd41277c2873d6bd9b342a1942aba4f4082cd047acbf6da77bea29756167
ea7cf747680bd75ff63548b3725e3231908cf5118756b7834118a4733261da01f8ccefc71f4b9877
17b8bb4477ed32c4ab725408241942229e0d2232ece1deb1229468a53a6bb4612283bd9d578e557f
26df707eb4424b36dc9fdcd27c51c0af7690c45f327d2c3d99ff4c8d8ae7150819a057bfd65ba467
a4c71e1342f497c345a4ccc7c346905fdae7e5180ea2d0b0181230763d5d2c85d6ba654da979ab13
f0fa98f3893014bc47981337f4b11008f8240ee791104044637398af3b33efb91ec4e5138a07112e
c0b0819001a613fe67afb0ae046aa552245f6abef122d4612f1071fad64ba16275c3449eedb33b52
8ea9c4d17a7d0614424e1811432886d1546bfba08d49ace3b0b17f4bcfa3a94f527efcfe2c0e2dc8
62995a03a487a634cca201ba25fafc1941585e471d515358c194196de5c6a5441457d7d9dd82bbf1
d74eee5358f9f10af065c6aead5cbbac8963f738fe69ff63300b0fd911386f96a91f712e8573295d
254cce4289de29977a9aa8c2d8c4f65e68c3da8666d8a57a56553a8c820effb391368b414e286da8
0803508e912b528d4bfe51f5e9dd1ec92f5fb2d57ddfbbfbfe0771bac7e4dfe668191348205bb592
973a8e5ec61131452c9a4b615e18fb5179579443a535df6276191eb549b9154a9e1e821f3c58eca1
e82a3cc638e08809a761cda7d392da84e2a3445602ba3d343190aca148e078d5c219638e4a4d30fc
6c1e275217469602c243bff1765f06c3c8cd6c50553cc9310e5f219ef247844bba924b5bd9a251f1
8ce234fb243ac1f1efc377813215f0d46ecd19f9e0400bd402a90c155eeef599c6899c9787631749
79eb8641dedd44c5806a56d861600656895ff44e878ed59ddade52c64428cdaddd0fde626f06e344
5e5592753aa8b1c5a79e8d43a7dd35ad873a37fe13c30debdfc1ef1edc341a4e18d122fc9f756a12
c5325bc82327965692a4caa7331d188dcd89ebd551648312d2d03551e94a9efee0409cea8f9d38f1
06b7acc05f12e748b77a645f7c565cbb2aeaf81d8b408aeeae74acf3ce287fe2a75f0e93bcacd2e1
16bb196d33163c17a355e6e10454393dbfd50f375c14c484154a3a321d29cee22ff0b3c916d76f10
181dbc404cbfb0819f31c76d8aa4f0a6b1e28d74a42053863cf2c8902dadbd97a1cfa24a253b374d
922b127b4535a269698099a8b6189ce6171f6e2dcb7406bbcd2de4df513ea80f3a48fdc440c08eac
554d1084a43d7231ab80d00fd972d019766d39f8eba1b9a21658dfde874a1f857edbd28f05ce0460
00da12f8a8ee2f43efc777dd83aae3d58760e2b6d188a9778335f43fdcc72bafc9bb988ae4f0d491
6488472bba0c67b0918b85fee8983aefe3e4d73865c6433b340c089aa43f78f591140d3a06a7b0a5
8aa48582b89706094b54435b768d30131000930062b6a2013a6ac95c2570d3f9fa86d4d28f7f548d
322112a49db2edabc855952ab808bf8b6330e681410486108be8a09d7a2db0f5191b5f15da7d7b96
9c040ba21eefce37e36b77f1ba16a7aae3617705c754b73391392fd569660fe7008cde4388695b7f
8b5fd74bf6d5f309ce80fcbdf5ab2fa396e6b3831d4ea829e98fca67e00857323c5a31da026b6ac5
4373406e032b4533e447237d1d8f0acece93d36d4ef3e4f1c6d7cfba4cb17bd0ca70057c4b6b68fe
219960e5ccaeac597849b1d6cf56300fbb6444c7be9f9a68e40dccc00ff81af2713683308c07f3d5
fa092164b2ca3f1319d9b7fe07df8d0fb517b1a041da1a057f45e2f00802c767c39cd414236e18e7
50d562ca9b9be1e0d578242c3c56f6940dd88cd09cd42e28c0af76a82b9ac37c21a468defd359adf
6253b6b2722c7734fb2100f35aab7e4dcb3f4463e9a4ee91d437203869a5c856af686942d9469e95
bb4c6b8d034be444e1a0c63086f08eb3a8de08e26121fedbc69a1fd89dbaeffd42e89141aba0cc52
a387ee4f2b6e6438bd7a8ff36784aa4ef10af27770441134e8811d4b125be42a940b13a57033f933
49f8969bf501b946ef60306fade2341d037785de3d86fad0c177d64a85097d3f8a3086b58f69466e
34803c0cc7c05ddd85870e5a9a4488f72b152ff218c4cc4573392a53792a2119c00093b336ca7a44
7e80af87dd69d5e51e2932dc83344f91d40bcdeac80b5a35ac81be46198951fe9cf72aff1d658e10
9992a097df696b00c65655afac7a02663fc25e2468f1f1b43c020169ef70e926aae486c76a0c2460
5b0c44e2ae6c6dc030a1b20a92b2caafb6af820b31b4a5854b85f766113df2f4cb0440a372b66cc3
a93f9b93282bd581324eca6e07be775ed768242ae038763839001d02e73f5fcadab2849a583e5de8
a218b76bbcbb71a99db9ae6fbf9cdc0116a940c53057badccb1ecdee2051a75cc47674a444d9ead5
bcfa2091cce6233d13fde9274c003d0c876039258dfc6ba763d05b5a95a6be2bcce13f61dfff5026
bc8a0e1094bdbfa8591e0439ceb66fa80512c63b300e853664d4e5214337fb3a5833e3e23be2dc39
bcd23dd340e959aa65c5862398122927a898fb88fb2c27451638aa1d4ef517f7b90a6e50b7fa44a7
79717d5731c54421121032f3c19f91e097cfff228d732d3b859c4b94d90c42f4b3a20e17eb650014
06ed30ec5a1fe28e323581e76d9481ed07e365389f5a727331c624a587270ddc1fab1a9b00c94368
5c074a17b0c7e45cf1fe0aa54e089155518d2b433bf0570d4f5c2c159e79e761c5a7afd716a9b00a
59bb175796bcededc706c2b07db7525c170f129c5d0cea64e0a58215254094973105dc62589a66ae
3ea6f6825d89ad646c89267e288dd59c4a36c939531128f68f45c43c1ee739ee1a63e26542dccc13
76a3e7eba2cb557c6ff5818be7c53fc179c8b448ad1fc1c6ec8408858e0ff438575511c61d3b89b8
1b209ed96fef39f534d36d8e9fb15547e3611397824428cf33892377a73f9c90b4e851b91f680870
d739f368a64072eb8ecc4f19a4f5c3ae368ac1cbaa9cc52b56d9c9eeef2b35fe6059ad59bf699823
403dd3dee853cf524f00ed3716c81e89d4c67746d758332d5d454cd54fea34f7ed2e7a116b877956
179b75bbdd6a1839ac40415203c34dc41c510e238e15d18264350503f0ba5c9d276aaaa57864bd7d
de74e14aee008f4ae52b0dc81231113fc1a3d9123b0dd3a845ad2334a1bab010775aa229eaacfc6d
a14a039d88e2a83654698a696f18ae1ff91bcd067c48b92ccdd5fcfb825baed76b3e6a0aaa201d97
b0796df6e6fd91597bf19f85e415864853551732720890e4d2f630d555e5fa37fc70e41c58991554
f317f613df3cc3431b23972264d63bf7f881a00447134c18ef17e3dbfe052ebe21cc95c144b5f1d9
2816ffaa23af7c1089dc01172132f4f3ee41627f723f544ad48f1392064bbfb060d02eda5839e391
82f6357315b279341ea20ba38e685ef99c8786150092a189e115ceac5d732cd8728fddd8465ac085
a01611220dd8ea99d121754f083a7e5fcba53ca68587e90b5aa475d536b2da1c47b45c48673e9f22
db5d38921dfa0bd28c7dff281568729e63dda71ea86a4efa7f3583b7da35a96984f4ba4e9a98dfed
29091c4dda4063bdb1770c8bd1557f2aae5347dc422320f10b09f933e957c09b34b19b703a3271df
a077ea53395ebc1de83e7fd7949054ee9c9b07bd964a1d3ed526b7183879e0cbd5f7f2b6b6337735
8354234d03304326de5ed0596b67854c75d3c43b99bc3c82fec13f013fe11e7b09de888b43836ca0
996a3c15c71a8c8b4e109f87850a790acd281bd713518fba5f10a62a40ecdc35cc688ba3bca0c0a2
f7349bdd6501178d9b6eb8d973b55a5fda9ecd93edd6ba870b0842e9e15a2bb2280baf5e9816446b
2623245de9711273d62cc500af431d56e76f198943067aa2acd7d78dfe71ba5019c938832b0a5caa
38795611820643bdaf45cb01ea84ecc908733ed24506bf38e9c17e090be2ca8f4059143b71cb27ab
d2561b6c396c9af39f4e251becbacf0ffc5dc278c95208c1262d9524c01da34e333d4cda2e836ec4
cf09182fcc5d4f6aa2cf1264bb1262663661e2c3365a3799487cc635ebb374759c4983867726ea64
15a27232e974ed04578243464848f1e2406d52f4cc115bd47455fd05c3689a3d2f3bdfcb64517f8d
f2d3ae3b9dd68e47862eb9d1364b6c30a66975e5d4f109c14a2e73568d22de6c1a1c66a8a36de8d4
3e71bf9a7fe2d9a5cd59fe2f3422f1eda4f2e539b2fcd1109711a4b45141d2d8bd4953a5d353b3f4
b234d4b822b5be97e6560956a04bb8d922a2ba34633127807a44035fb228e3c81194f36e173c30e3
1aa1585bfc545823cc1cb93b562efd363b438bf1f099a1b594843c77a39ef7c785babd0691f0228c
5024aa8415c0990ed3d2165d7473396d9deb08fe51aa1ac9c41117a9ade6c1fed3da36164db4a240
9590d5940bf11c7b5931c077e75ad474e2fe2c25fe7d64aaa065ecfecd569e4fbbb7fbc88f35a606
961fa98d6aea4bfcf543ba62a284db390f8a3414ab384fbf065aaa7db702b94ea05c21df286830cc
d3fba1a432d836df5f51bc0e09c5b1c71da464285f8c5bf8fa3baaaa3402f2fe080b55e922a766f4
8b26feeada0028e9e87b8faf0bc40e73e247b76ed93d5b45bde38982ec9c8b8da15340ca701024e4
3ecb4ba6b0cde01b18ac7f7b4adc03b98597606389dcc3fc27e078a49c136d036af20e1d0c03e61d
b18fcf16f3ccc38f38b9d004044389ac3bc82dd61b2ea5a488c82681b2863ec2a7c51a239ff2c825
a03f3703d626d8ad7780bca95eb17e835c9144d3e22a8e1d5cc6dd4bc3951d7c365a09c49e76f35b
0910f0a346f21804e443e84975089f213439c9c238a941fd9043fbc85e5b912d2998519e42e3ea19
e94b86823362879ce81db3eaff4c27a4c3d6845782ab4caae5e0a726f67a88cebcf28c57d57e5e07
7ef8aaf3a8663b5a99149941116d0666c7768c6051197f72b0ee581aa59017bb4e96ced76ac6e193
1070775c734107f1e9491ab6b4d8a4a70b9c7c2dc405c1e3c6bc2ccf36fc2ab28b4700a243e52def
47ac0bb831cff20b450e822e311afd730b964170b2bdd7757f18a92a1fd68ac0b64743090e8fa141
36ecb8974666e22d256040df986023d98251b352b821474fc99f582f03dc09072aa29f565c7a994c
83c9ab6028c0db6fa732353c148e0687d07aa59b0c3f524c53ca5e1f8dd985ed7d9f2e5c1677f454
c6594a224f63bdff36ec14124ac1e50252aeab269f20bb328ee980d31bb7d3c5af9c338dd1b87b47
0fcc9ffa95c9b5f779259e2f0dc02d406265acf44095b897246c0a75353f7f3c1f11375d8460ae84
19531960532e6c0c39d7f0da6012cbdb2c3c0e08428f85a3158dc2454532e0cb0eedcbab69bc81b8
549394650e80c55cbd475a93fec493bff8afc7391d1b6a31819e2baefaa98c5af312b2bd94171df9
105c790dd170f5f6b2495e143a265294b39286f5b2af55b77684de4b1d4f439e750768f94cae52cc
54ab2af057026c5e1aa13480c05f9dfbb7727a11dfa98a30f9d28539ca332e3051237885cccdf386
fea3638dd821fedb8f9ce054e8dc413e4d436cbfd3465a633e0001cfec7764de6eb0bf55c0975ce2
e5e7eccc2b62866c1c0a75c6c964f2305159d401f4cda3acb592620f608a182461ac61764c76a725
5b71af80482033fd6d38334703b38e8a82c8f364362f8b546e6a77fe581928a21428434788714a31
00d495eb483941b258392e5caa4ebb9d0563653ebab4c302b7d2ad64e854361abda370ca38f52061
8e7795237f6ddbd1ae9cf09bc63df26a463458ae572ec1e21916db8016cb11f3acc0d8a2e93be32e
f9b0825b5e8126fc196482e90c1056247d9c72428137d224ba11c358a15b247be2f17c0fa5574b6f
51778044ab572ba1cf6a3bc20b5dcda5c1dc30bee75247f9a25dd8a9fe2b50152e4c0607240bb336
32060409c8562e2f855a85d2d7c8784cc82c7d146b7e3ece9a3c817d6b8a2680e7abbf70a243ba60
4e272f061c4837d7abecf44bb59b8ae3b328d8e702cc095adf30d40d860ec1292ae716d6b045c8d1
c134df922c110b428b1b0eb3e799c376c3f21fa0aaf6fa3ba2d347b8d508686a8393660d41ff4183
51db095cc5e0dababf7d379256d7c5290a952c653a07ffba03ccfb030fbc8e76000858478216cecd
6707f361209ae04515427845a6921409c1c041fe5ced2fea4ed4627d8215a3a40a357e4037641937
82367f568b01f26aeee7932ddf534537a4409d8318aa60a14db00c9ebc269f689c68a8134c8917eb
6409247001f530436fbcd5301f80f4e52d2e5004e4c6f45b440397a30c560660c24c31ff14736f83
7baa4bc83c06ce7b882705cce41ec9a296a23302b57d736a610dd2a9cc695df38ff04395f44bac9f
e72e34ff326fc98afd844cc282b0946ddf0985c4a8c0f76c37b0d26906de81fd100b64335fbab6dd
303ac1590ca944534634515f4b2c7b9d00c6c5f472af48461775fd9e9ebc416cac621384e6716d16
7ae913fb9c6b05f6da5fe45966fd93c4f242b53db158f6c2712449888f5156afe870209bfbdb3692
21f34aea86c19cafffdde9680ced52016e6130df35259699b30717ec1d570fdb3afdc7419e8a96d1
e472a9851bb489ce23ebbf3b2d439c6e59a7ce605486bd98db4f4785f6b1cf7892704f9d034d429a
ad7d3ac9b407c59bc249487cfda6164ddf7639a3e467cb1e94675b5fc22c4b930ca5318a331fe515
bb218651968d6faf036fca3fd410c50b20727510e402d2ef616bc4bc86bccace293b16722f93cee7
d3e6e5ccda3155a2e5fbec437f507f4f30d33ce553b63d47ddb126cd945733fe5a2eef89a14a5dde
966325871fc0a0d70914248b4b48b91fae10cbb5163cb42d6087a2112e969b507afd1a5edee58b53
1dc16327d5baff062d974b2d7eec7b07d0a705c51a92d7e459bacaff3cca802ccae10b9e7aed2790
e1186908c382903b272026e786011a80b2c489d06b212672ce16d8896d1683d2be45f7a1dc19346a
72691d7385aa474071b3b0fc87a486e5cf192d7f4552b7825f348335ab1a514b64e088d55ec5f786
d583594967e04fc0486d759f72bec28e0bc0ef83f3b62f21004aac69e47c2fca6f4559812511363a
c3130ce1f1e6211cc268595ffe01b057ef72a7b731d4f76af165a4ea02b876eae866a7c688e880fd
3eb878ed81cac3f893efc74c4de9ef27506db5e30f603d7c6c48e05f26d2b45c5d06ae3297eb6cfb
4aa0ce99f214a364d139ec4728497ee01693a40ed7d3cf98d6d44e0dc205e1526a4206681f68bc4c
8a1b9380ddf3ffe8a148a7a9c58194ba2579afcc80edd1bcec80caaa71f943543f767b052ad85b69
dea9cdfb18b0177613e950295464cb153627a5935b3962a90499bc8e996beaa5c1d15e99a1818332
f527c7746dd66f71e45dedd898f9e5f3a642eea190272a423b01558d4fbb48688d598d17eb1e9257
ec22894ad0de0e7a283bc504a14186d20ec226b723ad1ce83b7dce0ac4f406277945fcc4004888b4
9d0b820857f08e993485a3aa2db261fd597472ab4ab9b8ff178891fe5d4e788cd47273e84c894aca
b8daeb42119fa85e20dc36410ce9d5eb3df4d0574e3ccb1abdf3e73b3013bef86eff2ff64e5d197f
8bb5aa5190ae18e08fb976c38b6c4998467fe61445bf5e9f5752002c98d61a4dd6500367bf6eefd0
c935f37b3e836448dee340fe2437a4fc5316982307de4411109fe4ac87819c77df87fbaeb95e5050
6c3ef224d9129c31e7f92831c261970544d0b857ec21802d29652a1123759167cb9e8aa50e25898c
07d33a1d346a10943334926aa8d2ba98217084f7837a3d3f42bd08162c9c9ea6dc19390ccb503fa5
89a355c33cbf8ad938b1875c61caf0df7e08fc3586c930a2e5b3600eba651be8fc54accf8b198bdd
e47bc0c15dae0d137463afde33537ea6474b731a2e6400def46435d658505c681fa0cbb3adb54f8a
45bc01846b96e9e8c01880525d32000d8233ad601e541a0dabc6a12195d71939bc6300721bb95624
87ef2966bf7fdbd7bbbcac480c4c6e407a4c54ae8407e5958134b6bfdd63657c16112269f94bc305
c80a6a7868bd85978017f708385dadfef817c1c4b4b7adaa870d9502e8c66c15e1a258ffddcf8506
4644d1363f4a221dd88f7feb79a194b7554d6c6e03698205098ce5221647a6624e3247f9b63fe277
78b80da1f12a9e5e4e6977aeeecc55a9ee49feeb012f9a77a6d27dcac51eb245eb887a46d541aa1d
232dc40988db0afe514746016c00ca49c8ff2b684fdc1c23fce944d6002baa1f00270491a00c1ae8
cea7ffb3961be3ad9fcd513b982e40dfcea6276c0cc8912d9926a491bcd8938d3e696fc74a8fd56b
52eb8bd7dc046ae10415f3c4b96bce3f95dc54a1eb858f0871b50fb40087704d7cb98d3fdd1af56d
0399f24978d7ed98c4cbcfda0d52cfbb50f76fbbe77197d4e9ecc728710bb16cc8856455d678bc95
e298386f27210f3ad3dca14e3a7927eb206f220d0f70d85b44f7affc8e3c6bc6b7d3e447785bdcc9
467f8eaad6ef7c60325a8389ea44fada539c6f9f482e253718464e4925f84c962be3b2051eb8213d
97ada8546641353bf5d3bf0b190c593f26417000106cb829ff7f5981e5fac9ecbbf101225f46daaa
4a691db6bf0bd1a3adf48954d7955654df35d643aa776c8420840dbe585989a8bab1010c9888d9b7
5e34579a22325122f7a5bceb1eb1188d295e70564f6b8c2376980047168b2be329684e9123b7261c
d89d30320cb2fb4025ffef1f43cc1a6f5eb7051a0487f24e2642c0b192c1c06cbc7867a6cf86ef98
821baac61c1f8cfbfa4e79c4c43f4896e9d89a87fbc6ed500b354a852cac4aacfc5f4260fd3b52d5
9ee67144ff560fba0f27b80e5a9837873775418da16e41f8319223c285380d66a6f2001a2c02
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 PID_0 PID  0
 SSC_Copy_State <Virtual>  0
 HBW_Encoders PROGRAM  0 -1
 CP_State_Program PROGRAM  0 -1
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC200 C400 1 0x0 MC210 C410 1 0x0 MC220 C420 1 0x0 MC230 C430 1 0x0 MC240 C440 1 0x0 MC300 C500 1 0x0 MC301 C501 1 0x0 MC302 C502 1 0x0 MC303 C503 1 0x0 MC304 C504 1 0x0 MC305 C505 1 0x0 MC306 C506 1 0x0 MC307 C507 1 0x0 MC350 C550 1 0x0 X32 MHR400 1 0x0 1345 V810 1 0x0 180 V811 1 0x0 175 V812 1 0x0 860 V813 1 0x0 200 V814 1 0x0 400 V820 1 0x0 420 V821 1 0x0 440 V822 1"

// Rung VGR_Copy_State#2
// Offset 51
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC400 C800 1 0x0 MC401 C801 1 0x0 MC402 C802 1 0x0 MC403 C803 1 0x0 MC404 C804 1 0x0 MC405 C805 1 0x0 MC406 C806 1 0x0 MC407 C807 1 0x0 Y16 MI400 1 0x0 Y43 MI401 1"

// Rung MPO_Copy_State#2
// Offset 25
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MHR1600 V3200 1 0x0 MC800 C1610 1"

// Rung SLD_Copy_State#2
// Offset 9
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 C1200 1"

// Rung SSC_Copy_State#2
// Offset 7
NOP

// Rung SSC_Copy_State#3
// Offset 8
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Mini Factory Fall 2021 Project For CS 453/454/553/554 "
"Advanced Robotics I and II<br> <br>Date 09/17/21"
#END

NOP

// Rung $Main#2
// Offset 1
#BEGIN FMT_COMMENT 
"Run CP_State Program"
#END

STR ST1
RUN CP_State_Program

// Rung $Main#3
// Offset 4
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#4
// Offset 7
#BEGIN FMT_COMMENT 
"Run HBW_Encoders"
#END

STR ST1
RUN HBW_Encoders

// Rung $Main#5
// Offset 10
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#6
// Offset 13
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#7
// Offset 16
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#8
// Offset 19
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block CP_State_Program
$PRGRM CP_State_Program

// Rung CP_State_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"<center><FONT tsize=4>This program runs copy state "
"functions at the top of every scan</FONT><br>"
"</center><center><FONT tsize=4>Use this for copy state "
"rungs that need to be executed every "
"scan</FONT><br></center>"
#END

NOP

// Rung CP_State_Program#2
// Offset 1
#BEGIN FMT_COMMENT 
"HBW General Copy State"
#END

STR ST1
COPY 0x1 "4 0x0 MC101 C101 1 0x0 MC102 C102 1 0x0 MC103 C103 1 0x0 MC104 C104 1 0x0 MHR105 V105 1 0x0 MHR106 V106 1 0x0 MC110 C110 1 0x0 MC111 C111 1 0x0 MC112 C112 1 0x0 MC113 C113 1 0x0 MC114 C114 1 0x0 MC115 C115 1 0x0 MC116 C116 1 0x0 MC117 C117 1 0x0 MHR118 V118 1 0x0 MHR119 V119 1 0x0 MHR120 V120 1 0x0 C130 MC130 1 0x0 V131 MHR131 1 0x0 HBW_Program.S0_15 MHR132 1 0x0 CT10.Acc MHR137 1 0x0 V10 MHR139 1"

// Rung CP_State_Program#3
// Offset 50
NOP

// End of Code Block CP_State_Program
$PGMEND CP_State_Program

// Beginning of Code Block HBW_Encoders
$PRGRM HBW_Encoders

// Rung HBW_Encoders#1
// Offset 0
#BEGIN FMT_COMMENT 
"<center><FONT tsize=4>HBW X (Horizontal) Encoder "
"logic</FONT><br></center>"
#END

NOP

// Rung HBW_Encoders#2
// Offset 1
#BEGIN FMT_COMMENT 
"X Encoder Up Down Counter"
#END

STR C51
STR C50
UDCG CT10 DST511 DST511

// Rung HBW_Encoders#3
// Offset 6
STR HBW_Encoders.FirstRun
OUT Y99

// Rung HBW_Encoders#4
// Offset 8
STR ST1
OUT C99

// Rung HBW_Encoders#5
// Offset 10
STR X8
OUT C8

// Rung HBW_Encoders#6
// Offset 12
STR X9
OUT C9

// Rung HBW_Encoders#7
// Offset 14
#BEGIN FMT_COMMENT 
"Encoder Right. Move to Conveyor"
#END

STRPD X8
ANDN X9
STRND X8
AND X9
ORSTR
STR X8
ANDPD X9
ORSTR
STRN X8
ANDND X9
ORSTR
OUT C50

// Rung HBW_Encoders#8
// Offset 30
#BEGIN FMT_COMMENT 
"Encoder Left. Move to Storage"
#END

STRPD X9
ANDN X8
STRND X9
AND X8
ORSTR
STR X9
ANDPD X8
ORSTR
STRN X9
ANDND X8
ORSTR
OUT C51

// End of Code Block HBW_Encoders
$PGMEND HBW_Encoders

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
NOP

// Rung HBW_Program#2
// Offset 1
#BEGIN FMT_COMMENT 
"Initialization and Reset stage"
#END

SG HBW_Program.S0

// Rung HBW_Program#3
// Offset 3
#BEGIN FMT_COMMENT 
"Jump to Homing Stage"
#END

STR ST1
JMP HBW_Program.S5

// Rung HBW_Program#4
// Offset 5
#BEGIN FMT_COMMENT 
"Ready Stage<br>"
#END

SG HBW_Program.S1

// Rung HBW_Program#5
// Offset 7
#BEGIN FMT_COMMENT 
"Set Ready status"
#END

STR ST1
OUT C130

// Rung HBW_Program#6
// Offset 9
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 0 V131

// Rung HBW_Program#7
// Offset 12
#BEGIN FMT_COMMENT 
"Task Send"
#END

STR C101
JMP HBW_Program.S7

// Rung HBW_Program#8
// Offset 14
#BEGIN FMT_COMMENT 
"Task Recieve"
#END

STR C102
JMP HBW_Program.S12

// Rung HBW_Program#9
// Offset 16
#BEGIN FMT_COMMENT 
"Task Reset"
#END

STR C103
JMP HBW_Program.S0

// Rung HBW_Program#10
// Offset 18
#BEGIN FMT_COMMENT 
"Manual Control"
#END

STR C104
JMP HBW_Program.S3

// Rung HBW_Program#11
// Offset 20
SG HBW_Program.S12

// Rung HBW_Program#12
// Offset 22
NOP

// Rung HBW_Program#13
// Offset 23
NOP

// Rung HBW_Program#14
// Offset 24
NOP

// Rung HBW_Program#15
// Offset 25
#BEGIN FMT_COMMENT 
"Task Send"
#END

SG HBW_Program.S7

// Rung HBW_Program#16
// Offset 27
#BEGIN FMT_COMMENT 
"X Home - PWM"
#END

STRLE V10 700
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 200 V118
OUT Y50

// Rung HBW_Program#17
// Offset 46
STRGT V10 700
JMP HBW_Program.S1

// Rung HBW_Program#18
// Offset 51
#BEGIN FMT_COMMENT 
"Fault State"
#END

SG HBW_Program.S2

// Rung HBW_Program#19
// Offset 53
NOP

// Rung HBW_Program#20
// Offset 54
STR ST2
JMP HBW_Program.S0

// Rung HBW_Program#21
// Offset 56
#BEGIN FMT_COMMENT 
"HBW Manual Control"
#END

SG HBW_Program.S3

// Rung HBW_Program#22
// Offset 58
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 50 V131

// Rung HBW_Program#23
// Offset 61
#BEGIN FMT_COMMENT 
"Manual X PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 100 V118

// Rung HBW_Program#24
// Offset 76
#BEGIN FMT_COMMENT 
"Manual X Left"
#END

STR C110
OUT Y50

// Rung HBW_Program#25
// Offset 78
#BEGIN FMT_COMMENT 
"Manual X Right"
#END

STR C111
ANDN X0
OUT Y51

// Rung HBW_Program#26
// Offset 81
#BEGIN FMT_COMMENT 
"Manual Y PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 100 V118

// Rung HBW_Program#27
// Offset 96
#BEGIN FMT_COMMENT 
"Manual Y In"
#END

STR C112
ANDN X11
OUT Y7

// Rung HBW_Program#28
// Offset 99
#BEGIN FMT_COMMENT 
"Manual Y Out"
#END

STR C113
ANDN X10
OUT Y6

// Rung HBW_Program#29
// Offset 102
#BEGIN FMT_COMMENT 
"Manual Z PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 100 V118

// Rung HBW_Program#30
// Offset 117
#BEGIN FMT_COMMENT 
"Manual Z Up"
#END

STR C114
ANDN X3
OUT Y5

// Rung HBW_Program#31
// Offset 120
#BEGIN FMT_COMMENT 
"Manual Z Down"
#END

STR C115
OUT Y4

// Rung HBW_Program#32
// Offset 122
#BEGIN FMT_COMMENT 
"Manual Conveyor PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 100 V118

// Rung HBW_Program#33
// Offset 137
#BEGIN FMT_COMMENT 
"Manual Conveyor In"
#END

STR C116
OUT Y49

// Rung HBW_Program#34
// Offset 139
#BEGIN FMT_COMMENT 
"Manual Conveyor Out"
#END

STR C117
OUT Y48

// Rung HBW_Program#35
// Offset 141
#BEGIN FMT_COMMENT 
"Jump to Ready"
#END

STR C103
JMP HBW_Program.S0

// Rung HBW_Program#36
// Offset 143
#BEGIN FMT_COMMENT 
"<FONT tsize=4>Homing Stage</FONT>"
#END

SG HBW_Program.S5

// Rung HBW_Program#37
// Offset 145
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 33 V131

// Rung HBW_Program#38
// Offset 148
#BEGIN FMT_COMMENT 
"X Home - PWM"
#END

STRN X0
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 200 100
OUT Y51

// Rung HBW_Program#39
// Offset 164
#BEGIN FMT_COMMENT 
"Y Home - PWM"
#END

STRN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 75
OUT Y7

// Rung HBW_Program#40
// Offset 180
#BEGIN FMT_COMMENT 
"Z Home - PWM"
#END

STRN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 200 75
OUT Y5

// Rung HBW_Program#41
// Offset 196
#BEGIN FMT_COMMENT 
"Y Home - PWM"
#END

STRN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 200 75
OUT Y7

// Rung HBW_Program#42
// Offset 212
#BEGIN FMT_COMMENT 
"Jump to Homing Reset Stage"
#END

STR X0
AND X3
AND X11
JMP HBW_Program.S6

// Rung HBW_Program#43
// Offset 216
#BEGIN FMT_COMMENT 
"<FONT tsize=4>Homing Reset Stage</FONT>"
#END

SG HBW_Program.S6

// Rung HBW_Program#44
// Offset 218
#BEGIN FMT_COMMENT 
"Reset counter for X axis encoder"
#END

STR ST1
RSTCT CT10

// Rung HBW_Program#45
// Offset 220
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 66 V131

// Rung HBW_Program#46
// Offset 223
#BEGIN FMT_COMMENT 
"Timer Delay<br>Wait for motor momentom to actually stop"
#END

STR ST1
ONDTMR T3 500 C0

// Rung HBW_Program#47
// Offset 227
#BEGIN FMT_COMMENT 
"Reset X Encoder"
#END

STR T3.Done
OUT C99

// Rung HBW_Program#48
// Offset 229
#BEGIN FMT_COMMENT 
"Jump to Ready"
#END

STR T3.Done
JMP HBW_Program.S1

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
SG VGR_Program.S0

// Rung VGR_Program#2
// Offset 2
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#3
// Offset 10
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#4
// Offset 12
SG VGR_Program.S1

// Rung VGR_Program#5
// Offset 14
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#6
// Offset 22
#BEGIN FMT_COMMENT 
"Rotate Crane CW if limiter is not hit"
#END

STR ST1
ANDN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y26

// Rung VGR_Program#7
// Offset 39
#BEGIN FMT_COMMENT 
"Retract crane arm on X axis until limiter is hit"
#END

STR ST1
ANDN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 50
OUT Y24

// Rung VGR_Program#8
// Offset 56
#BEGIN FMT_COMMENT 
"Retract crane arm on Y axis until limiter is hit"
#END

STR ST1
ANDN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y22

// Rung VGR_Program#9
// Offset 73
STR X25
AND X26
AND X27
JMP VGR_Program.S2

// Rung VGR_Program#10
// Offset 77
SG VGR_Program.S2

// Rung VGR_Program#11
// Offset 79
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#12
// Offset 87
#BEGIN FMT_COMMENT 
"VGR.T0 - Reset VGR to 0 state"
#END

STR C400
JMP VGR_Program.S2

// Rung VGR_Program#13
// Offset 89
#BEGIN FMT_COMMENT 
"VGR.T1 - Move disk from HBW to MPO"
#END

STR C410
JMP VGR_Program.S3

// Rung VGR_Program#14
// Offset 91
#BEGIN FMT_COMMENT 
"VGR.T2 - Move disk from SLD to Loading Bay"
#END

STR C420
JMP VGR_Program.S4

// Rung VGR_Program#15
// Offset 93
#BEGIN FMT_COMMENT 
"VGR.T3 - Move disk from Loading Bay to HBW"
#END

STR C430
JMP VGR_Program.S5

// Rung VGR_Program#16
// Offset 95
#BEGIN FMT_COMMENT 
"VGR.T4 - Move disk from Loading Bay to Shipping Truck"
#END

STR C440
JMP VGR_Program.S6

// Rung VGR_Program#17
// Offset 97
#BEGIN FMT_COMMENT 
"MANUAL CONTROL"
#END

STR C500
JMP VGR_Program.S7

// Rung VGR_Program#18
// Offset 99
SG VGR_Program.S3

// Rung VGR_Program#19
// Offset 101
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#20
// Offset 109
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#21
// Offset 111
SG VGR_Program.S3

// Rung VGR_Program#22
// Offset 113
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#23
// Offset 121
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#24
// Offset 123
SG VGR_Program.S4

// Rung VGR_Program#25
// Offset 125
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#26
// Offset 133
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#27
// Offset 135
SG VGR_Program.S5

// Rung VGR_Program#28
// Offset 137
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#29
// Offset 145
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#30
// Offset 147
SG VGR_Program.S6

// Rung VGR_Program#31
// Offset 149
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#32
// Offset 157
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#33
// Offset 159
SG VGR_Program.S7

// Rung VGR_Program#34
// Offset 161
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#35
// Offset 169
#BEGIN FMT_COMMENT 
"Rotate Crane CW"
#END

STR C501
ANDN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y26

// Rung VGR_Program#36
// Offset 186
#BEGIN FMT_COMMENT 
"Rotate Crane CCW"
#END

STR C502
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y27

// Rung VGR_Program#37
// Offset 202
#BEGIN FMT_COMMENT 
"Extend Crane X+"
#END

STR C503
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 50
OUT Y25

// Rung VGR_Program#38
// Offset 218
#BEGIN FMT_COMMENT 
"Retract Crane X-"
#END

STR C504
ANDN X25
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 50
OUT Y24

// Rung VGR_Program#39
// Offset 235
#BEGIN FMT_COMMENT 
"Extend Crane Y-"
#END

STR C506
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y23

// Rung VGR_Program#40
// Offset 251
#BEGIN FMT_COMMENT 
"Retract Crane Y+"
#END

STR C505
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y22

// Rung VGR_Program#41
// Offset 267
#BEGIN FMT_COMMENT 
"Turn on Compressor when in S7"
#END

STR C500
SET Y28

// Rung VGR_Program#42
// Offset 269
#BEGIN FMT_COMMENT 
"Set Vacuum"
#END

STRN C507
SET Y29

// Rung VGR_Program#43
// Offset 271
#BEGIN FMT_COMMENT 
"Release Vacuum"
#END

STR C507
RST Y29

// Rung VGR_Program#44
// Offset 273
#BEGIN FMT_COMMENT 
"Turn off compressor when not in S7"
#END

STRN C500
RST Y28

// Rung VGR_Program#45
// Offset 275
STRN C500
JMP VGR_Program.S1

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"This first stage currently sends the crane back to the "
"turn table, resets the compressor, and resets out detection "
"bit. Once it is sent back to the turn table it jumps to "
"stage 1"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STRN X16
OUT Y15

// Rung MPO_Program#4
// Offset 12
STR ST1
RST Y17

// Rung MPO_Program#5
// Offset 14
STR ST1
RST Y47

// Rung MPO_Program#6
// Offset 16
STR ST1
RST Y18

// Rung MPO_Program#7
// Offset 18
STR ST1
RST C1000

// Rung MPO_Program#8
// Offset 20
STR ST1
RST Y20

// Rung MPO_Program#9
// Offset 22
STR ST1
RST Y21

// Rung MPO_Program#10
// Offset 24
STRN X12
OUT Y46

// Rung MPO_Program#11
// Offset 26
STR C801
JMP MPO_Program.S7

// Rung MPO_Program#12
// Offset 28
STR X16
AND X12
ANDN C801
JMP MPO_Program.S1

// Rung MPO_Program#13
// Offset 32
SG MPO_Program.S1

// Rung MPO_Program#14
// Offset 34
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#15
// Offset 42
#BEGIN FMT_COMMENT 
"Always be Detecting if we have something, if we get "
"something set C1000 on"
#END

STRND X24
SET C1000

// Rung MPO_Program#16
// Offset 45
#BEGIN FMT_COMMENT 
"If we have something (C1000) and we get a go from Doug "
"(C800), start by turning on the compressor"
#END

STR C1000
AND C800
ANDN X17
SET Y17

// Rung MPO_Program#17
// Offset 49
#BEGIN FMT_COMMENT 
"If the compressor is on, and we are outside the oven, open "
"the door"
#END

STR Y17
AND X18
SET Y20

// Rung MPO_Program#18
// Offset 52
#BEGIN FMT_COMMENT 
"If the Oven Door is Open, and we are not all the way "
"inside, move the loading tray inside"
#END

STR Y20
ANDN X17
AND C800
OUT Y44

// Rung MPO_Program#19
// Offset 56
STR Y20
AND X17
RST Y20

// Rung MPO_Program#20
// Offset 59
STRND Y20
AND X17
RST Y17

// Rung MPO_Program#21
// Offset 63
STRND Y20
AND X17
OFFDTMR T100 3000 Y16

// Rung MPO_Program#22
// Offset 69
STRPD T100.Done
AND X17
JMP MPO_Program.S2

// Rung MPO_Program#23
// Offset 73
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#24
// Offset 75
SG MPO_Program.S2

// Rung MPO_Program#25
// Offset 77
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#26
// Offset 85
STR X17
SET Y17

// Rung MPO_Program#27
// Offset 87
STR X17
ANDN Y20
SET Y20

// Rung MPO_Program#28
// Offset 90
STR Y20
ANDN X18
OUT Y52

// Rung MPO_Program#29
// Offset 93
STR X18
RST Y17

// Rung MPO_Program#30
// Offset 95
STR X18
RST Y20

// Rung MPO_Program#31
// Offset 97
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#32
// Offset 99
STR X18
JMP MPO_Program.S3

// Rung MPO_Program#33
// Offset 101
SG MPO_Program.S3

// Rung MPO_Program#34
// Offset 103
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#35
// Offset 111
#BEGIN FMT_COMMENT 
"If we have detected something at the oven (c800), are not "
"already at the oven (X19), and the vacuum is not on [Which "
"means we do not have anything] (Y18), move crane towards "
"oven (Y53)"
#END

STRN X19
AND C800
ANDN Y18
OUT Y53

// Rung MPO_Program#36
// Offset 115
#BEGIN FMT_COMMENT 
"When we first reach the oven (X19), turn on the compressor(Y17)"
#END

STRPD X19
SET Y17

// Rung MPO_Program#37
// Offset 118
#BEGIN FMT_COMMENT 
"When we reach the oven (X19) go down, and come back up "
"after 3 seconds"
#END

STRPD X19
OFFDTMR T101 3000 Y19

// Rung MPO_Program#38
// Offset 123
#BEGIN FMT_COMMENT 
"Turn on the vacuum in order to pick up disk, before the "
"timer turns the crane down bit off. #TODO finish comment "
"here"
#END

STRLE T101.Acc 750
AND T101.Timing
SET Y18

// Rung MPO_Program#39
// Offset 129
STRPD T101.Done
AND X19
JMP MPO_Program.S4

// Rung MPO_Program#40
// Offset 133
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#41
// Offset 135
SG MPO_Program.S4

// Rung MPO_Program#42
// Offset 137
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#43
// Offset 145
#BEGIN FMT_COMMENT 
"When the vacuum is on [which means we have something] "
"(Y18), we are done timing (T0.Done), and we are not at the "
"turn table position (X16) then run the crane over to the "
"turn table position(Y15)"
#END

STR Y18
ANDN X16
OUT Y15

// Rung MPO_Program#44
// Offset 148
#BEGIN FMT_COMMENT 
"When we turn off the vacuum(Y18) and are at the turntable "
"positon(X16), jump to the next stage"
#END

STRPD X16
OFFDTMR T102 3000 Y19

// Rung MPO_Program#45
// Offset 153
STRLE T102.Acc 750
AND T102.Timing
RST Y18

// Rung MPO_Program#46
// Offset 159
STR X16
ANDPD T102.Done
JMP MPO_Program.S5

// Rung MPO_Program#47
// Offset 163
#BEGIN FMT_COMMENT 
"This is the reset button"
#END

STR C802
JMP MPO_Program.S0

// Rung MPO_Program#48
// Offset 165
SG MPO_Program.S5

// Rung MPO_Program#49
// Offset 167
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#50
// Offset 175
STRN X15
AND C800
OUT Y45

// Rung MPO_Program#51
// Offset 178
STRPD X15
OFFDTMR T103 3000 Y43

// Rung MPO_Program#52
// Offset 183
STR X15
ANDPD T3.Done
ANDN X13
JMP MPO_Program.S6

// Rung MPO_Program#53
// Offset 188
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#54
// Offset 190
SG MPO_Program.S6

// Rung MPO_Program#55
// Offset 192
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#56
// Offset 200
STR C800
ANDN X13
OUT Y45

// Rung MPO_Program#57
// Offset 203
STRPD X13
SET Y18

// Rung MPO_Program#58
// Offset 206
STRPD X13
OFFDTMR T103 750 Y21

// Rung MPO_Program#59
// Offset 211
STRPD X13
SET Y47

// Rung MPO_Program#60
// Offset 214
STRPD X14
RST Y47

// Rung MPO_Program#61
// Offset 217
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#62
// Offset 219
STRN X14
JMP MPO_Program.S0

// Rung MPO_Program#63
// Offset 221
NOP

// Rung MPO_Program#64
// Offset 222
SG MPO_Program.S7

// Rung MPO_Program#65
// Offset 224
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#66
// Offset 232
STR ST1
FLASHER 500 500 Y39

// Rung MPO_Program#67
// Offset 237
STR ST1
FLASHER 500 500 Y40

// Rung MPO_Program#68
// Offset 242
STR ST1
FLASHER 500 500 Y41

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"State 0: Listen for Doug's instruction to start module."
#END

SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
#BEGIN FMT_COMMENT 
"Am planning to add a button to jump to a state where there "
"is a test suite. To run conveyor, and ejectors<br> <br>"
"For now, goes automatically to state 1."
#END

STR ST1
JMP SLD_Program.S1

// Rung SLD_Program#4
// Offset 12
SG SLD_Program.S1

// Rung SLD_Program#5
// Offset 14
#BEGIN FMT_COMMENT 
"When the light barrier is broken, turns on timer to run "
"conveyor belt with disk until the middle of color sensor."
#END

STR ST1
ANDND X35
OFFDTMR T200 3000 C1600

// Rung SLD_Program#6
// Offset 20
#BEGIN FMT_COMMENT 
"C1600 is set to true when timer is running so the conveyor moves"
#END

STR C1600
OUT Y30

// Rung SLD_Program#7
// Offset 22
#BEGIN FMT_COMMENT 
"When the timer is done, move to stage 2."
#END

STR T200.Done
JMP SLD_Program.S2

// Rung SLD_Program#8
// Offset 24
NOP

// Rung SLD_Program#9
// Offset 25
SG SLD_Program.S2

// Rung SLD_Program#10
// Offset 27
#BEGIN FMT_COMMENT 
"State 2 is where color is determined by checking if the "
"analog value is within a range, and conveyor timer distance "
"is set based on color.<br> <br>"
"Need to integrate a counter here still."
#END

NOP

// Rung SLD_Program#11
// Offset 28
#BEGIN FMT_COMMENT 
"Subscrib is to get value from color sensor and convert it "
"to something the HMI understands.<br> <br>Need help with HMI"
#END

STR ST1
SUBSCRIB "4 WX0 V3200 1 0x4"

// Rung SLD_Program#12
// Offset 33
#BEGIN FMT_COMMENT 
"The disk should now be in the center of the color sensor. "
"This function checks if the color of the disk is in the "
"blue range. If so, sets boolean value C1601 to true."
#END

STR ST1
RANGECHECK V3200 0x1 23000 22000 C1601

// Rung SLD_Program#13
// Offset 38
STR ST1
RANGECHECK V3200 0x1 20500 19500 C1602

// Rung SLD_Program#14
// Offset 43
STR ST1
RANGECHECK V3200 0x1 16000 15000 C1603

// Rung SLD_Program#15
// Offset 48
#BEGIN FMT_COMMENT 
"If C1601 is true, Off Delay timer starts output is set to "
"C1604 which when true runs Y30 for timer length."
#END

STR C1601
OFFDTMR T201 3000 C1604

// Rung SLD_Program#16
// Offset 52
#BEGIN FMT_COMMENT 
"When C1604 is true, turn on conveyor."
#END

STR C1604
OUT Y30

// Rung SLD_Program#17
// Offset 54
STR C1602
OFFDTMR T202 2000 C1605

// Rung SLD_Program#18
// Offset 58
STR C1605
OUT Y30

// Rung SLD_Program#19
// Offset 60
STR C1603
OFFDTMR T203 1000 C1606

// Rung SLD_Program#20
// Offset 64
STR C1606
OUT Y30

// Rung SLD_Program#21
// Offset 66
STR T201.Done
JMP SLD_Program.S3

// Rung SLD_Program#22
// Offset 68
NOP

// Rung SLD_Program#23
// Offset 69
SG SLD_Program.S3

// Rung SLD_Program#24
// Offset 71
NOP

// Rung SLD_Program#25
// Offset 72
STRND X36
OFFDTMR T204 5000 C1611

// Rung SLD_Program#26
// Offset 77
STR C1611
OUT Y34

// Rung SLD_Program#27
// Offset 79
STR T204.Done
JMP SLD_Program.S1

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STRN X40
OUT Y36

// Rung SSC_Program#4
// Offset 12
STRN X41
OUT Y38

// Rung SSC_Program#5
// Offset 14
STR X40
AND X41
JMP SSC_Program.S1

// Rung SSC_Program#6
// Offset 17
SG SSC_Program.S1

// Rung SSC_Program#7
// Offset 19
#BEGIN FMT_COMMENT 
"This Stage will be for looking at the High Bay Warehouse"
#END

STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#8
// Offset 27
#BEGIN FMT_COMMENT 
"If something is detected for pick up for 2 seconds (X42 is "
"not on), write to MI600 to let Doug know we got something."
#END

STRN X42
ONDTMR T150 2000 MI600

// Rung SSC_Program#9
// Offset 31
#BEGIN FMT_COMMENT 
"This means something has been dropped off, but is now "
"being picked up by the crane so turn off MI600"
#END

STRPD X42
AND MI600
RST MI600

// Rung SSC_Program#10
// Offset 35
#BEGIN FMT_COMMENT 
"If something is detected for drop off (x43 is not on), "
"write to MI601 to let Doug know we have something"
#END

STRN X43
ONDTMR T150 2000 MI601

// End of Code Block SSC_Program
$PGMEND SSC_Program

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierOv en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInle t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierWh ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBlu e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOut sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBelt _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"T3","T_HBW_S6","",""
#END

