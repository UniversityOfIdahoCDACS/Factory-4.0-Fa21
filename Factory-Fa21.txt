// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\Nick\Documents\GitHub\Factory-4.0-Fa21\Factory-Fa21.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
49a435eba74942c754fd86523d5ee4b48dfbb9f5c72e8aa55a927afaa301e79670e68c2dc7af9801
a9aba95a558e46cc6ace2671c9122abdf23447fc822c7d8736611960dc4c1dd472269713eff4460d
7bb0d568a5e67ba349b98ac6b5813ed2c26d50ea380b8d067a1d4144f8d1d6fc3900bbb3c2a83672
16d607501c45e392f09044c79814b1b84f7ef99f80980f20ca6b43d0c1301c9b0989113ea8bd4e98
50da2e7c159bc72c9f2b3e97ebd3119170157923dc45d8452df20e86bb9f2956c6e689ea24e40197
dc15972619c5424e5a656b434d880ca41dd90513906550b2e320c64a2c2dc6f31138b7ca16b8aa8f
8e5b774c7a547d96647f463a2de06ee194de6860762420e3422792e65b4698cf467bc778d57938c2
8ca15212adc36d11908a86ef3c41f99ec86dcd92715826db1620dfa5c7ef9121ef9309398def94e3
ac0d03e3ba17b7534ea70682ca25ca95fad28492dde46012bea8245f974d22e504d9c23fa7e36671
f62d16dca57f9733096936203b4fc9bf5c1f4460be0208b8081fee6fc99fffe6521db0363d126bd4
36c97cb7e21cadfbe2ed07ec786075c860f96e9cbd17078ecc29155e136e2c00b68ad5aeea3a2600
8c671c730730569bc17be768947109257c8f857d633bd9533fb237ef8cbe6f9328801e6ef81af27e
8010d64eb625f9066ca589e8ff1dbbf8e5e170777e322b122f78d43593024ed315e9e30b0da259fc
6614c4939e856adc93f1b6e1e74e7e6c53f7d97e6f526139f530baed75ca119b85b0fbf794c6f6fa
f8940559d8a88c2968575018e475265e4c2ab860023ce5b26b44a6fcf9789e3116d37009bece4042
4abea7c9c347e3d60c8a488deb6c4a42da0b1a81448ffc852336f912225a49c4987fcb7052eb7679
9905b7360e271feea8cb6cd1df9f1f107ebcb60b022e74bd27af70ad62a9b4e4687fca3e05a2662f
f6df03a183adee03ee67219ef8fc68721f7d36be00e6d6af7ac56ddce579cc952ec92e6bee8449dd
3e893307775d68c7d5df4cc855e29c822efc129b30b3dc2614fa458bf1bbef59fa1424dcb5280659
93a0418dde3e61b7a7a0f7a3810852b0156fac200470ffc91656a2a669cd5779ea3729f9ca96900d
d88eb626053b12d8cb175c2d8242b89f3cf960fc44e6cd657dd773720257095e43a1684eb7b7cc7c
30555b72d6b38fd65288a44c5e831eeb7e6eaa0a6e7826c9d9ccad07e1d4fefa0576f8a79a70d8f4
bd58443a24703e8040711db1cfd8fbd21beeae4fbb1be883081c80aed72f7afa5fc3450b4a6220a0
c1a96aa20132f0d8ac729a0d0359ab7ed020c9e1834364fa018238e21c3cbb77a1fc8303b4f43260
410479159c235deab9e646eae80516057d05078b6cc8153dcf1c32b5c764e8f0667c2876653886e9
beccb3ee9bfdd7a98e60e7a9b05f08f2e754c199cccf6c0ff19826211f7abc4ffd35a800316f7056
09389822ffac0b782ac7640f2826065ec4209ef303af7fef7f900d470cc876bc01ab2d5f1174c271
cdfac25de1194c96ccec6c02ea7cff4c13e8976cf8cc744156375b3fabe95ae160cc2fc49ae79a50
48065bc7a07e8c4d105f723af6b73fa6824d55a0793a4022f672b2dab0840655449e86d98d791c65
477c95aa0c73d50825f05e825a6f4dda6eac2c4d8904d375543a35b5cf2536f6f1c5f980ef8efc11
c189a48277aa7489bb9e988d6fa8a1b8b3daa4dd90d15e54b893412779fa387e58dd5bf71eac7215
6bf625aa2f71d1f361a3fce731709f6b0ad237d4e99924bc1a25a48491f309c49b689f8837deaffa
0bdf17aafd0c67b29390121fe58583ed7e8505466a8468b532f4ebf746428a1b768b53e032c66621
ce3ad7e8888f421dee094a7fb9306a79b21f83965dd6e272f2457185f0db59235fa5643250a1ccfe
b615e8be29c801dbd45fb67e073d7b899cc4b7acd6546583a9a57732fd55a343b04c5433eae05a08
b3109ecb291159ceeaea5d4569b7f51d61a847b022e87f5e5f340e532c3da803f17cadee22ff2f30
0759b09a9a46459b47f39cf67df2d2ef61d76f2206851133f03c62472fc5db7807ffafdb206d1028
ab47521a31381c8e31fbf4a41055746dd2c100e67cbe02c842e97113f9d45a3f9d41b7469ee80bae
0d22ef59f1077edba1b68bb1ac0be924ad0220fc9207cdac0704c7b85ff095809dc7c724f99a1c76
f577e3df657dd3965466cfed9efc4de9eaff13c01f7e7ac46f5d914edd990230a2500f4a13b87a86
65ac9e17f58654b2161501e9baa8cbcf79f2c0ec30a327801853dcccdf8de538d15e665311b340ec
c42a5f9e40a83de715ad7b7b89da6c9e658f377baca6f0312f8c58606583b9165aced6dbd949cd80
1caf4064729fc1711ff958749a0e30aea38cfd3105e0447cd3c9c9602e13ce3c8435a3b33dc762ff
233f3704cc9db0ea4815db20c4709e81ed054d24cea329672d9a67d9d7393821814a54e4ff736a21
d15c8586ba8b16237d2d5a4b24f0867a64d49975e6a51c1b91b88008014f4d1b1f40b36227940e13
95d032bc56bdd33307f604ce3ae2f23620054e27494f5a36eb0d30742907046fd8501bec7d7b04bb
ed4cb14412d96ac2261673bf38d666a4cf293a5ac8297ac913ce453a13e6226083a7320cfb595fad
e6b699e87bc061dba144f20f873f42bf12e6e6b8497be1e307fa3fd6bd73b08e8306e0002eae7abc
7dbea6220ba9ab5e871787636ece7c96f4368c518ec6fc2f0d4d11ae9bc571a36208d2b5449d9a8f
d89c580f9716487c2c3ef47bcb0e65f61a592c555e457907377ff9d4fe6b77501a656337f2939a98
81234217ce903db7055ea14d71cd4dbdd4f268aa8d21d84fb58803a72ee9bc51aa409d922adb5fec
aa14f50b574b05531f506d69e5cb95c633e9b6a910f23771874971bf0241ddbbaaed38a9b3a73602
04b551c9d0d65d35eb97afcfa49598610062c16452f69d35d3b1aaf6a3469be35daa154912da05df
35594ad016ae8803a9b9e1cc8a6be8f9f736310cc94f5f68974d572e14a303debb44ccf401bb797f
2d714cf73a3c816dd4c5891888cc85c175906e69d8d0eb79e8100c544d82976e6bd8c33081e97333
340bcb250ff998c8b05792a295e9f14c0d35d19a0b1d0c085e6ddd3a1a50a5c501bd2cb00426a809
bb8f96d001124ab5d4cc21036a356d781fb3d59d6494e73a9e1a09d750300c2e75ec97a50f853843
0cf49ff7f485f21c8c03e438bff7d148e855d2e658a7037601bf9d2396d5f879daf0e8289c5eaf1b
0230051300521a6fd20ad576d784060356bf32d4c10a247a8e24d64712d71eed292dfb339acc6117
bde0dcc6ae27e122b19a4279e040fd7aab75619b9c449c40d1206b8b3548d7fb08771d14dcd4f6b4
fbef3dc9890dc5211d17e9bc697ed39422bddbabc97026c383a2ab75a1440732afb2d200761b86db
a862320c465c7911fb62a9276692509640da7136801f817024f2576a500f846cddd2796591e7027f
4c69daf97dc984cd134465ae035deb435f7dbe7981840adc9d7a68ac94bde973882d2c71ec27ed89
a973d38db05641d3cc376cc06df0aa9cda9b7c6eaa90d99a98c7335b778a5d262e0135ff6beb82bd
73d6c648a8615a749828202bec8bb99364764e1bd4d19f774bc5bcab91931fae76076e20594e0968
6f835088df02c9d4a7488e1112cb48f71925ab12028c5e284d5ff8e1cf94dc9b7ff3e76408ed8dff
2df84449a0538085bedc9966468163498f721efbb303cc6c2b5acde6eddec2f3edc322e0eb63f949
94c780d14e675888a879431ba639f9c3f59bf67e11c709d6c8f3c8e28597affad5d15fd204e6b1a6
a8c549f820e188fe6e02cff42ac2ff3ee1ffc4fb51ca84a6dff8cd9df0f4763029c4aa9ecec6e401
4640f8aecf88611c151ed9be84ae8463f2321f2a4262fbb4f76d868a28945ac5b4cc40c363e8c846
eeaf485aee56b984f463a8a24b54657bd503a90e2074227d6efac2b7f2a37feb013b63de1e0e72e2
42c9b799b4b8c21da49f560d976cc9f9ccccc7f865a62a11bbf2711df8b00077965f644aa494528d
93685846dfcdf5a0f3b65b739bcca9abcd8e71a9c1309a91204a3e7f0b5501a095e7b28a1484cae8
91be8b9f9f80aa89ec3b21edf0a448e0e649e3bd94ddebd4e0fbacd75eb5cd0abb4229a280a12f1d
5f1c1b380310fe82cdce33e303fa767efc3c5bad5df18ad5f7e48abc1b72ae742c6679435e712e68
0bba7ac95beb5ca84b2ce84b3777728e38c41094879c0ff093e62137aee0554a8325809fa5a12395
73fc8f00cb3f7f935177ac4c8310ff744332dd3b5cd05191c32698f0b4367069842f4f69b8ed7eb4
7465fd427877bcf76f60c935c7ab3c406346e5c6601b84af70a41ebb32de3b1b6a2898b2a9cb13a8
a239369f837f89c8c1500533eb40e89661a8924ca61bbab17e99960401c4c499d9561d27d5850152
8730660d12dc47f7f023a111ca08b379e0ef46da35772b542cc5453184f83aef69e6cf8749dab23c
70a34f6020c003f0821681faf549d6e70c243921182b3c82cbdea83c48dd2ea7dc9a856fe5b90880
617effe441961ab327d64481ad29ca6499f476275b59660ef94b51be87282fb91bbb1cc0afb329a2
8ed7e148ee4eb68483a5c33eb84483a198ac49e4766097689f995cb8afe1beae413cfc6e47244867
4a133775a4461d42917e6b740a62aa9308bfb778e3de775556c4e66f17cd59e7d0a3c7fb5e408d95
6287f41fe3233b5c5f0fdb1a13c003332a9b90285feab8253fc9e8adf2602088f558ff4bdba123a9
56fdedad0fcf6598b9fca3e9044cc92cacfb7e0d48f75d24b4ae6854772308d00be478f6d9c1927f
e2d00f0432d62e060bad623292f46fb473fe303be49d38899b2fc4470b982c644def3d61c4e9c95c
bc634b9dfd97936111eeed5d8597706ede3794398473e99fa93a6761daf36abca23a28130bb1409f
3c113da84897bf69097b67d6116d34fde030d7cc50461b83e7a9cb26a80fbfdc0c0184b951d49a9d
dae66c72d5c1494a8b1aa0292ca24ece4c33cf75ba6eaad27fbc9fae4908330d18d6093710faf93e
1e77aef823fd93947eb6ad268e3052662c2f240e7a3474886a7f90d1962a80d7879a0959da3aa0c2
129be061674ebdb09233824729ada2c4a492bf11ee04ef74e3b0aed4a9a94d05c04fffd408ebacef
c76a4f97fea99a2cc22c4cb55d4dd3f4a61d1167515998662d2944113004beb13e00d128cfb8ca63
2f994e51fb5d30dd55feb96005c4907c6c512d8634d0bb72e0f05b166e0698a85272e67da08d953a
8e44e3914d0ded9e6717ccced7109ca3c2e01981f70a1a58bda4af35a3602846dee05206b689670c
0c3c038cf4ba52ba90755102a2774ad8d8238be9d29f86f1c81981cfa831bf4cc89db60c6b17b6d5
9428ae5cbbfa88b08d138e2f9c07dca963d004137a91de22ab80fe67005ebb1b7cef34609814a11b
e9ef9d4f111939b377db50f24e0c4c769364e2d30f54ced5524f0426e401a34424bde8b7cb3681c6
274f90bee8b48825c9cc494762654efa17924023c4faeb4a153ccdfae198db478620e395a1b9e962
031ab86c38aa4ded150fe836bf0a6deb9ec9cd3b731480c3571741201909c3a620cf65da07ee7d71
9d2dee414718a1b12157d708dcf82d3d2991ad26acebc22646fda4d47b68e0fde496d29dd9760952
3f79e1b1bfe3581038019f27d612718403508f0dc362b9a2533488b6fffd81ccf94cb9e970957e28
375a777bda75c7deb0a8540c4179bd4db0102392a82dc9c3802df2538b91d57cf560721eb9e827e5
2bf07f15df04470d4385d6e5c6e0475bd1ada00776b45df9f6c707339043a3d84ff266e411e5b27a
74478d88fcef4a0b4270e7422dc954cd8e585e0125ddc97e854fb1bd094b9ecd9cc2217fb8f7090e
16b14b0cb889266d8f4d434c42d68692544c18c5dbf53752c704ff651299ceb52d7fde823588841c
0e2d7042984d06f1c01586e7f7927be474b7b6d8bf5fb62b1e906b2b1ce638bf9bdabecaf719bda9
d1e493437e06bb66a690b273d1d01f361ce76e0ae869c3e8a0245abcb7f390ed6d837ad216b40395
a8b457611c47c80a9cff32fdffc88cf5c14eb9ea8a22e724993e1c2cdc6842bfd14c8548881aa9ed
b91898e06a0375b6c639a789217021afc6c6c6e6e7441ac71fec689d86a865a3e9d2d688aa9067c2
eaa2ee98c670c4256b2805d78cc44f5829d58ae3e2e3f9fc206db488baf82653d3076fc33b0eccd3
e21326c05fdcdcbb698e22fed24bbf987b1a15615a22638219aaecb1d3294a979fc24462e7142a34
14f2db2a3b54b1af2a3e953d5485eec42ce9d929d4169556550f78e8b741bfbb8ba429af57481c43
1ada29c8bf8c8d07e3b4430552fc119e9c103d08ac789e30da4bec432bef10a6c938bcab02ea9f4e
25cfa7a28d7a8745a85a4b844f9a5745d3218c843d00c2cb5ba92febbe005d623d98523fc5675f4e
4a7768547a478cf2a563b84b1dc83828fdbc30f998bd80a9cccb4000afb097e7c21e0dfb2bd913c9
673b6c6783a6cb80c0348cc407a294b6d03819e0173ea3648709c538d33ea3d41e28c4d3e25537b4
a04ebfec7719cb306080db6e101926102e71b3799d0bd845575df529d3d6534949c7679ef272fb77
f68fec4f9eb00af93b37f12ac91e090cfc366cca62614c29b58774a37e02506f9f62a0f07cedd8f9
96bfba8589004e0b49691c107dad67f88e54e42d177aa011fac1cc1f307d485f22fe99e607e32089
063deff0ab6d28b6f923d4677077c88499feffe9cc85d0fe4fafc3932f12561131225c8817ca18e9
939f8eaae5bde5965a630c852a82ab6577fca413411eef724534c5ebc1bb2d7d0c8e39d21b153135
6895f9f6d1108b806670b4521171a226146f4673111927e9b15ef815bf520a1be995076d682c3481
c488213b1306470c44dde48670857723d28c9d3e5d12feaf1ab8208c7f1bf23bbb30ce4eb6e90b93
edee4e23ebcc1bc5a9316aa6ae6d00914b7267e1d1c6539347d1e1bbdb449b1dcb77c8c5f17665d5
b9c41b736628d618a4645cfd9d686c82b0a4dc554ff82d332be7a345fd5c56eb9cdc2edb2f936faf
5ffe49cb8fcaf9f3e0648cf05d5255dee663ac275c47bdb4139c71da8c753f66c3fcbcfbc70994ea
8cf7965a08d9790dc23d2df0b63cb082e517d9cffa8239a294b46f31e0f814a848667e41acb4069b
3e22902f37782eb2aac63222f5e912b815d15af881a22d87e6987df91aa8decfa4c0b6482002f94e
8fb6b6e0b28ffaf448ded61e96dc76c3e122d4b2b1e011ce2b5a4a7c7d1cdebd6923f6d2bf6ec100
a8ef2ccb69c98baf86f0a327c4230c13b1a81eb351063783fc1c0229c0d1f956a52a5b82c18a79d7
dd204663995dafe4a03336b49fee00c2761cfcacd9e0fde4c7ced61196654ee5616e9dc0968bc621
54db5eb04ea4bba7bfb07eb898997c6d219b414122fe3033ef11ca8dfa45058105af66bc7bd21078
90857037fd462b3f36c56d8cf6612dfe935e555aa92e0c7b6b01dea21f01b27fba06b2c3cdf94e6f
9032df0d696373f3e90211a7394b1a771d592769a49189b84a2e8689d54bed81ac1c59442a7cb2a0
d1afd0071f810b863421d5ccfa3115707a67f391a235d6b841b2fd04bd8b2814ab09039a2f808030
1637c3bc925c36901c18399e462011ddbe04d1ab5a556f93b58c62022b33b3228e7e2e32dab3df6b
c13b1e8a7a2a7a078d8bc1c5eb95be79307bfed0855f18e9eebb4b60d83ffe3b28c2672cb300ddb5
962dd24b349b88d4167f418863f7799f9db9131c6282291da7f60a53072ac20927d2392995184cab
e0d3eb908a1abfac048aae7551d81627a1cbb093b9b92b3b22c87a357834826b53bd2982ab548058
090e795e75433452a181186e6b660786b387b1d54a1720c61564258fc6a44fe67ff45fdf8effcd52
5aee0412b50e9caa3fc9630b4befafbe90bf2221235eea56d52ab181385a475f50bef5ec34014132
2cb9eed74ae19223497e3641b7d1142867cba2fdb1f89551acab1f5afd0812ef59e5e6cc7d201fd9
35ccd05b1bdfbb5c05ee04c4f7884f29a8f284feb7ec8f72e5b9feb8e30fa11c909930b469337566
f0acc2ece2e518a471c4184dedf392d8de9c9d0dd37b19776fb129aa46e41547940df26e5c8cce7a
6dd700d7e382339599b39706e748836717e36cc9fa8c68997851154a868106df99f97c9ddfb6a4b5
2e64b7e79d5c69b9fd75070e56503e97f5a4fd41c65b5f5b464d406ede0627cda9fa36d6829421d6
56aaf469d4866677f4a2add4799617aaf556959dd081fd0801ee10017b83285a4641703f78a56826
baf4ff4dd2895be37d638e17cf9b26358ed03d3eb7e0881b3224c36046304bf946a59ec7cb1d95f2
477ceebe9ab2baa7c7e515a4799b312c11dca94cade3262f0f115ddfccaf109134e38b30f5ecc554
790801fce3970f4deb512e63c8c769adcb47f3e68e806eaba4d04c33393e98533969fd9360f2e83c
4da1362dc8dee213fbb4a2977edef21e6ee2bfad61744849a44535c9052e019e650e43f48297190c
49debd21aeac165ed5526a992fd39dd717d91e6f36fc83b7d0b63458be0ca0e3fd565ab4559ca9c1
95909e67c465eb0cb955ce8ccb1762fd3eaf2a2c047a3237d4a1deb71d6a3688fb20e49aaf7294ff
a57e89928afa67bca9d46d22a7068a5d16c830bfa84e296bc38e2f348b7f7a4a6212abbe05a42f53
c92e32ce90d77ac67712b292967dd1252140cc4e7ba5f705557f3ccea58c92dd0d98517b7c517679
b94fa7545ac2023985605c316e1e63b3519ce9fd79159d49c3efd62e37bf6c8dfdb7823647522e43
e1d14287554dc8a8f93dc90997b8495adb7d3d9f92056499b27266a25e69a30228ec08629684bb74
92adfc9d7425fa8e7a4e4e81f743682aa7ebc1b5bd9ca48f0ab411b77a91bb6ea0dd6ee9063847de
b3c77d5f83c95e108da847d3b7e2641e5a246671e6903eb55aded52be217e764e418040ba4e30887
33dd6c48b064f8830f242388158aa9d02d0996ec8f56169cfc92cb0f7d4dca844f45f06a19756ad3
260308c751eab545b2726478e9f4b7ab6f6ead743e1c2539cde83426ba7a2fea8666f67e592b7d12
ca23cd095c8d0e40cec07d3efdc686b72764525045082d78edac9c6b22edb6eaaf86d23eda49e749
d70a125472657d17889a1ce5a5de6a7bc4e295f2a9ab63f703d427efa0488dbeb64cb0a7246cbf30
e08801f261f280de77e0ff128de909cb869d1d55dcae69b6a1f6e7ecc05369c98760b5f34c4499ce
7d0cb704024df52d63cdda92daed255322556f8d73f46cc756f55bfe31f20b72c5f22f1a45f254e7
d8cc8c82e896074213f2aff6e0e75ab6d182c3e91bd6a9f7bd2c60eb50cd386c9d34d343422f70ff
d3aa48ec463c7f21d4c48a9ba189f53d3a857bc65fecdf769646a38b3897d7214e87ead9dc890fad
9e020a5caaf3a7f74ca8ec8c5f93cfef789fae1b440c9d5567fd69d2dc3ab85d55cb1147b666f7e1
321f3889d598b271e372bb79321aefc2833077499dd8283872d5bdf3ddc32f7fcc43712f8c21472a
cab1e0a6d6c522bc77f49a262b179469f3316f1885cc1310b962b4d397842e46435c58f9611f272e
a94f1f162418aa3a47d730b8a79bb4062208d8bb49d6fc2986b1d6fc4bc940006baf7f2df560591f
6c8ee1cc2ee406a5286dfea58b7a807ef9e2f90dfbea4b0f62fc3be5f2e3136bb7b7f2a3c527650b
6e01a2399e62e6a145e3ccf985862144f44beec00a882a0789ae761698b548d07b1783b4f68df1e3
311f9affe56edb3653112eca236463a383403ad93ae939a94e039e3f53ef28a6ede8352aaae20873
3784cd9ad40d08b28d92019a9273e404456adb92ebbe551dca88dcc84322456b659a2b9d8256a205
e068a4b788061aeacc3c887a9bee466fad6edc8011ffa9f35ff1dcf868c2430d8679b0755d1f1bfe
d936be2057bb3c62e4fd6da3577005dbc2bb7148b75b85c555f3c046277597a1a068862588cec22a
46450bee4b3defa89daf73628c90e689c32598021ec52a4abb47026cdb80b7ca9dbe061c5864f20f
a375e80d0132a0b444f289147afdde47fcbf8b7202d0084a345a8b9320f5a3cd815fe3bef61d1541
31e12f29fe9c884de189df0b754612e2205af8f1d7cc14a63221d2a94c375e565ba943723596cbae
f711a55775b4fe7271329ba749da14cbb98aa8e0061bfde243e2ecd3616992135fceb55e993cc7cb
900db33dac3924330674b84e67d991b445b2505fac261f925a2540ed283ac0320577ac7ff1943ee6
378913f583d337fbb485323fb9b7bb2dd85b46cfb75b5f28d2ad7ceae4703b1a6c6b6e6c03dc64e0
52e9d4e16619b7ceaba24fa06bc9bc05f91bf7ef2a0483f26c57ed35559bef521cb142d243e33aa2
e23ff265796845b6efe2123c6630d2ea77f03bd026770c71699edff6ca182ddc0e46bef980c8293c
ca580b390d55e0dcfa0df86984576c2e8ba54c9c8f84133acea2fafb50567b689d19e66b41407496
31c9c2eafbeb124827a3269882e4913caede98ec3ea4aa8f0b9c0dca138b1755df246c2161d30548
30bfc43981fdcd03a232de64044bec85808ab53f12234fa26c4304087f43e896733714f339be470a
e3fd55833248c70783b5a5754c5f356d1166fe3e2b913b632c5b9ed13fdb411cf9ecd7078bb4fe2e
7254358d2557e573580697099e77cc2118db2bd7aef8594b1a626073609a214a95147858d3a1160f
4ff1fa88f3ddb01fd40e016354086995aa0421f58a5b7d4b56af61deee26aef8ee6cd66e7440bbf2
1251849d072c3a2e617361f08ab8628af29dc744b28faa57675fb661f9eb128e31f73deea61cb845
d47c0b862799fb903c5b10fa2f1196fcd4ff9721ececd01c08dc48f926bcabc9db7ff335d8ae2340
d1356ebdcb489d69e669fbcbc6f647b8c8ecea7ed5fa2fead895bd49963cd638435370760c7072a4
ab868f7a81241b0bbf9b24bed8e9930bb341ee501ef9c6b295573ed28367a0b7357a83f49960b4a5
57c75510131725235a4249edb3a856d7b59f2fc026db56703f772a462c771707099991023834d78c
269670cdc0b6fe78c5e4bc17ce5bf60d63e22733cbfcc090f567fcdb9c2a30ed48746691452bfa94
23ee851f6c5c9c6e65c3bc56d576abe4cda1cacee97e9a8b8a85ca5c0b67567f71369058794f6646
04327875a221c5e3b7471b24a57c702f81a1993015f96364434896830cd3a3e39c143988779fa16b
4e73f743aaf788ca0420797ee1ab69443086bd392cb9910c398a90a788e63320769c14992c56dc0a
e8ced25f16fb5ca55823f1df1f338228c3e5bf39ec482c20925c4af6d7eb37bcde876160b0918388
b863708362f314860a37716fec51d5e5ab9381b5c8fef4b05cc35199cc3f2a9b8fd2d98d257057a2
2c82d2cc25711dbafb54f55160b9b80e412532b2fc3733e23aacbb6e1fc7f743766d9ecc25ba47c8
31a3eb59c9d80cfb34d2e99518f8825f1690847e6be3da4b9d16e944a7bbedacbcc929bb44e6eae6
a3a553b02746efcf2248f6a5f985c8a662d5ad6dfae7321ff0e449e5258e0ad8eb38fea41c43ddf9
6da5bc0b20c38caefd72bc8d02cb786e6fe9892ad6c18b24080b12cae55d2f0796b91a9c7bae7809
bec2c35dd61b3d0990e39f2a68b83cb91033cc0ba870958f13768eeaff44534c45fcb5bebe895572
c5082ab7b7de592786709aa8e9461b274d62d0877418aa438b44d85595c13329a864
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 HBW_Copy_State <Virtual>  0
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 PID_0 PID  0
 SSC_Copy_State <Virtual>  0
 HBW_Encoders PROGRAM  0 -1
#END

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"Copy State"
#END

STR ST1
COPY 0x1 "4 0x0 MC101 C101 1 0x0 MC102 C102 1 0x0 MC103 C103 1 0x0 MC104 C104 1 0x0 MC111 C111 1 0x0 MC110 C110 1 0x0 C130 MC130 1 0x0 CT10.Acc MHR136 1"

// Rung HBW_Copy_State#2
// Offset 21
RET

// Rung HBW_Copy_State#3
// Offset 22
NOP

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC400 C400 1 0x0 MC401 C401 1 0x0 MC402 C402 1 0x0 MC403 C403 1 0x0 MC404 C404 1 0x0 MC405 C405 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC3 C3 1"

// Rung VGR_Copy_State#2
// Offset 23
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC400 C800 1 0x0 Y39 MI400 1 0x0 MC401 C801 1 0x0 MC402 C802 1 0x0 Y53 MI401 1 0x0 Y15 MI402 1 0x0 MC403 C803 1"

// Rung MPO_Copy_State#2
// Offset 19
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MHR1600 V3200 1 0x0 MC800 C1610 1"

// Rung SLD_Copy_State#2
// Offset 9
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 C1200 1"

// Rung SSC_Copy_State#2
// Offset 7
NOP

// Rung SSC_Copy_State#3
// Offset 8
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Mini Factory Fall 2021 Project For CS 453/454/553/554 "
"Advanced Robotics I and II<br> <br>Date 09/17/21"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
STR ST1
RUN HBW_Encoders

// Rung $Main#3
// Offset 6
NOP

// Rung $Main#4
// Offset 7
STR ST1
RUN VGR_Program

// Rung $Main#5
// Offset 10
STR ST1
RUN MPO_Program

// Rung $Main#6
// Offset 13
STR ST1
RUN SSC_Program

// Rung $Main#7
// Offset 16
STR ST1
RUN SLD_Program

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Encoders
$PRGRM HBW_Encoders

// Rung HBW_Encoders#1
// Offset 0
#BEGIN FMT_COMMENT 
"<center><FONT tsize=4>HBW X (Horizontal) Encoder "
"logic</FONT><br></center>"
#END

NOP

// Rung HBW_Encoders#2
// Offset 1
#BEGIN FMT_COMMENT 
"X Encoder Up Down Counter"
#END

STR C51
STR C50
UDCG CT10 DST511 DST511

// Rung HBW_Encoders#3
// Offset 6
#BEGIN FMT_COMMENT 
"Encoder Right. Move to Conveyor"
#END

STRPD X8
ANDN X9
STRND X8
AND X9
ORSTR
STR X8
ANDPD X9
ORSTR
STRN X8
ANDND X9
ORSTR
OUT C50

// Rung HBW_Encoders#4
// Offset 22
#BEGIN FMT_COMMENT 
"Encoder Left. Move to Storage"
#END

STRPD X9
ANDN X8
STRND X9
AND X8
ORSTR
STR X9
ANDPD X8
ORSTR
STRN X9
ANDND X8
ORSTR
OUT C51

// End of Code Block HBW_Encoders
$PGMEND HBW_Encoders

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
NOP

// Rung HBW_Program#2
// Offset 1
#BEGIN FMT_COMMENT 
"Initialization and Reset stage"
#END

SG HBW_Program.S0

// Rung HBW_Program#3
// Offset 3
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#4
// Offset 11
#BEGIN FMT_COMMENT 
"Jump to Homing Stage"
#END

STR ST1
JMP HBW_Program.S5

// Rung HBW_Program#5
// Offset 13
#BEGIN FMT_COMMENT 
"Ready Stage<br>"
#END

SG HBW_Program.S1

// Rung HBW_Program#6
// Offset 15
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#7
// Offset 23
#BEGIN FMT_COMMENT 
"Set Ready status"
#END

STR ST1
OUT C130

// Rung HBW_Program#8
// Offset 25
#BEGIN FMT_COMMENT 
"Task Send"
#END

STR C101
JMP HBW_Program.S7

// Rung HBW_Program#9
// Offset 27
#BEGIN FMT_COMMENT 
"Task Recieve"
#END

STR C102
JMP HBW_Program.S12

// Rung HBW_Program#10
// Offset 29
#BEGIN FMT_COMMENT 
"Task Reset"
#END

STR C103
JMP HBW_Program.S0

// Rung HBW_Program#11
// Offset 31
#BEGIN FMT_COMMENT 
"Manual Control"
#END

STR C104
JMP HBW_Program.S3

// Rung HBW_Program#12
// Offset 33
SG HBW_Program.S12

// Rung HBW_Program#13
// Offset 35
NOP

// Rung HBW_Program#14
// Offset 36
NOP

// Rung HBW_Program#15
// Offset 37
NOP

// Rung HBW_Program#16
// Offset 38
SG HBW_Program.S7

// Rung HBW_Program#17
// Offset 40
NOP

// Rung HBW_Program#18
// Offset 41
NOP

// Rung HBW_Program#19
// Offset 42
#BEGIN FMT_COMMENT 
"Fault State"
#END

SG HBW_Program.S2

// Rung HBW_Program#20
// Offset 44
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#21
// Offset 52
NOP

// Rung HBW_Program#22
// Offset 53
STR ST2
JMP HBW_Program.S0

// Rung HBW_Program#23
// Offset 55
#BEGIN FMT_COMMENT 
"HBW Manual Control"
#END

SG HBW_Program.S3

// Rung HBW_Program#24
// Offset 57
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#25
// Offset 65
#BEGIN FMT_COMMENT 
"Manual X Left"
#END

STR C110
OUT Y50

// Rung HBW_Program#26
// Offset 67
#BEGIN FMT_COMMENT 
"Manual X Right"
#END

STR C111
ANDN X0
OUT Y51

// Rung HBW_Program#27
// Offset 70
STR C103
JMP HBW_Program.S0

// Rung HBW_Program#28
// Offset 72
#BEGIN FMT_COMMENT 
"<FONT tsize=4>Homing Stage</FONT>"
#END

SG HBW_Program.S5

// Rung HBW_Program#29
// Offset 74
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#30
// Offset 82
NOP

// Rung HBW_Program#31
// Offset 83
STRN X0
OUT Y51

// Rung HBW_Program#32
// Offset 85
#BEGIN FMT_COMMENT 
"Jump to Homing Reset Stage"
#END

STR X0
JMP HBW_Program.S6

// Rung HBW_Program#33
// Offset 87
#BEGIN FMT_COMMENT 
"<FONT tsize=4>Homing Reset Stage</FONT>"
#END

SG HBW_Program.S6

// Rung HBW_Program#34
// Offset 89
#BEGIN FMT_COMMENT 
"Reset counter for X axis encoder"
#END

STR ST1
RSTCT CT10

// Rung HBW_Program#35
// Offset 91
#BEGIN FMT_COMMENT 
"Jump to Ready"
#END

STR ST1
JMP HBW_Program.S1

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
SG VGR_Program.S0

// Rung VGR_Program#2
// Offset 2
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#3
// Offset 10
STR ST1
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 100 100

// Rung VGR_Program#4
// Offset 25
STR ST1
ANDN X27
OUT Y26

// Rung VGR_Program#5
// Offset 28
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#6
// Offset 30
SG VGR_Program.S1

// Rung VGR_Program#7
// Offset 32
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#8
// Offset 40
#BEGIN FMT_COMMENT 
"Rotate CW<br>"
#END

STR C400
JMP VGR_Program.S2

// Rung VGR_Program#9
// Offset 42
#BEGIN FMT_COMMENT 
"Rotate CCW"
#END

STR C401
JMP VGR_Program.S3

// Rung VGR_Program#10
// Offset 44
#BEGIN FMT_COMMENT 
"Move Up"
#END

STR C402
JMP VGR_Program.S4

// Rung VGR_Program#11
// Offset 46
#BEGIN FMT_COMMENT 
"Move Down"
#END

STR C403
JMP VGR_Program.S5

// Rung VGR_Program#12
// Offset 48
#BEGIN FMT_COMMENT 
"Move forward"
#END

STR C404
JMP VGR_Program.S6

// Rung VGR_Program#13
// Offset 50
#BEGIN FMT_COMMENT 
"Move Backward"
#END

STR C405
JMP VGR_Program.S7

// Rung VGR_Program#14
// Offset 52
STR C406
JMP VGR_Program.S8

// Rung VGR_Program#15
// Offset 54
STR C407
JMP VGR_Program.S9

// Rung VGR_Program#16
// Offset 56
SG VGR_Program.S2

// Rung VGR_Program#17
// Offset 58
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#18
// Offset 66
STR ST1
ANDN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y26

// Rung VGR_Program#19
// Offset 83
STRND C400
JMP VGR_Program.S1

// Rung VGR_Program#20
// Offset 86
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#21
// Offset 88
SG VGR_Program.S3

// Rung VGR_Program#22
// Offset 90
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#23
// Offset 98
STR ST1
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y27

// Rung VGR_Program#24
// Offset 114
STRND C401
JMP VGR_Program.S1

// Rung VGR_Program#25
// Offset 117
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#26
// Offset 119
SG VGR_Program.S4

// Rung VGR_Program#27
// Offset 121
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#28
// Offset 129
STR ST1
ANDN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y22

// Rung VGR_Program#29
// Offset 146
STRND C402
JMP VGR_Program.S1

// Rung VGR_Program#30
// Offset 149
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#31
// Offset 151
SG VGR_Program.S5

// Rung VGR_Program#32
// Offset 153
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#33
// Offset 161
STR ST1
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y23

// Rung VGR_Program#34
// Offset 177
STRND C403
JMP VGR_Program.S1

// Rung VGR_Program#35
// Offset 180
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#36
// Offset 182
SG VGR_Program.S6

// Rung VGR_Program#37
// Offset 184
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#38
// Offset 192
STR ST1
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 50
OUT Y25

// Rung VGR_Program#39
// Offset 208
STRND C404
JMP VGR_Program.S1

// Rung VGR_Program#40
// Offset 211
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#41
// Offset 213
SG VGR_Program.S7

// Rung VGR_Program#42
// Offset 215
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#43
// Offset 223
STR ST1
ANDN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 100
OUT Y24

// Rung VGR_Program#44
// Offset 240
STRND C405
JMP VGR_Program.S1

// Rung VGR_Program#45
// Offset 243
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#46
// Offset 245
SG VGR_Program.S8

// Rung VGR_Program#47
// Offset 247
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#48
// Offset 255
STR ST1
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 100 15
OUT Y53

// Rung VGR_Program#49
// Offset 271
STRND C406
JMP VGR_Program.S1

// Rung VGR_Program#50
// Offset 274
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#51
// Offset 276
SG VGR_Program.S9

// Rung VGR_Program#52
// Offset 278
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#53
// Offset 286
STR ST1
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 200 70
OUT Y15

// Rung VGR_Program#54
// Offset 302
STRND C407
JMP VGR_Program.S1

// Rung VGR_Program#55
// Offset 305
STR C3
JMP VGR_Program.S0

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"This first stage currently sends the crane back to the "
"turn table, resets the compressor, and resets out detection "
"bit. Once it is sent back to the turn table it jumps to "
"stage 1"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STRN X16
OUT Y15

// Rung MPO_Program#4
// Offset 12
STR ST1
RST Y17

// Rung MPO_Program#5
// Offset 14
STR ST1
RST Y18

// Rung MPO_Program#6
// Offset 16
STR ST1
RST C1000

// Rung MPO_Program#7
// Offset 18
STRN X12
OUT Y46

// Rung MPO_Program#8
// Offset 20
STR X16
JMP MPO_Program.S2

// Rung MPO_Program#9
// Offset 22
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 24
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 32
#BEGIN FMT_COMMENT 
"Always be Detecting if we have something, if we get "
"something set C1000 on"
#END

STRND X24
SET C1000

// Rung MPO_Program#12
// Offset 35
#BEGIN FMT_COMMENT 
"If we have something (C1000) and we get a go from Doug "
"(C800), start by turning on the compressor"
#END

STR C1000
AND C800
SET Y17

// Rung MPO_Program#13
// Offset 38
#BEGIN FMT_COMMENT 
"If the compressor is on, and we are outside the oven, open "
"the door"
#END

STR Y17
AND X18
SET Y20

// Rung MPO_Program#14
// Offset 41
#BEGIN FMT_COMMENT 
"If the Oven Door is Open, and we are not all the way "
"inside, move the loading tray inside"
#END

STR Y20
ANDN X17
AND C800
OUT Y44

// Rung MPO_Program#15
// Offset 45
STR C801
OUT Y52

// Rung MPO_Program#16
// Offset 47
STR C802
OUT Y44

// Rung MPO_Program#17
// Offset 49
STR C803
JMP MPO_Program.S0

// Rung MPO_Program#18
// Offset 51
NOP

// Rung MPO_Program#19
// Offset 52
SG MPO_Program.S2

// Rung MPO_Program#20
// Offset 54
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#21
// Offset 62
#BEGIN FMT_COMMENT 
"If we have detected something at the oven (c800), are not "
"already at the oven (X19), and the vacuum is not on [Which "
"means we do not have anything] (Y18), move crane towards "
"oven (Y53)"
#END

STRN X19
AND C800
ANDN Y18
OUT Y53

// Rung MPO_Program#22
// Offset 66
#BEGIN FMT_COMMENT 
"When we first reach the oven (X19), turn on the compressor(Y17)"
#END

STRPD X19
SET Y17

// Rung MPO_Program#23
// Offset 69
#BEGIN FMT_COMMENT 
"When we reach the oven (X19) go down, and come back up "
"after 3 seconds"
#END

STRPD X19
OFFDTMR T0 3000 Y19

// Rung MPO_Program#24
// Offset 74
#BEGIN FMT_COMMENT 
"Turn on the vacuum in order to pick up disk, before the "
"timer turns the crane down bit off. #TODO finish comment "
"here"
#END

STRLE T0.Acc 750
AND T0.Timing
SET Y18

// Rung MPO_Program#25
// Offset 80
STRPD T0.Done
AND X19
JMP MPO_Program.S3

// Rung MPO_Program#26
// Offset 84
STR C803
JMP MPO_Program.S0

// Rung MPO_Program#27
// Offset 86
SG MPO_Program.S3

// Rung MPO_Program#28
// Offset 88
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#29
// Offset 96
#BEGIN FMT_COMMENT 
"When the vacuum is on [which means we have something] "
"(Y18), we are done timing (T0.Done), and we are not at the "
"turn table position (X16) then run the crane over to the "
"turn table position(Y15)"
#END

STR Y18
ANDN X16
OUT Y15

// Rung MPO_Program#30
// Offset 99
#BEGIN FMT_COMMENT 
"When we turn off the vacuum(Y18) and are at the turntable "
"positon(X16), jump to the next stage"
#END

STRPD X16
OFFDTMR T1 3000 Y19

// Rung MPO_Program#31
// Offset 104
STRLE T1.Acc 750
AND T1.Timing
RST Y18

// Rung MPO_Program#32
// Offset 110
STR X16
ANDPD T1.Done
JMP MPO_Program.S4

// Rung MPO_Program#33
// Offset 114
#BEGIN FMT_COMMENT 
"This is the reset button"
#END

STR C803
JMP MPO_Program.S0

// Rung MPO_Program#34
// Offset 116
SG MPO_Program.S4

// Rung MPO_Program#35
// Offset 118
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#36
// Offset 126
STRN X15
AND C800
OUT Y45

// Rung MPO_Program#37
// Offset 129
STRPD X15
OFFDTMR T2 3000 Y43

// Rung MPO_Program#38
// Offset 134
STR X15
ANDPD T2.Done
ANDN X13
JMP MPO_Program.S5

// Rung MPO_Program#39
// Offset 139
STR C803
JMP MPO_Program.S0

// Rung MPO_Program#40
// Offset 141
SG MPO_Program.S5

// Rung MPO_Program#41
// Offset 143
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#42
// Offset 151
STR C800
ANDN X13
OUT Y45

// Rung MPO_Program#43
// Offset 154
STRPD X13
SET Y18

// Rung MPO_Program#44
// Offset 157
STRPD X13
OFFDTMR T4 2000 Y21

// Rung MPO_Program#45
// Offset 162
NOP

// Rung MPO_Program#46
// Offset 163
STR C803
JMP MPO_Program.S0

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"State 0: Listen for Doug's instruction to start module."
#END

SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
#BEGIN FMT_COMMENT 
"Am planning to add a button to jump to a state where there "
"is a test suite. To run conveyor, and ejectors<br> <br>"
"For now, goes automatically to state 1."
#END

STR ST1
JMP SLD_Program.S1

// Rung SLD_Program#4
// Offset 12
SG SLD_Program.S1

// Rung SLD_Program#5
// Offset 14
#BEGIN FMT_COMMENT 
"When the light barrier is broken, turns on timer to run "
"conveyor belt with disk until the middle of color sensor."
#END

STR ST1
ANDND X35
OFFDTMR T200 3000 C1600

// Rung SLD_Program#6
// Offset 20
#BEGIN FMT_COMMENT 
"C1600 is set to true when timer is running so the conveyor moves"
#END

STR C1600
OUT Y30

// Rung SLD_Program#7
// Offset 22
#BEGIN FMT_COMMENT 
"When the timer is done, move to stage 2."
#END

STR T200.Done
JMP SLD_Program.S2

// Rung SLD_Program#8
// Offset 24
NOP

// Rung SLD_Program#9
// Offset 25
SG SLD_Program.S2

// Rung SLD_Program#10
// Offset 27
#BEGIN FMT_COMMENT 
"State 2 is where color is determined by checking if the "
"analog value is within a range, and conveyor timer distance "
"is set based on color.<br> <br>"
"Need to integrate a counter here still."
#END

NOP

// Rung SLD_Program#11
// Offset 28
#BEGIN FMT_COMMENT 
"Subscrib is to get value from color sensor and convert it "
"to something the HMI understands.<br> <br>Need help with HMI"
#END

STR ST1
SUBSCRIB "4 WX0 V3200 1 0x4"

// Rung SLD_Program#12
// Offset 33
#BEGIN FMT_COMMENT 
"The disk should now be in the center of the color sensor. "
"This function checks if the color of the disk is in the "
"blue range. If so, sets boolean value C1601 to true."
#END

STR ST1
RANGECHECK V3200 0x1 23000 22000 C1601

// Rung SLD_Program#13
// Offset 38
STR ST1
RANGECHECK V3200 0x1 20500 19500 C1602

// Rung SLD_Program#14
// Offset 43
STR ST1
RANGECHECK V3200 0x1 16000 15000 C1603

// Rung SLD_Program#15
// Offset 48
#BEGIN FMT_COMMENT 
"If C1601 is true, Off Delay timer starts output is set to "
"C1604 which when true runs Y30 for timer length."
#END

STR C1601
OFFDTMR T201 3000 C1604

// Rung SLD_Program#16
// Offset 52
#BEGIN FMT_COMMENT 
"When C1604 is true, turn on conveyor."
#END

STR C1604
OUT Y30

// Rung SLD_Program#17
// Offset 54
STR C1602
OFFDTMR T202 2000 C1605

// Rung SLD_Program#18
// Offset 58
STR C1605
OUT Y30

// Rung SLD_Program#19
// Offset 60
STR C1603
OFFDTMR T203 1000 C1606

// Rung SLD_Program#20
// Offset 64
STR C1606
OUT Y30

// Rung SLD_Program#21
// Offset 66
STR T201.Done
JMP SLD_Program.S3

// Rung SLD_Program#22
// Offset 68
NOP

// Rung SLD_Program#23
// Offset 69
SG SLD_Program.S3

// Rung SLD_Program#24
// Offset 71
NOP

// Rung SLD_Program#25
// Offset 72
STRND X36
OFFDTMR T204 5000 C1611

// Rung SLD_Program#26
// Offset 77
STR C1611
OUT Y34

// Rung SLD_Program#27
// Offset 79
STR T204.Done
JMP SLD_Program.S1

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STRN X40
OUT Y36

// Rung SSC_Program#4
// Offset 12
STRN X41
OUT Y38

// Rung SSC_Program#5
// Offset 14
STR X40
AND X41
JMP SSC_Program.S1

// Rung SSC_Program#6
// Offset 17
SG SSC_Program.S1

// Rung SSC_Program#7
// Offset 19
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#8
// Offset 27
STR C1200
OUT Y36

// End of Code Block SSC_Program
$PGMEND SSC_Program

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierOv en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInle t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierWh ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBlu e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOut sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBelt _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
#END

