// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\njost\OneDrive\Documents\Factory-4.0-Fa21\Factory-Fa21.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
bd50c11f53bdb633a00972a6c9aa1040790f4d0133da7e51ae668e0e57f51362841278d9335b6cf5
5d5f5daea17ab2389e3ad2853de6de4906c0b30876d88973c295ed9428b8e92086d263e71b00b2f9
8f44219c51128f57bd4d7e324175ca263699a41eccff79f28ee9b5b00c252208cdf44f47365cc286
e222f3a4e8b117660464b0336ce0454cbb8a0d6b746cfbd43e9fb72435c4e86ffd7de5ca5c49ba6c
a42eda88e16f33d86bdfca631f27e56584e18dd728b12cb1d906fa724f6bdda232127d1ed010f563
28e163d2ed31b6baae919fb7b97cf850e92df1e76491a44617d432bed8d93207e5cc433ee24c5e7b
7aaf83b88ea08962908bb2ced9149a15602a9c9482d0d417b6d36612afb26c3bb28f338c218dcc36
7855a6e6593799e5647e721bc8b50d6a3c99396685acd22fe2d42b51331b65d51b67fdcd791b6017
58f9f7174ee343a7ba53f2763ed13e610e267066291094e64a5cd0ab63b9d611f02d36cb53179285
02d9e228518b63c7fd9dc2d4cfbb3d4ba8ebb0944af6fc4cfceb1a9b3d6b0b12a6e944c2c9e69f20
c23d884316e8590f1619f3188c94813c940d9a6849e3f37a38dde1aae79ad8f4427e215a1eced2f4
7893e887f3c4a26f358f139c6085fdd1887b718997cf2da7cb46c31b784a9b67dc74ea9a0cee068a
74e422ba42d10df298517d1c0be94f0c111584838ac6dfe6db8c20c167f6ba27e11d17fff956ad08
92e030676a719e286705421513ba8a98a7032d8a9ba695cd01c44e19813ee56f71440f036032020e
0c60f1ad2c5c78dd9ca3a4ec1081d2aab8de4c94f6c811469fb052080d8c6ac5e22784fd4a3ab4b6
be4a533d37b31722f87ebc791f98beb62effee75b07b0871d7c20de6d6aebd306c8b3f84a61f828d
6df143c2fad3eb1a5c3f98252b6bebe48a4842fff6da8049d35b8459965d40109c8b3ecaf15692db
022bf75577591af71a93d56a0c089c86eb89c24af412225b8e319928118d3861da3dda9f1a70bd29
ca7dc7f383a99c33212bb83ca1166876da08e66fc44728d2e00eb17f054f1bad0ee0d02841dcf2ad
6754b5792aca95435354035775fca644e19b58d4f0840b3de2a256529d39a38d1ec3dd0d3e6264f9
2c7a42d2f1cfe62c3fe3a8d976b64c6bc80d9408b012399189238786f6a3fdaab7559cba43433888
c4a1af8622477b22a67c50b8aa77ea1f8a9a5efe9a8cd23d2d3859f315200a0ef1820c536e842c00
49acb0ced084ca74b485e9453b2c0f26ef1a5abb4fef1c77fce8745a23db8e0eab37b1ffbe96d454
355d9e56f5c6042c58866ef9f7ad5f8a24d43d1577b7900ef576cc16e8c84f83550877f74000c694
b5f08de168d7a91e4d12b21e1cf1e2f189f1f37f983ce1c93be8c64133901c049288dc8291cc721d
4a38471a6f09235d7a94135d44abfc0613a0356d383b98fb056cd2d5eb8e48bb09c15cf4c59b84a2
fdcc6cd60b58ff8cde3390fbdcd2f2aa30d46a07f75b8b1b8b64f9b3f83c8248f55fd9abe5803685
390e36a915edb862381898f61e880bb8e71c63980c3880b5a2c3afcb5f1dae159438db306e136ea4
bcf2af33548a78b9e4ab86ce0243cb5276b9a1548dceb4d60286462e4470f2a1b06a722d798de891
b388615ef88721fcd104aa76ae9bb92e9a58d8b97df02781a0cec1413bd1c20205310d741b7a08e5
357d5076835e807d4f6a6c799b5c554c472e50296425aaa04c67b5d38d0ecc8aac29af03ea5886e1
9f02d15edb85250795570813c5846b9ffe26c3201d6dd048eed150706507fd306f9c6b7cc32a5b0e
ff2be35e09f893466764e6eb117177198a71f1b29e709c41c6001f03b2b67eef827fa714c63292d5
3ace231c7c7bb6e91afdbe8b4dc49e8d46eb7762a922168606b18571042fadd7ab5190c6a455380a
42e11c4add3cf52f20ab428af3c98f7d6830435822a091775d5183c609a157b744b8a0c71e14aefc
47e46a3fdde5ad3a1e1ea9b19d4301e9955cb344d61c8baaabc0faa7d8c95cf70588591ad60bdbc4
f3ad446e6eb2b16fb30768028906261b95239bd6f271e5c704c896b3db312f8cf30b5b2fd499e4dc
5fb3a6eec5cce87ac50f0050e4a180992635f412884af63cb61d85e70d20aecb69b543b26a1cff5a
f9d61bad05f38a2f55427f4558ff1dd059f6d40866f33958f3f0334cab046174693333d00d6ee882
0183172b91892762a0923b196a08b91d1e0be734eb8a8e309ba965ba296df6c456a4fbbee74c8e72
91586ae30172a046e2e1f51d4e5c3f3b8d063418c457d374eca728382b7911cc25aa92a7e547b418
30deab6ab45cc913e1598f8f7d2e986a917bc38f585204c5db78ac9491774de2ae3a222f2dbd3974
e85bb490866b3585eb0dac806efac45a577809c5f114b088273d3d94dae73ac870c15747c933960b
d7cbc3f03869441ebce12fd430846a7519f1b9d03a57dd93d96e932d23cdccd575bea0100b879ed5
25a871724e7fe2d789d9aebfd004728e90206d811251e8ef654c74fcf5bbb9efebb44796d360fae7
6124c648a24927c7f302f03ace1606c2d4f1bad3bdbbaec21ff9c480ddf3f09b2ca4ef18898ff04f
19b845b0e62d9e36d2e2874bcc2292503bddceae3cdd8e3de73ab1cee712d6947753c6f80fadab59
12426d1c8f34952f55b006fb73cbb64be612124cbd8f1517f30ecb224987447a77f214f4da5a8e48
894a52d6ff5d5faa73e373979a3a886200c278a57a3208dbf9b9e55a6f31855796fc2641b0696e7b
2c68acfb63e2bc88d8ca008f3ffa9102eeadd8a1aab18df3c38b0d200a9f83a4ee9197c306676e6c
75d7b6e33a64c943f1aa55b98539b94920069c5e79d52cbb417cf753da1d48a55eb46966de2fab18
5ee001ffa3bff1a7eba4999d113f6132c71d425de406c38573bd854bf6b5294f5e19cc5d4753c2f6
f041a53d2422a9c11f635b3b50616c95f4963590a60269c127455e0257b26f17a95ee1bde62ef12b
c1adbe24e25a7cf75d4d15387e9f1c0d03c2c5f83dbbab9c63b9a3dae057f72a4fb03800f54f8d8b
d985b803cec8759920317dec7c38713581649a9d2c241f8d1ce4f8a0b976639a9f2c37c4751d87c7
c0ff3fd1fb0d6c3c44a36656611d05b8f9c1256effe9f8fcaa9929ceeea45131f549d844f0d25cfd
4f7b6224f5e6be412038d5f79ec1998ceb472169906013ce6aeefd23a4c4f8da81186351fb71ccb7
f8006b03007106e878f710cc4b0325bc1ca12612ac53f782f54b69d762210c8d2e041cdc68aa5bef
f6c4f1e7f4a6ee9b26fe21822370f2f7a24bc62035fed08e7ad022b3e623ea19ddd90fc76e3895e3
491428325ad315d6456eb68d14b4098e5f81956f68b068b425d49f7fc1bc230ffc83e9e028200240
0f1bc93d7df931d5e9e31d489d8a2760d6492f5f3d84d23777565f8155b0f3c65b4626f482ef722f
5c96c6f8b2a88de50f965dd39266a462b42e85c274eb7584d006a39ea4fb709829268d916513f68b
b89d2e0d893d7039e7b0915af7a91fb7ab894a8d7570fe28698e9c5860491d877cd9d88518d3197d
5d87277944a2b52738c3983499045e682e6f889a5e642d6e6c33c7af837ea9d2daf5c10b9f1f7649
872232bc5c95ae806cdcd4df187f4d679082baef20256b83bf31485f6567eb5a82f39ad4adbafd9c
9b77a47c2bf63d2053bc7ae5e63fbc03edd15fe6f678aadcb9ab0c153b60286f8b071390fc19790b
d90cb0bd54a774714a286d92b27597bd7b86ea0f47f73898dfae3912192a36071937d6141f970dbd
60337425ba93ac7c5c8db7ef52cd0d37016f028ae533fd223c073c1671635b0e2125ab26f0124552
5c31bd0cd4157c0a9af63b00de360bca150b300fa53e70522b0c3969040082c4dd305e6a3a3210f5
b2b40c5a3b7c95e8e1ea2d4a705a709706c6ebdeb6960f400399727edc60ae314038b437971c3cb2
1a5bbcae1aa24d7000975c56bfa0918f21f75dfad480d6899a0e364306578b1ff5cf972aeafa8616
b63d436d404c36e9506ba2f963983d0d3838330c9152dee54f0685e90c44f48362ab90be5060a679
679cacb22b3901540742af876f385d5f397a855d35c46e65d4beca8bffa1f5546113467ee0703e1c
654a7f6b6b745e7d18cfd5190450bc1412bd174960291f20140f5823aa4139fe4fb6dd567455dbe9
abe8efccf7e40a76393ac717f70e828a08c8af59a9057e2103107e48ef865a80d8928db7aa85da9c
ff4e8e3daf1fa85cbfd81cbfc383867acc30e4607368fb046712d5c35a14a1be77d1746b5155d761
87087bf43fcb8b67a58358b877e40b80b7c629cfa824a56537d26c0440c2849d70dbbb9d4c198a40
809109b68c8348039b943dc1335fc8b497b2113294ef705b8450ea4fc62acfef9edc6c465d3fe75c
56cdc26b778b7d3c35a4f1c71fb41c62955c66b852ef4e458a6d62f0f530306d2da2e9d32171f5a6
73c492f9e628b30304d755e53efc478d141bb22ec183dfa0d831b1c5700cce1b9d123b73bd2e46c8
8457bb94d434f70476e2750e01bd2213f8d0cdd5ecdfc8763f2a5cc8bc29da53286e719b114dfc74
958a0b10b562ee47d322b07559dd3e906d0082d3afad92fa0dbfa54a73dcdb4def4fe8345b47dd56
7a2315bc1aba4270775137ca4cb077556c58bd108294639c6b6da84c5b154a5ab5c8089ab3d0bc93
bee7c38150b2e9b6658a9f80fe965e67fc4b438c172a83a1a230129be339ad132457330faab47961
967300eb17d7cfa8abfb2feee734f7c7de6f64dcab1e4cd1cb3d1c590694d47c01ac0bbf2f55d75d
a2091959fb3b916c4d08571df0b83dd8580f8af9bc03a9d0405a9ca083d7fc24ff108c022d35668b
1624fbf0c622daf2ff5996c666009b40870ac4cf1069cc7d6fdb30b3ff6cd890b91bc995301d3da8
4897bf6909636795e51a19a97163849a2ac360cd70871d6b5dce93952e079e4856cedce7ff45b46b
c8e5c95cbc634b9dfd8f9322e599c00914c42338a4b2ef77135d3fd25cfb4b28f8f5704da5206e69
2e1298862135bdbe7fee54ddd856ba3ab8c73b814e9a5e268b486b5abdfcc7f9ec22fdc3e40e0dca
ea835a0cd70967608a4259d27ac4a692d8dbd0fa8ec0807c9e8b642562de7423736efdad2ece5436
e66f149593ba494466c776b3dd59563050664be51af01b8017445a205d5db9f134bb0b20fc1f581b
339ebb630a5d6ed836d8b841a9b9270052e9e593a5ad6c92d9ddb0e5c4f04a45caf425dc3b4c3e97
db6dbaa50fa9c429a10a4d94f130648898a5d972c0244f861404afe29af26c5ca6861289547961ce
7ab01765b9f9196a93e3383a23e468573614ed7503feeeac49505bc15794dcb22a14a6f2427d93f8
f8c8f778004ea64e6481a5f65683be2c2cd77f1d266b72053ced753b5cc54bb83c6942f89fe34221
60dc5aa84f0e7c4479e77adb68f3285d9724f0e78e652ad65f740a93f4aa4fef881bc0946ce055ef
1d1b69bbe5edcd47832fa406baf8b88267901627fba03a21a6bbf0d210f557b0d0491c433fc27532
d3bb644a1c407cd13d38bdb39691ba0ee366b4d7300e1fbee1c8390e156c2fb372d41761554d1d96
f7ee4c98cc5eb919e1fb1cc24bfe991f6a3d39cf87e07437a3e3b5d4edfd3752d43b912ef31a8985
69d91ab5b3ec5545d5a323fc280cd9c9dd6559d2581f36d2b20950208f9c1409106226692d82fda6
cb8d15454b17ace4ccf56bd322e68570f7a47bf937964d56a7c07c420b0975380db84d1d84618adc
c3ae838f2e81332a445ca0f8b58d49b944e4d7665cd93d3774d906a77f652188019486ea4d1cd311
df048be12bf0b3f9b77122113214b3af255954f38240a90d0233f3c764b7572cbb069210e511468e
80b3797c081bbeffb68413b6d93da0397aacaaf5d1293d8a71bb4549fdbf6a396836d58b4c03fdfa
e245bff84c7dd2997bb9b7b8b6227266a0b8ec312f01c3a633f00b91e66d3a41d98b2a76c17c70e8
fad984b66cb9f20534e1721303668f108043422c4bab42dfea649fdfe812cc4b6f2e4a3e03ed495d
251067b78af24f92526446872524ebc2e8139afe1c9d371c54d0ae484307641999778e26e240f761
5c40a395e8b33cfe680bc6090b3c780135ba4d1e7ed613d06dcae8d8289cb64b25b871bc7cee5d19
4dec6c149ef7814232cd537dd584d55b3232321213b0ee33eb189c69725c91571d26227c5e649336
1e561a6c328430d19fdcf1237830bbacdd217e1716170d08d499407c4e0cd2a727f39b37cffa3827
16e7d234ab28284f9d7ad60a26bf4b6c8feee195aed69776ed5e184527ddbe636b36b09613e0dec0
e0062fdecfa0455bdeca61c9a0711a30d81d2ddd20e261a2a1fb8c1c43b54b4f7f50dd5ba3bce8b7
ee2edd3c4b7879f31740b7f1a608e56a68e4c9fc588c6ac42ebf18b7df1be4523dcc485ff61e6bba
d13b5356798e73b15caebf70bb6ea3b127d57870c9f4363faf5ddb1f4af4a996c96ca6cb3193abba
be839ca08eb3780651974cbfe93cccdc0948c40d6c49745d383fb4f45b44631336eaf90fdf2de73d
93cf989377523f7434c07830f356604224cced14e3ca579073fd31cc27ca5720eadc302716a1c340
54ba4b1883ed3fc494742f9ae4edd2e4da85478d69ff2cb1a3a901dd2722a7bdbd33936a06860f83
027b18bb6a44fe0dcfc305de3deafdf808c2983e9695b8dd417380578af6a49b6b96540488192c0d
624b4e717df4baffbd9de8e48959930c7aa010d9e38e54e50e3538ebc489bcabd60a6d12f317d47d
f2c91b045f99dc420dd7209384833c706d0a0b1d3871240abb5b3767dbe6a2e5c5d6a87ce33eec1d
676b7a5e11491162ae97f871de765f91830850e7b5ea1b86b1c0311f354fd989f87acd26efe1c5c1
9c610d0225e47f74928440a6e58556d2e09bb287e5edd31d45aa0ce14ba6feef1d61f3999cd8c075
307cd5cfe7f2b3f8b0291072847183d7267869caa9e60a5bee4cd4788bef06cf4fc43aba421dff67
191abad71f38ef315dc59e525a99f465bf8693152532a767b325154f2fb06fe93f833c3105829121
4d30ef8792dc22ec5090a809699c9876445028a1bb0cd9c7df1357b109a8a21f6828da2fdb679b5b
ab0abd3f7b3e0d0714907804a9a6a12a129758d3a8b34940e768852e7881cb923708480f33fd601e
780362aefc2d8df936c9d90442c8447611e32d3b0e76cd5660409bc5140ce05cbc928ab55840f26f
cad664dbc38cda465e32c6d6011de64ce125ae0c7556d973126c890dee5c2a3b503442bcd4f60dba
7b424214467b0e00bc2a22ea6228823715d620464514e53adfaebe8889e82a499dd702264b9a35f4
5c1bd83f9d3d7f5b720457d330d7f8e7455cea47a5f2c37708e8f6dd34250da251deaf76357e8d23
29d4b2976da95b1054c7c2406b1af43682e808582d140910333a22e56291ba11959a6934627f32d5
a02faa44ba504f534b448a4c6c6d8899d56fb5b5d60ac4c71be53e790eb1f175f15b92488f26e48c
647184c309b2dfcbc23199780295d90a67aaa1ae5ddaf88f9ff52a56ebf5468b4ef24637390dba9b
64c62bf99d9787071df6e553cdbfee83e9add39d50657d4cbeda727d21bf197558e8adb0de884654
255b24f3eb75ff72c0d521380ec5e1848e93076556c1224cb54609f0497fdce05ffdf76edb7474c4
e2c3374866a8c264e8eccd6ab2d4e5294af0255faea19b67417896f6dfc747d67a8adac62e472b9f
35cfea7e8ede8ef3797f35311f614a8dc48f0a2471abec1d1a4fbf942ccb0acfdc3693d847f42941
62d926bfc06f7c20e28bb57c97038d6b694de7e89676dde95302fea7f3de36fdd326cddd61ecb85f
14271f647eee4b58f07e5a81a52ce2d3553f44674d4ddfcfd63c8ec18cc0769fa749dd765fa074ac
fdfa8daa81b7c0a65575ec9a9f92f37247734521bee3d432e190d17b3250bb128b00ab2b7a0b39a6
ae1af0e641fa685ecb3d97ffbf1b5b4a644bd6d5d7aa1ea221de4575ccaeb3aba44a0118c0f5b5c6
d84d1a23be1566d7bd8ac2b54325e0dc933f5609450c61a5585febae09fce61bad11123889d4eb2d
c13824afef2b4fa8f11af030037cbbdd5c06700a43187b86114d0a4c17fb55e8646dc4409dc78192
045836181611ec508530ecb91907662c2a6869f9278fed839b45dd5eb210e1b360f9069aa8783a8e
9923f4231776c7616d4763f213bc7793e317983d0e789c6d8ca5e1be7275f22b6d0d88692b425041
da90431369a89d4d0981f3faa2a4ca63015009b532afabafb2b9b49a2af2d3395d0ec2227660d522
a25e009d20729283005659208d62e35e01a26169247509fcf51ae4f58f77dcaeb2b584cb8c519cd2
4e000bb9267daf1789977ae33b6fd2c17a24c9ca43147cefc6d03794b2c4bf0db2516a333fe96106
b3881a4a6e464e533311e1508d6fc5d8e5285db85917d2dbfbe5a92b385be465c0177fc4011831a0
8dfcf5081763fbb91fa5da973c339d593fb307127a749a5f5024b8c7cdca6ca7cd9d096794061cc8
b955c2d93c2a16e70f4056638a2a06ea9a164b599580bcbd50b1c13df1daf56a91fab7007663edf8
bd2a49d55a58e2aa21a69e6ddb276923e32dea9bc20877432442c0ac4af8541709a2ae40a1685d35
61646a9330911ff84da13a783fe39609ca5bded8f08ec6c320552a43e99ec27c0fd4106e5b86600b
518a7d667e0e93485d2099d653f27ea9e23cc44b5cbadd9f377adbc07f8b8ebe96e65f4af150dba7
3ddac63a64238e3283e64666628925d1d5b438ba8f5103f1a18bc83a51786629f96ca58f88a5828d
4dbb53a0ae36f6cd7194a8c59aea9747a5681d098de169bd371b22dac34b9879094376c2b3a6dab7
1525b673a1b93c5c0dc93dfd634cbdae2f89c96b66f1906d46869256aa9d57f6dc18fc9662704f80
6659086980d10e7a8ebaba7503b79cde531f35414968507bfe40e5438e654f9a54299a1df2ccb32a
473389ab773daae4795cb327431690eaaed092851264ca41ae2a21df16e3139010ecf0ff5017fc73
c72998bc44900c77fbd0d77ce17e5d24d9fd62187ba2e26808663ffb89b93e70bbb1049eed819e27
d2f7fc33a51e41b14686908c1d00435f9b9a5980cae8d1cd391cc0d24e8edb1e7292028aaddf89e6
3ed739fda879fab43a3489ca09327243d390a6a4b1fcd98c1958689fd619421e5b7226ca2ebd13bd
23fee6a0869189e37c6ee811512a9e8f301661065d5f9703f720d31b54bc794a42b84453d0984bc4
147cf5069506742a83140be6791dfd3f7269e9a1285a9d425502131834a79d3d73944107b8b06d3a
89f843f0f6b901d997392e662e19d1a7d6a19b7987009833a201af0ac506ff863106dbeeb106a013
2c3878761c62f3b6e7065b021413ae422576371def225d0349d8941fa439cc9869c027b7b6db840b
275ebc18b2c88bd520307e6f557d01c9ce718f32ab182b8262b2577fcc6323d5ba731e2d287dfb59
6af6fea85e075303b85c1878ab673b1b8c6b5aefb0f869a193099d2628ce4ca9a13fe5b342920315
c6ebcc7d216c468517864f8dc6ee1b3677c483bd692cdccc862149072937db8b38b785db78d5b3de
3e4514522231d64883006ed2dfe3609d07c59bec7138e7e44d9640276370dab2b7a8ac0d95ebd3da
5dbbebe2d0ec5eceb323c44c536f40f2d6fc2c4fbd2208dd72452208bf3db4f49f5b8bd90194adeb
987a1538da10f251dc990a517f8e748a0d160df90f1ebffb9608cf110617e79f4343065731d391ff
9af556cd6a961255b117380d7172d5b000bf1a34fe7cdef37d5a82e26c41bc248fe3774002790517
c5eb6e0b119a2fc2a7e5da3ed790975777b4ce2dce1dcd5dbaf76acba71bdc52191cc1de5e16fc87
c370396e20f9fc467966f56e668710f0b19e2f661f4aa1e93e7c283cb7d6b19f916edf6976a256f1
149c50437cf2ee1e38c87c8e6f1ab29b599a2874e50b5d07ab05280c9c36b7f9728d4481a9ebef0a
2dc24ad4a34fc89610099957a384f12f364f85bc43af7131a10734b2d3816355549c72d17c3a36de
b2b1ff1abfc91b5c695b87967864127d37d16cf6ea31debe4fb3f6982f74433e694af2e8ac9006fb
57811cf9f5c65440b0067de08e092ab3084b7f86f624fcbec0ae7f67d401573975ab174a02e9e1b5
c515dbdd0a687cb9157d2bff81b2e616d4ae0c052338e052c6d5265db8c3aaa2af5db786c1623f5a
03e551a381400a8685c66f53bd2ee03f4d7e5c14f2ef0916b7161827959d66e7ab3a41aa6dc8333f
64f947c958cdd0c7f2804cba932d6540b146a4ab58d2eb66aed1b419dcce34c6f183588b0560ca12
c37de7017727c30f4071c6cb4d434fd92cafb23b43afabdc2659881e1084cfee989f9a98f7289014
a61d201592ed433a5f56bb549f3d48f10def031bdef0770698a319c1a16f1ba6e845b626b717ce56
16cb06918d9cb1421b16e6c892c4261e8304cf24d283f8859d6a2b023eecd928fab24a0d743cddc8
3eacffcdf9a114280ef90c9d70a398da7f51b8687b70e7ce3a560e0fa4a28f9c69ed129fb5b48062
c53d361e0f1fe6bcd357d26c761065c85a2a6c18ca505e7bff68f93ee77fe3a12bd098d59527f1bc
c44b30cd750939f756c62a90f0bf1871747e41cbe6d7bb5698b7f0fc8bb71c6287c3e007cd4ab3fe
1709a177c6bc33f377415181b8abc199e5920acadf65cf97d8af6a25cb2fb5e80d1823f37f400ada
86a0c179d1a31187acf263fd6a8338d5ec2fdf235a0cadbfee969487946ed5be61e08cac2755e2fb
bb050e7c072944eb20faf597a0fc9d615ef0d5017eaf89bfa25b952a1ad25a0c1a98229a80b44f06
e6a57069f3d8ceda958795047e4c967e066933b0467b5ea393ab42950d1fe67ac503c91a52e84cb1
2088ff72d36d0f64c8afe40edbe56208200b63d5181824e8fc28bc0dd2485f3d2f8b07c12c5ad7b4
25c19a493fbc699d129d0f3f3202b34c3c181e8a210edb1e2c6149bd62c822ccb7a78482f8848650
5f727b8e75d0efff4b6fd04a2c1d67ff47b51aa4ea0d324661a3ca2677935443c18e77006d944051
a333a1e4e7e3d1d7aeb6bd19475ca223416bdb34d22fa284cb83deb2d883e3f3fd6d65f6ccc02378
d262843934420a8c311048e33aaf02f99716d3c73f0834640193082f68dec419bc809265b1df0e60
d71a71eb98a8689a913748a221825f1039553e3a1d8a6e7f7e713ea8ff93a28b85c264ac8dbb92b2
f0c68c8156d5311743b3efd0518884db75556dc4e10d9790b7bc6277f827571768e0cd7c836b559f
ba8703b75e037c3ef0d48d8a155f9db0c47249cdd84d65f8cd7e64537c12c7d48268e06dd8a228fe
1c3a26abe20fa851acd7052bebc776dc37114bcd18bcd8d466a8be02231fc3482a7395944465777c
4c9784779607e072fec3859b18a521115f6775413c0a0044a837a56d38cbde6f7b262d79d184a356
d8762638d185e94e0fa001a5944d4cfab5d1c64608c3c716ce584f9aeb3303b782996a38d14eb33c
c5571fad3d2cf80fc0261d61ec0c76abe264708a9f172ebf69e21db0534f1958483ddd4fb0121e12
5751a744d3b21b3bd6bc02510d713c52962159990e13c6eb0410bd11d17afe2c1fcc0a50e8b7290d
995148ffd437785a09864879f63f8c9a9b1d7dde22357fd0fcffe63e11a9dbf3624dee688f5a8cfd
4a3637a922efc9fd64176bde9c4cc84de4c738ff5c84617be7827a1e0bb0a7b8b108414a4a7da186
31fcde43432aadd372846e5c1db2efd3b996247380ec5eb77fb02ca16135c7dd5c90
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 HBW_Copy_State <Virtual>  0
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 PID_0 PID  0
 SSC_Copy_State <Virtual>  0
 HBW_Encoders PROGRAM  0 -1
#END

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"Copy State"
#END

STR ST1
COPY 0x1 "4 0x0 MC101 C101 1 0x0 MC102 C102 1 0x0 MC103 C103 1 0x0 MC104 C104 1 0x0 MHR105 V105 1 0x0 MHR106 V106 1 0x0 MC110 C110 1 0x0 MC111 C111 1 0x0 MC112 C112 1 0x0 MC113 C113 1 0x0 MC114 C114 1 0x0 MC115 C115 1 0x0 MC116 C116 1 0x0 MC117 C117 1 0x0 MHR118 V118 1 0x0 MHR119 V119 1 0x0 MHR120 V120 1 0x0 C130 MC130 1 0x0 V131 MHR131 1 0x0 HBW_Program.S0_15 MHR132 1 0x0 CT10.Acc MHR137 1 0x0 V10 MHR139 1"

// Rung HBW_Copy_State#2
// Offset 49
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC200 C400 1 0x0 MC210 C410 1 0x0 MC220 C420 1 0x0 MC230 C430 1 0x0 MC240 C440 1 0x0 MC300 C500 1 0x0 MC301 C501 1 0x0 MC302 C502 1 0x0 MC303 C503 1 0x0 MC304 C504 1 0x0 MC305 C505 1 0x0 MC306 C506 1 0x0 MC307 C507 1 0x0 MC350 C550 1 0x0 X32 MHR400 1 0x0 1345 V810 1 0x0 180 V811 1 0x0 175 V812 1 0x0 860 V813 1 0x0 200 V814 1 0x0 400 V820 1 0x0 420 V821 1 0x0 440 V822 1"

// Rung VGR_Copy_State#2
// Offset 51
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC400 C800 1 0x0 MC401 C801 1 0x0 MC402 C802 1 0x0 MC403 C803 1 0x0 MC404 C804 1 0x0 MC405 C805 1 0x0 MC406 C806 1 0x0 MC407 C807 1 0x0 Y16 MI400 1 0x0 Y43 MI401 1"

// Rung MPO_Copy_State#2
// Offset 25
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MHR1600 V3200 1 0x0 MC800 C1610 1 0x0 MC801 C1650 1 0x0 MC802 C1651 1 0x0 MC803 C1652 1 0x0 MC804 C1653 1 0x0 MC805 C1654 1 0x0 MC806 C1655 1 0x0 MC807 C1611 1 0x0 V3201 MHR1601 1 0x0 V3202 MHR1602 1 0x0 V3203 MHR1603 1"

// Rung SLD_Copy_State#2
// Offset 29
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 C1200 1"

// Rung SSC_Copy_State#2
// Offset 7
NOP

// Rung SSC_Copy_State#3
// Offset 8
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Mini Factory Fall 2021 Project For CS 453/454/553/554 "
"Advanced Robotics I and II<br> <br>Date 09/17/21"
#END

NOP

// Rung $Main#2
// Offset 1
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#3
// Offset 4
#BEGIN FMT_COMMENT 
"Run HBW_Encoders"
#END

STR ST1
RUN HBW_Encoders

// Rung $Main#4
// Offset 7
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#5
// Offset 10
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#6
// Offset 13
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#7
// Offset 16
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Encoders
$PRGRM HBW_Encoders

// Rung HBW_Encoders#1
// Offset 0
#BEGIN FMT_COMMENT 
"<center><FONT tsize=4>HBW X (Horizontal) Encoder "
"logic</FONT><br></center>"
#END

NOP

// Rung HBW_Encoders#2
// Offset 1
#BEGIN FMT_COMMENT 
"X Encoder Up Down Counter"
#END

STR C51
STR C50
UDCG CT10 DST511 DST511

// Rung HBW_Encoders#3
// Offset 6
STR HBW_Encoders.FirstRun
OUT Y99

// Rung HBW_Encoders#4
// Offset 8
STR ST1
OUT C99

// Rung HBW_Encoders#5
// Offset 10
STR X8
OUT C8

// Rung HBW_Encoders#6
// Offset 12
STR X9
OUT C9

// Rung HBW_Encoders#7
// Offset 14
#BEGIN FMT_COMMENT 
"Encoder Right. Move to Conveyor"
#END

STRPD X8
ANDN X9
STRND X8
AND X9
ORSTR
STR X8
ANDPD X9
ORSTR
STRN X8
ANDND X9
ORSTR
OUT C50

// Rung HBW_Encoders#8
// Offset 30
#BEGIN FMT_COMMENT 
"Encoder Left. Move to Storage"
#END

STRPD X9
ANDN X8
STRND X9
AND X8
ORSTR
STR X9
ANDPD X8
ORSTR
STRN X9
ANDND X8
ORSTR
OUT C51

// End of Code Block HBW_Encoders
$PGMEND HBW_Encoders

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
NOP

// Rung HBW_Program#2
// Offset 1
#BEGIN FMT_COMMENT 
"Initialization and Reset stage"
#END

SG HBW_Program.S0

// Rung HBW_Program#3
// Offset 3
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#4
// Offset 11
#BEGIN FMT_COMMENT 
"Jump to Homing Stage"
#END

STR ST1
JMP HBW_Program.S5

// Rung HBW_Program#5
// Offset 13
#BEGIN FMT_COMMENT 
"Ready Stage<br>"
#END

SG HBW_Program.S1

// Rung HBW_Program#6
// Offset 15
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#7
// Offset 23
#BEGIN FMT_COMMENT 
"Set Ready status"
#END

STR ST1
OUT C130

// Rung HBW_Program#8
// Offset 25
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 0 V131

// Rung HBW_Program#9
// Offset 28
#BEGIN FMT_COMMENT 
"Task Send"
#END

STR C101
JMP HBW_Program.S7

// Rung HBW_Program#10
// Offset 30
#BEGIN FMT_COMMENT 
"Task Recieve"
#END

STR C102
JMP HBW_Program.S12

// Rung HBW_Program#11
// Offset 32
#BEGIN FMT_COMMENT 
"Task Reset"
#END

STR C103
JMP HBW_Program.S0

// Rung HBW_Program#12
// Offset 34
#BEGIN FMT_COMMENT 
"Manual Control"
#END

STR C104
JMP HBW_Program.S3

// Rung HBW_Program#13
// Offset 36
SG HBW_Program.S12

// Rung HBW_Program#14
// Offset 38
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#15
// Offset 46
NOP

// Rung HBW_Program#16
// Offset 47
NOP

// Rung HBW_Program#17
// Offset 48
NOP

// Rung HBW_Program#18
// Offset 49
#BEGIN FMT_COMMENT 
"Task Send"
#END

SG HBW_Program.S7

// Rung HBW_Program#19
// Offset 51
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#20
// Offset 59
#BEGIN FMT_COMMENT 
"X Home - PWM"
#END

STRLE V10 700
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 200 V118
OUT Y50

// Rung HBW_Program#21
// Offset 78
STRGT V10 700
JMP HBW_Program.S1

// Rung HBW_Program#22
// Offset 83
#BEGIN FMT_COMMENT 
"Fault State"
#END

SG HBW_Program.S2

// Rung HBW_Program#23
// Offset 85
NOP

// Rung HBW_Program#24
// Offset 86
STR ST2
JMP HBW_Program.S0

// Rung HBW_Program#25
// Offset 88
#BEGIN FMT_COMMENT 
"HBW Manual Control"
#END

SG HBW_Program.S3

// Rung HBW_Program#26
// Offset 90
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#27
// Offset 98
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 50 V131

// Rung HBW_Program#28
// Offset 101
#BEGIN FMT_COMMENT 
"Manual X PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 100 V118

// Rung HBW_Program#29
// Offset 116
#BEGIN FMT_COMMENT 
"Manual X Left"
#END

STR C110
OUT Y50

// Rung HBW_Program#30
// Offset 118
#BEGIN FMT_COMMENT 
"Manual X Right"
#END

STR C111
ANDN X0
OUT Y51

// Rung HBW_Program#31
// Offset 121
#BEGIN FMT_COMMENT 
"Manual Y PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 100 V118

// Rung HBW_Program#32
// Offset 136
#BEGIN FMT_COMMENT 
"Manual Y In"
#END

STR C112
ANDN X11
OUT Y7

// Rung HBW_Program#33
// Offset 139
#BEGIN FMT_COMMENT 
"Manual Y Out"
#END

STR C113
ANDN X10
OUT Y6

// Rung HBW_Program#34
// Offset 142
#BEGIN FMT_COMMENT 
"Manual Z PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 100 V118

// Rung HBW_Program#35
// Offset 157
#BEGIN FMT_COMMENT 
"Manual Z Up"
#END

STR C114
ANDN X3
OUT Y5

// Rung HBW_Program#36
// Offset 160
#BEGIN FMT_COMMENT 
"Manual Z Down"
#END

STR C115
OUT Y4

// Rung HBW_Program#37
// Offset 162
#BEGIN FMT_COMMENT 
"Manual Conveyor PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 100 V118

// Rung HBW_Program#38
// Offset 177
#BEGIN FMT_COMMENT 
"Manual Conveyor In"
#END

STR C116
OUT Y49

// Rung HBW_Program#39
// Offset 179
#BEGIN FMT_COMMENT 
"Manual Conveyor Out"
#END

STR C117
OUT Y48

// Rung HBW_Program#40
// Offset 181
#BEGIN FMT_COMMENT 
"Jump to Ready"
#END

STR C103
JMP HBW_Program.S0

// Rung HBW_Program#41
// Offset 183
#BEGIN FMT_COMMENT 
"<FONT tsize=4>Homing Stage</FONT>"
#END

SG HBW_Program.S5

// Rung HBW_Program#42
// Offset 185
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#43
// Offset 193
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 33 V131

// Rung HBW_Program#44
// Offset 196
#BEGIN FMT_COMMENT 
"X Home - PWM"
#END

STRN X0
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 200 100
OUT Y51

// Rung HBW_Program#45
// Offset 212
#BEGIN FMT_COMMENT 
"Y Home - PWM"
#END

STRN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 75
OUT Y7

// Rung HBW_Program#46
// Offset 228
#BEGIN FMT_COMMENT 
"Z Home - PWM"
#END

STRN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 200 75
OUT Y5

// Rung HBW_Program#47
// Offset 244
#BEGIN FMT_COMMENT 
"Y Home - PWM"
#END

STRN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 200 75
OUT Y7

// Rung HBW_Program#48
// Offset 260
#BEGIN FMT_COMMENT 
"Jump to Homing Reset Stage"
#END

STR X0
AND X3
AND X11
JMP HBW_Program.S6

// Rung HBW_Program#49
// Offset 264
#BEGIN FMT_COMMENT 
"<FONT tsize=4>Homing Reset Stage</FONT>"
#END

SG HBW_Program.S6

// Rung HBW_Program#50
// Offset 266
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#51
// Offset 274
#BEGIN FMT_COMMENT 
"Reset counter for X axis encoder"
#END

STR ST1
RSTCT CT10

// Rung HBW_Program#52
// Offset 276
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 66 V131

// Rung HBW_Program#53
// Offset 279
#BEGIN FMT_COMMENT 
"Timer Delay<br>Wait for motor momentom to actually stop"
#END

STR ST1
ONDTMR T3 500 C0

// Rung HBW_Program#54
// Offset 283
#BEGIN FMT_COMMENT 
"Reset X Encoder"
#END

STR T3.Done
OUT C99

// Rung HBW_Program#55
// Offset 285
#BEGIN FMT_COMMENT 
"Jump to Ready"
#END

STR T3.Done
JMP HBW_Program.S1

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
SG VGR_Program.S0

// Rung VGR_Program#2
// Offset 2
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#3
// Offset 10
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#4
// Offset 12
SG VGR_Program.S1

// Rung VGR_Program#5
// Offset 14
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#6
// Offset 22
#BEGIN FMT_COMMENT 
"Rotate Crane CW if limiter is not hit"
#END

STR ST1
ANDN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y26

// Rung VGR_Program#7
// Offset 39
#BEGIN FMT_COMMENT 
"Retract crane arm on X axis until limiter is hit"
#END

STR ST1
ANDN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 50
OUT Y24

// Rung VGR_Program#8
// Offset 56
#BEGIN FMT_COMMENT 
"Retract crane arm on Y axis until limiter is hit"
#END

STR ST1
ANDN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y22

// Rung VGR_Program#9
// Offset 73
STR X25
AND X26
AND X27
JMP VGR_Program.S2

// Rung VGR_Program#10
// Offset 77
SG VGR_Program.S2

// Rung VGR_Program#11
// Offset 79
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#12
// Offset 87
#BEGIN FMT_COMMENT 
"VGR.T0 - Reset VGR to 0 state"
#END

STR C400
JMP VGR_Program.S2

// Rung VGR_Program#13
// Offset 89
#BEGIN FMT_COMMENT 
"VGR.T1 - Move disk from HBW to MPO"
#END

STR C410
JMP VGR_Program.S3

// Rung VGR_Program#14
// Offset 91
#BEGIN FMT_COMMENT 
"VGR.T2 - Move disk from SLD to Loading Bay"
#END

STR C420
JMP VGR_Program.S4

// Rung VGR_Program#15
// Offset 93
#BEGIN FMT_COMMENT 
"VGR.T3 - Move disk from Loading Bay to HBW"
#END

STR C430
JMP VGR_Program.S5

// Rung VGR_Program#16
// Offset 95
#BEGIN FMT_COMMENT 
"VGR.T4 - Move disk from Loading Bay to Shipping Truck"
#END

STR C440
JMP VGR_Program.S6

// Rung VGR_Program#17
// Offset 97
#BEGIN FMT_COMMENT 
"MANUAL CONTROL"
#END

STR C500
JMP VGR_Program.S7

// Rung VGR_Program#18
// Offset 99
SG VGR_Program.S20

// Rung VGR_Program#19
// Offset 101
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#20
// Offset 109
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#21
// Offset 111
SG VGR_Program.S3

// Rung VGR_Program#22
// Offset 113
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#23
// Offset 121
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#24
// Offset 123
SG VGR_Program.S4

// Rung VGR_Program#25
// Offset 125
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#26
// Offset 133
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#27
// Offset 135
SG VGR_Program.S5

// Rung VGR_Program#28
// Offset 137
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#29
// Offset 145
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#30
// Offset 147
SG VGR_Program.S6

// Rung VGR_Program#31
// Offset 149
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#32
// Offset 157
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#33
// Offset 159
SG VGR_Program.S7

// Rung VGR_Program#34
// Offset 161
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#35
// Offset 169
#BEGIN FMT_COMMENT 
"Rotate Crane CW"
#END

STR C501
ANDN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y26

// Rung VGR_Program#36
// Offset 186
#BEGIN FMT_COMMENT 
"Rotate Crane CCW"
#END

STR C502
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y27

// Rung VGR_Program#37
// Offset 202
#BEGIN FMT_COMMENT 
"Extend Crane X+"
#END

STR C503
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 50
OUT Y25

// Rung VGR_Program#38
// Offset 218
#BEGIN FMT_COMMENT 
"Retract Crane X-"
#END

STR C504
ANDN X25
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 50
OUT Y24

// Rung VGR_Program#39
// Offset 235
#BEGIN FMT_COMMENT 
"Extend Crane Y-"
#END

STR C506
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y23

// Rung VGR_Program#40
// Offset 251
#BEGIN FMT_COMMENT 
"Retract Crane Y+"
#END

STR C505
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y22

// Rung VGR_Program#41
// Offset 267
#BEGIN FMT_COMMENT 
"Turn on Compressor when in S7"
#END

STR C500
SET Y28

// Rung VGR_Program#42
// Offset 269
#BEGIN FMT_COMMENT 
"Set Vacuum"
#END

STRN C507
SET Y29

// Rung VGR_Program#43
// Offset 271
#BEGIN FMT_COMMENT 
"Release Vacuum"
#END

STR C507
RST Y29

// Rung VGR_Program#44
// Offset 273
#BEGIN FMT_COMMENT 
"Turn off compressor when not in S7"
#END

STRN C500
RST Y28

// Rung VGR_Program#45
// Offset 275
STRN C500
JMP VGR_Program.S1

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"This first stage currently sends the crane back to the "
"turn table, resets the compressor, and resets out detection "
"bit. Once it is sent back to the turn table it jumps to "
"stage 1"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STRN X16
OUT Y15

// Rung MPO_Program#4
// Offset 12
STR ST1
RST Y17

// Rung MPO_Program#5
// Offset 14
STR ST1
RST Y47

// Rung MPO_Program#6
// Offset 16
STR ST1
RST Y18

// Rung MPO_Program#7
// Offset 18
STR ST1
RST C1000

// Rung MPO_Program#8
// Offset 20
STR ST1
RST Y20

// Rung MPO_Program#9
// Offset 22
STR ST1
RST Y21

// Rung MPO_Program#10
// Offset 24
STRN X12
OUT Y46

// Rung MPO_Program#11
// Offset 26
STR C801
JMP MPO_Program.S7

// Rung MPO_Program#12
// Offset 28
STR X16
AND X12
ANDN C801
JMP MPO_Program.S1

// Rung MPO_Program#13
// Offset 32
SG MPO_Program.S1

// Rung MPO_Program#14
// Offset 34
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#15
// Offset 42
#BEGIN FMT_COMMENT 
"Always be Detecting if we have something, if we get "
"something set C1000 on"
#END

STRND X24
SET C1000

// Rung MPO_Program#16
// Offset 45
#BEGIN FMT_COMMENT 
"If we have something (C1000) and we get a go from Doug "
"(C800), start by turning on the compressor"
#END

STR C1000
AND C800
ANDN X17
SET Y17

// Rung MPO_Program#17
// Offset 49
#BEGIN FMT_COMMENT 
"If the compressor is on, and we are outside the oven, open "
"the door"
#END

STR Y17
AND X18
SET Y20

// Rung MPO_Program#18
// Offset 52
#BEGIN FMT_COMMENT 
"If the Oven Door is Open, and we are not all the way "
"inside, move the loading tray inside"
#END

STR Y20
ANDN X17
AND C800
OUT Y44

// Rung MPO_Program#19
// Offset 56
STR Y20
AND X17
RST Y20

// Rung MPO_Program#20
// Offset 59
STRND Y20
AND X17
RST Y17

// Rung MPO_Program#21
// Offset 63
STRND Y20
AND X17
OFFDTMR T100 3000 Y16

// Rung MPO_Program#22
// Offset 69
STRPD T100.Done
AND X17
JMP MPO_Program.S2

// Rung MPO_Program#23
// Offset 73
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#24
// Offset 75
SG MPO_Program.S2

// Rung MPO_Program#25
// Offset 77
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#26
// Offset 85
STR X17
SET Y17

// Rung MPO_Program#27
// Offset 87
STR X17
ANDN Y20
SET Y20

// Rung MPO_Program#28
// Offset 90
STR Y20
ANDN X18
OUT Y52

// Rung MPO_Program#29
// Offset 93
STR X18
RST Y17

// Rung MPO_Program#30
// Offset 95
STR X18
RST Y20

// Rung MPO_Program#31
// Offset 97
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#32
// Offset 99
STR X18
JMP MPO_Program.S3

// Rung MPO_Program#33
// Offset 101
SG MPO_Program.S3

// Rung MPO_Program#34
// Offset 103
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#35
// Offset 111
#BEGIN FMT_COMMENT 
"If we have detected something at the oven (c800), are not "
"already at the oven (X19), and the vacuum is not on [Which "
"means we do not have anything] (Y18), move crane towards "
"oven (Y53)"
#END

STRN X19
AND C800
ANDN Y18
OUT Y53

// Rung MPO_Program#36
// Offset 115
#BEGIN FMT_COMMENT 
"When we first reach the oven (X19), turn on the compressor(Y17)"
#END

STRPD X19
SET Y17

// Rung MPO_Program#37
// Offset 118
#BEGIN FMT_COMMENT 
"When we reach the oven (X19) go down, and come back up "
"after 3 seconds"
#END

STRPD X19
OFFDTMR T101 3000 Y19

// Rung MPO_Program#38
// Offset 123
#BEGIN FMT_COMMENT 
"Turn on the vacuum in order to pick up disk, before the "
"timer turns the crane down bit off. #TODO finish comment "
"here"
#END

STRLE T101.Acc 750
AND T101.Timing
SET Y18

// Rung MPO_Program#39
// Offset 129
STRPD T101.Done
AND X19
JMP MPO_Program.S4

// Rung MPO_Program#40
// Offset 133
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#41
// Offset 135
SG MPO_Program.S4

// Rung MPO_Program#42
// Offset 137
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#43
// Offset 145
#BEGIN FMT_COMMENT 
"When the vacuum is on [which means we have something] "
"(Y18), we are done timing (T0.Done), and we are not at the "
"turn table position (X16) then run the crane over to the "
"turn table position(Y15)"
#END

STR Y18
ANDN X16
OUT Y15

// Rung MPO_Program#44
// Offset 148
#BEGIN FMT_COMMENT 
"When we turn off the vacuum(Y18) and are at the turntable "
"positon(X16), jump to the next stage"
#END

STRPD X16
OFFDTMR T102 3000 Y19

// Rung MPO_Program#45
// Offset 153
STRLE T102.Acc 750
AND T102.Timing
RST Y18

// Rung MPO_Program#46
// Offset 159
STR X16
ANDPD T102.Done
JMP MPO_Program.S5

// Rung MPO_Program#47
// Offset 163
#BEGIN FMT_COMMENT 
"This is the reset button"
#END

STR C802
JMP MPO_Program.S0

// Rung MPO_Program#48
// Offset 165
SG MPO_Program.S5

// Rung MPO_Program#49
// Offset 167
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#50
// Offset 175
STRN X15
AND C800
OUT Y45

// Rung MPO_Program#51
// Offset 178
STRPD X15
OFFDTMR T103 3000 Y43

// Rung MPO_Program#52
// Offset 183
STR X15
ANDPD T3.Done
ANDN X13
JMP MPO_Program.S6

// Rung MPO_Program#53
// Offset 188
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#54
// Offset 190
SG MPO_Program.S6

// Rung MPO_Program#55
// Offset 192
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#56
// Offset 200
STR C800
ANDN X13
OUT Y45

// Rung MPO_Program#57
// Offset 203
STRPD X13
SET Y18

// Rung MPO_Program#58
// Offset 206
STRPD X13
OFFDTMR T103 750 Y21

// Rung MPO_Program#59
// Offset 211
STRPD X13
SET Y47

// Rung MPO_Program#60
// Offset 214
STRPD X14
RST Y47

// Rung MPO_Program#61
// Offset 217
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#62
// Offset 219
STRN X14
JMP MPO_Program.S0

// Rung MPO_Program#63
// Offset 221
NOP

// Rung MPO_Program#64
// Offset 222
SG MPO_Program.S7

// Rung MPO_Program#65
// Offset 224
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#66
// Offset 232
STR ST1
FLASHER 500 500 Y39

// Rung MPO_Program#67
// Offset 237
STR ST1
FLASHER 500 500 Y40

// Rung MPO_Program#68
// Offset 242
STR ST1
FLASHER 500 500 Y41

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"State 0: Listen for Doug's instruction to start module."
#END

SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
NOP

// Rung SLD_Program#3
// Offset 3
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#4
// Offset 11
#BEGIN FMT_COMMENT 
"Wait for Doug Start Command"
#END

STR C1610
JMP SLD_Program.S1

// Rung SLD_Program#5
// Offset 13
#BEGIN FMT_COMMENT 
"Enter manual mode S10"
#END

STR C1650
JMP SLD_Program.S10

// Rung SLD_Program#6
// Offset 15
#BEGIN FMT_COMMENT 
"Stage 10 has manual controls for SLD"
#END

SG SLD_Program.S10

// Rung SLD_Program#7
// Offset 17
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#8
// Offset 25
#BEGIN FMT_COMMENT 
"Manual control for conveyor belt"
#END

STR C1651
OUT Y30

// Rung SLD_Program#9
// Offset 27
#BEGIN FMT_COMMENT 
"Manual Compressor Control"
#END

STR C1652
OUT Y31

// Rung SLD_Program#10
// Offset 29
#BEGIN FMT_COMMENT 
"Manual White Ejector"
#END

STR C1653
OUT Y32

// Rung SLD_Program#11
// Offset 31
#BEGIN FMT_COMMENT 
"Manual Red Ejector"
#END

STR C1654
OUT Y33

// Rung SLD_Program#12
// Offset 33
#BEGIN FMT_COMMENT 
"Manual Blue Ejector"
#END

STR C1655
OUT Y34

// Rung SLD_Program#13
// Offset 35
STR ST1
SUBSCRIB "4 WX0 V3201 1 0x4"

// Rung SLD_Program#14
// Offset 40
#BEGIN FMT_COMMENT 
"Manual Auto Run"
#END

STR C1611
JMP SLD_Program.S1

// Rung SLD_Program#15
// Offset 42
STRN C1650
JMP SLD_Program.S0

// Rung SLD_Program#16
// Offset 44
SG SLD_Program.S1

// Rung SLD_Program#17
// Offset 46
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#18
// Offset 54
#BEGIN FMT_COMMENT 
"When the light barrier is broken, turns on timer to run "
"conveyor belt with disk until the middle of color sensor."
#END

STR ST1
ANDND X35
OFFDTMR T200 2400 C1600

// Rung SLD_Program#19
// Offset 60
#BEGIN FMT_COMMENT 
"Turn on Timer to move disk into color detection"
#END

STR C1600
OUT Y30

// Rung SLD_Program#20
// Offset 62
STR C1600
OUT C1605

// Rung SLD_Program#21
// Offset 64
#BEGIN FMT_COMMENT 
"When conveyor stops, jump to s2"
#END

STRND C1600
JMP SLD_Program.S2

// Rung SLD_Program#22
// Offset 67
#BEGIN FMT_COMMENT 
"State 2: The disk color is determined. If the analog value "
"is in a given range, increment counter for color disk array "
"and set timer for disk to move on conveyor."
#END

SG SLD_Program.S2

// Rung SLD_Program#23
// Offset 69
STR ST1
SUBSCRIB "4 WX0 V3200 1 0x4"

// Rung SLD_Program#24
// Offset 74
STRN C1605
OFFDTMR T201 2000 C1606

// Rung SLD_Program#25
// Offset 78
STR C1606
RANGECHECK V3200 0x1 10000 8000 C1601

// Rung SLD_Program#26
// Offset 83
#BEGIN FMT_COMMENT 
"Counter increments +1 on White.<br>Bit C1630 resets the Counter"
#END

STR C1601
STR C1630
CNT CT200 0

// Rung SLD_Program#27
// Offset 87
#BEGIN FMT_COMMENT 
"If in White range, Set timer for white conveyor<br> "
#END

STR C1601
JMP SLD_Program.S3

// Rung SLD_Program#28
// Offset 89
NOP

// Rung SLD_Program#29
// Offset 90
NOP

// Rung SLD_Program#30
// Offset 91
STRN C1606
RANGECHECK V3200 0x1 24500 21000 C1602

// Rung SLD_Program#31
// Offset 96
STR C1602
OUT Y41

// Rung SLD_Program#32
// Offset 98
STRN C1606
RANGECHECK V3200 0x1 20000 18000 C1603

// Rung SLD_Program#33
// Offset 103
STR C1603
OUT Y40

// Rung SLD_Program#34
// Offset 105
SG SLD_Program.S3

// Rung SLD_Program#35
// Offset 107
STRLE V3201 3
OFFDTMR T202 5000 C1604

// Rung SLD_Program#36
// Offset 114
STR C1604
OUT Y30

// Rung SLD_Program#37
// Offset 116
NOP

// Rung SLD_Program#38
// Offset 117
SG SLD_Program.S4

// Rung SLD_Program#39
// Offset 119
NOP

// Rung SLD_Program#40
// Offset 120
NOP

// Rung SLD_Program#41
// Offset 121
NOP

// Rung SLD_Program#42
// Offset 122
SG SLD_Program.S5

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STRN X40
OUT Y36

// Rung SSC_Program#4
// Offset 12
STRN X41
OUT Y38

// Rung SSC_Program#5
// Offset 14
STR X40
AND X41
JMP SSC_Program.S1

// Rung SSC_Program#6
// Offset 17
SG SSC_Program.S1

// Rung SSC_Program#7
// Offset 19
#BEGIN FMT_COMMENT 
"This Stage will be for looking at the High Bay Warehouse"
#END

STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#8
// Offset 27
#BEGIN FMT_COMMENT 
"If something is detected for pick up for 2 seconds (X42 is "
"not on), write to MI600 to let Doug know we got something."
#END

STRN X42
ONDTMR T150 2000 MI600

// Rung SSC_Program#9
// Offset 31
#BEGIN FMT_COMMENT 
"This means something has been dropped off, but is now "
"being picked up by the crane so turn off MI600"
#END

STRPD X42
AND MI600
RST MI600

// Rung SSC_Program#10
// Offset 35
#BEGIN FMT_COMMENT 
"If something is detected for drop off (x43 is not on), "
"write to MI601 to let Doug know we have something"
#END

STRN X43
ONDTMR T150 2000 MI601

// End of Code Block SSC_Program
$PGMEND SSC_Program

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"D0","MHR","",""
"D1","MHR1602","",""
"T3","T_HBW_S6","",""
#END

