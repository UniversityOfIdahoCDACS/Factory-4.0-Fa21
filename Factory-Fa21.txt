// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\Nick\Documents\GitHub\Factory-4.0-Fa21\Factory-Fa21.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
937eef317d93981d8e275c88e7843e6e5721632f1df4507f8048a02079db3d4caa3c56f71d7542db
737173808f549c16b014fcab13c8f06728ee9d2658f6a75decbbc3ba0696c70ea8fc4dc9352e9cd7
a16a0fb27f3ca1799363501c6f5be40818b78a30e2d157dca0c79b9e220b0c26e3da61691872eca8
cc0cdd8ac69f39482a4a9e1d42ce6b6295a423455a42d5fa10b1990a1beac641d353cbe472679442
8a00f4a6cf411df645f1e44d3109cb4baacfa3f9069f029ff728d45c6145f38c1c3c5330fe3edb4d
06cf4dfcc31f989480bfb1999752d67ec703dfc94abf8a6839fa1c90f6f71c29cbe26d10cc627055
5481ad96a08ea74cbea59ce0f73ab43b4e04b2baacfefa3998fd483c819c42159ca11da20fa3e218
567b88c87719b7cb4a505c35e69b234412b71748ab82fc01ccfa057f1d354bfb3549d3e357354e39
76d7d93960cd6d89947ddc5810ff104f20085e48073ebac86472fe854d97f83fde0318e57d39bcab
2cf7cc067fa54de9d3b3ecfae195136586c59eba64d8d262d2c534b51345253c88c76aece7c8b10e
ec13a66d38c677213837dd36a2baaf12ba23b44667cddd5416f3cf84c9b4f6da6c500f7430e0fcda
56bdc6a9ddea8c411ba13db24eabd3ffa6555fa7b9e10389e568ed355664b549f25ac4b422c028a4
5aca0c946cff23dcb67f533225c761223f3baaada4e8f1c8f5a20eef49d89409cf3339d1d7788326
bcce1e49445fb006492b6c3b3d94a4b6892d03a4b588bbe32fea6037af10cb415f6a212d4e1c2c20
224edf83027256f3b28d8ac23eaffc8496f062bad8e63f68b19e7c2623a244ebcc09aad364149a98
90647d13199d390cd650925731b6909800d1c05b9e55265ff9ec23c8f880931e42a511aa8831aca3
43df6decd4fdc5347211b60b0545c5caa4666cd1d8f4ae67fd75aa77b8736e3eb2a510e4df78bcf5
2c05d97b597734d934bdfb442226b2a8c5a7ec64da3c0c75a01fb7063fa3164ff413f4b1345e9307
e453e9ddad87b21d0f0596128f384658f426c841ea6906fcce209f512b61358320cefe066ff2dc83
497a9b5704e4bb6d7d7a2d795bd2886acfb576fadeaa2513cc8c787cb3178da330edf323104c4ad7
02546cfcdfe1c80211cd86f758986245e623ba269e3c17bfa70da9a8d88dd384997bb2946d6d16a6
ea8f81a80c69550c88527e968459c431a4b470d0b4a2fc13031677dd3b0e2420dfac227d40aa022e
67829ee0feaae45a9aabc76b15022108c134749561c13259d2c65a740df5a02085199fd190b8fa7a
1b73b078dbe82a0276a840d7d98371a40afa133b5999be20db58e238c6e661ad7b2659d96e2ee8ba
9bdea3cf46f98730633c9c3032dfccdfa7dfdd51b612cfe715c6e86f1dbe322abca6f2acbfe25c33
6416693441270d7354ba3d736a85d2283d8e1b431615b6d52b42fcfbc5a0669527ef72daebb5aa8c
d3e242f82576d1a2f01dbed5f2fcdc841efa4429d975a535a54ad79dd612ac66db71f785cbae18ab
172018873bc3964c1636b6d830a62596c9324db62216ae9b8ced81e57133803bba16f51e403d408a
92dc811d7aa45697ca85a8e02c6de57c58978f7aa3e09af82ca868006a5edc8f9e445c0357a3c6bf
9da64f70d6a90fd2ff2a845880b59700b476f69753de09af8ee0ef6f15ffec2c2b1f235a355426cb
1b537e58ad70ae5361444257b5727b6269007e074a0b848e62499bfda320e2a48207812dc476a8cf
b12cff70f5ab0b29bb79263debaa45b1d008ed0e3343fe66c0ff7e5e4b29d31e41b24552ed047520
d105cd7027d6bd68494ac8c53f5f5937a45fdf9cb05eb26fe82e312d9c9850c1ac51893ae81cbcfb
14e00d32525598c734d390a563eab0a368c5594c870c38a8289fab5f2a0183f9857fbee88a7b1624
6ccf3264f312db010e856ca4dde7a153461e6d760c8ebf59737fade8278f79996a968ee9303a80d2
69ca4411f3cb83143030879fb36d2fc7bb729d6af832a58485eed489f6e772d92ba67734f825f5ea
dd836a40409c9f419d29462ca7280835bb0db5f8dc5fcbe92ae6b89df51f01a2dd257501fab7caf2
719d88c0ebe2c654eb212e7eca8faeb7081bda3ca664d8129833abc9230e80e5479b6d9c4432d174
d7f835832bdda4017b6c516b76d133fe77d8fa2648dd1776ddde1d62852a4f5a471d1dfe2340c6ac
2fad3905bfa7094c8ebc1537442697333025c91ac5a4a01eb5874b940743d8ea788ad590c962a05c
bf7644cd2f5c8e68cccfdb3360721115a3281a36ea79fd5ac289061605573fe20b84bc89cb699a36
1ef085449a72e73dcf77a1a15300b644bf55eda1767c2aebf55682babf5963cc80140c010393175a
c6759abea8451babc52382ae40d4ea74795627ebdf3a9ea6091313baf4c914e65eef7969e71db825
f9e5edde16476a3092cf01fa1eaa445b37df97fe1479f3bdf740bd030de3e2fb5b908e3e25a9b0fb
0b865f5c6051ccf9a7f78091fe2a5ca0be0e43af3c7fc6c14b625ad2db9597c1c59a69b8fd4ed4c9
4f0ae8668c6709e9dd2cde14e03828ecfadf94fd939580ec31d7eaaef3dddeb5028ac136a7a1de61
37966b9ec803b018fccca965e20cbc7e15f3e08012f3a013c9149fe0c93cf8ba597de8d621838577
3c6c4332a11abb017b9e28d55de59865c83c3c6293a13b39dd20e50c67a96a5459dc3adaf474a066
a7647cf8d17371845dcd5db9b414a64c2eec568b541c26f5d797cb74411fab79b8d2086f9e474055
024682d54dcc92a6f6e42ea111d4bf2cc083f68f849fa3ddeda5230e24b1ad8ac0bfb9ed28494042
5bf998cd144ae76ddf847b97ab1797670e28b27057fb02956f52d97df433668b709a4748f0018536
70ce2fd18d91df89c58ab7b33f114f1ce9336c73ca28edab5d93ab65d89b07617037e273697decd8
de6f8b130a0c87ef314d75157e4f42bbdab81bbe882c47ef096b702c799c41398770cf93c800df05
ef83900acc7452d973633b1650b132232decebd6139585b24d978df4ce79d904619e162edb61a3a5
f7ab962de0e65bb70e1f53c252165f1baf4ab4b3020a31a332cad68e97584db4b10219ea5b33a9e9
eed111ffd52342126a8d48784f332b96d7ef0b40d1c7d6d284b707e0c08a7f1fdb67f66adefc72d3
61554c0adbc8906f0e16fbd9b0efb7a2c5690f47be4e3de044c0d30d8aead6f4af364d7fd55fe299
d62e452d2e5f28c656d93ee2652d0b92328f083c827dd9acdb6547f94c0f22a3002a32f2468475c1
d8eadfc9da88c0b508d00fac0d5edcd98c65e80e1bd0fea054fe0c9dc80dc437f3f721e94016bbcd
673a061c74fd3bf86b4098a33a9a27a071afbb41469e469a0bfab151ef920d21d2adc7ce060e2c6e
2135e71353d71ffbc7cd3366b3a4094ef867017113aafc19597871af7b9edde8756808daacc15c01
72b8e8d69c86a3cb21b873fdbc488a4c9a00abec5ac55baafe288db08ad55eb60708a3bf4b3dd8a5
96b30023a7135e17c99ebf74d987319985a764a35b5ed00647a0b2764e6733a952f7f6ab36fd3753
73a909576a8c9b0916edb61ab72a70460041a6b4704a0340421de981ad5087fcf4dbef25b1315867
a90c1c9272bb80ae42f2faf136516349beac94c10e0b45ad911f66714b49c574acddb4fa8394d3b2
b5598a5205d8130e7d9254cbc811922dc3ff71c8d85684f29785223b154e0641a5293dbed2375725
f7229e937a895a5f640643bc9c5bb99355a8c42169d916b6f180173c370418293719f83a31b92393
4e1d5a0b94bd825272a399c17ce323192f412ca4cb1dd30c122912385f4d75200f0b8508de3c6b7c
721f9322fa3b5224b4d8152ef01825e43b251e218b105e7c052217472a2eaceaf31e7044141c3edb
9c9a22741552bbc6cfc403645e745eb928e8c5f098b8216e2db75c50f24e801f6e169a19b932129c
34759280348c635e2eb97278918ebfa10fd973d4faaef8a7b420186d2879a531dbe1b904c4d4a838
98136d436e6218c77e458cd74db6132316161d22bf7cf0cb6128abc7226adaad4c85be907e4e8857
49b2829c05172f7a296c81a9411673711754ab731bea404bfa90e4a5d18fdb7a4f3d6850ce5e1032
4b645145455a705336e1fb372a7e923a3c9339674e07310e3a21760d846f17d06198f3785a7bf5c7
85c6c1e2d9ca24581714e939d920aca426e68177872b500f2d3e5066c1a874aef6bca39984abf4b2
d160a0138131867291f63291edada854e21eca4e5d46d52a493cfbed743a8f9059ff5a457f7bf94f
a92655da11e5a5498bad769659ca25ae99e807e1860a8b4b19fc422a6eecaab35ef595b36237a46e
aebf2798a2ad662db5ba13ef1d71e69ab99c3f1cbac15e75aa7ec461e804e1c1b0f242687311c972
78e3ec4559a553121b8adfe9319a324cbb7248967cc1606ba4434cdedb1e1e43038cc7fd0f5fdb88
5deabcd7c8069d2d2af97bcb10d269a33a359c00efadf18ef61f9feb5e22e035b33c155d930068e6
aa7995bafa1ad92a58cc5b202f930c3dd6fee3fbc2f1e658110472e69207f47d06405fb53f63d25a
bba4253e9b4cc069fd0c9e5b77f310be432eacfd8183bcd423918b645df2f563c161c61a7569f378
540d3b9234946c5e597f19e4629e597b4276933eacba4db245438662753b64749be626b49dfe92bd
90c9edaf7e9cc7984ba4b1aed0b87049d2656da23904ad8f8c1e3cb5cd17833d0a791d21849a574f
b85d2ec539f9e18685d501c0c91ad9e9f0414af2853062ffe513327728bafa522f822591017bf973
8c273777d515bf4263267933de9613f67621a4d7922d87fe6e74b28eadf9d20ad13ea22c031b48a5
380ad5dee80cf4dcd177b8e8482eb56ea924eae13e47e25341f51e9dd142f6be9735e7bb1e331386
66b99147274d49bbcb3437875f4daab404ed4ee35ea9334573e0bdbb0029b06678e0f2c9d16b9a45
e6cbe772924d65b3d3a1bd0ccbb7ee273aea0d168a9cc1593d7311fc72d56506d6db5e638b0e4047
003cb6a80f1b939051c07af3f678941496e915af60b47008a566457493d2e9d7c20cd3edca2023e4
c4ad7422f927494ea46c77fc54ea88bcf6f5fed4a0eeae52b0a54a0b4cf05a0d5d40d38300e07a18
c8413abbbd94676a48e9589df377781e7e4865cb34de35ae396a740e737397df1a95250ed2317635
1db0954d247340f618f6966f8797092e7cc7cbbd8b8342bcf7f39ecbeade646be4da0bf2156210b9
f543948b2187ea078f2463badf1e4aa6b68bf75cee0a61a83a2a81ccb4dc427288a83ca77a574fe0
549e394b97d73744bdcd16140dca4679183ac35b2dd0c082677e75ef79baf29c043a88dc6c53bdd6
d6e6d9562e6088604aaf8bd878ad900202f9513308455c2b12c35b1572eb659612476cd6b1cd6c0f
4ef274866120526a57c954f546dd0673b90adec9a04b04f8715a24bdda8461c1a635eeba42ce7bc1
33354795cbc3e369ad018a2894d696ac49be3809d58e140f8895defc3edb799efe67326d11ec5b1c
fd954a64326e52ff1316939db8bf9420cd489af91e203190cfe617203b42019d5cfa394f7b6333b8
d9c062b6e2709737cfd532ec65d0b731441317e1a9ce5a198dcd9bfac3d3197cfa15bf00dd34a7ab
47f7349b9dc27b6bfb8d0dd20622f7e7f34b77fc763118fc9c277e0ea1b23a273e4c084703acd388
e5a33b6b653982cae2db45fd0cc8ab5ed98a55d719b8637889ee526c25275b1623966333aa4fa4f2
ed80ada100af1d046a728ed69ba367976acaf94872f713195af72889514b0fa62fbaa8c46332fd3f
f12aa5cf05de9dd7995f0c3f1c3a9d810b777addac6e87232c1ddde94a9979029528bc3ecb3f68a0
ae9d5752263590d198aa3d98f7138e17548284dbff0713a45f956b67d39144174618fba5622dd3d4
cc6b91d66253fcb755979996980c5c488e96c21f012fed881dde25bfc843146ff7a50458ef525ec6
d4f7aa984297dc2b1acf5c3d2d48a13eae6d6c0265856cf1c44ab1f1c63ce265410064102dc36773
0b3e4999a4dc61bc7c4a68a90b0ac5ecc63db4d032b319327afe80666d294a37b759a008cc6ed94f
726e8dbbc69d12d04625e8272512562f1b94633050f83dfe43e4c6f606b298650b965f9252c07337
63c2423ab0d9af6c1ce37d53fbaafb751c1c1c3c3d9ec01dc536b2475c72bf7933080c52704abd18
307834421caa1effb1f2df0d561e9582f30f503938392326fab76e526022fc8909ddb519e1d41609
38c9fc1a85060661b354f82408916542a1c0cfbb80f8b958c370366b09f3904d45189eb83dcef0ee
ce2801f0e18e6b75f0e44fe78e5f341ef63303f30ecc4f8c8fd5a2326d9b6561517ef3758d92c699
c000f312655657dd396e99df8826cb4446cae7d276a244ea00913699f135ca7c13e26671d8304594
ff157d7857a05d9f7280915e95408d9f09fb565ee7da18118173f53164da87b8e74288e51fbd8594
90adb28ea09d56287fb96291c712e2f22766ea2342675a7316119ada756a4d3d18c4d721f103c913
bde1b6bd597c115a1aee561edd784e6c0ae2c33acde479be5dd31fe209e4790ec4f21e09388fed6e
7a946536adc311eaba5a01b4cac3fccaf4ab69a347d1029f8d872ff3090c8993931dbd4428a821ad
2c553695446ad023e1ed2bf013c4d3d626ecb610b8bb96f36f5dae79a4d88ab545b87a2aa6370223
4c65605f53da94d193b3c6caa777bd22548e3ef7cda07acb201b16c5eaa79285f824433cdd39fa53
dce7352a71b7f26c23f90ebdaaad125e43242533165f0a2495751949f5c88ccbebf88652cd10c233
494554703f673f4c80b9d65ff05871bfad267ec99bc435a89fee1f311b61f7a7d654e308c1cfebef
b24f232c0bca515abcaa6e88cbab78fcceb59ca9cbc3fd336b8422cf6588d0c1334fddb7b2f6ee5b
1e52fbe1c9dc9dd69e073e5caa5fadf9085647e487c82475c062fa56a5c128e161ea14946c33d149
373494f93116c11f73ebb07c74b7da4b91a8bd3b0b1c89499d0b3b61019e41c711ad121f2bacbf0f
631ec1a9bcf20cc27ebe862747b2b6586a7e068f9522f7e9f13d799f27868c314606f401f549b575
85249311551023293abe562a87888f043cb976fd869d676ec946ab0056afe5bc192666211dd34e30
562d4c80d203a3d718e7f72a6ce66a583fcd03152058e3784e6eb5eb3a22ce7292bca49b766edc41
e4f84af5eda2f468701ce8f82f33c862cf0b80225b78f75d3c42a723c07204157e1a6c92fad82394
556c6c3a6855202e92040cc44c06ac193bf80e686b3acb14f18090a6a7c60467b3f92c0865b41bda
7235f611b31351755c2a79fd1ef9d6c96b72c4698bdced5926c6d8f31a0b238c7ff081581b50a30d
07fa9cb94387753e7ae9ec6e4534da18acc62676033a273e1d140ccb4cbf943fbbb4471a4c511cfb
8e01846a947e617d656aa4624243a6b7fb419b9bf824eae935cb1057209fdf5bdf75bc66a108caa2
4a5faaed279cf1e5ec1fb7562cbbf72449848f8073f4d6a1b1db0478c5db68a560dc6819172394b5
4ae805d7b3b9a92933d8cb7de391c0adc783fdb37e4b536290f45c530f91375b76c6839ef0a6687a
0b750addc55bd15ceefb0f1620ebcfaaa0bd294b78ef0c629b6827de6751f2ce71d3d940f55a5aea
cced19664886ec4ac6c2e3449cfacb0764de0b71808fb5496f56b8d8f1e969f854a4f4e8006905b1
1be1c450a0f0a0dd57511b1f314f64a3eaa1240a5f85c233346191ba02e524e1f218bdf669da076f
4cf70891ee41520ecca59b52b92da3454763c9c6b858f3c77d2cd089ddf018d3fd08e3f34fc29671
3a09314a50c06576de5074af8b02ccfd7b116a496363f1e1f812a0efa2ee58b18967f358718e5a82
d3d4a384af99ee887b5bc2b4b1bcdd5c695d6b0f90cdfa1ccfbeff551c7e953ca52e850554251788
8034dec86fd44670e513b9d1913575644a65f8fbf984308c0ff06b5be2809d858a642f36eedb9be8
f663340d903b48f993a4ec9b6d0bcef2bd1178276b224f8b7671c58027d2c835833f3c16a7fac503
ef160a81c1056186df34de1e2d5295f372285e246d3655a83f63246239d57bc64a43ea6eb3e9afbc
2a761836383fc27eab1ec29737294802044647d709a1c3adb56bf3709c3ecf9d4ed728b4865614a0
b70dda0d3958e94f43694ddc3d9259bdcd39b6132056b243a28bcf905c5bdc054323a647056c7e6f
f4be6d3d4786b36327afddd48c8ae44d2f7e279b1c8185819c979ab404dcfd177320ec0c584efb0c
8c702eb30e5cbcad2e78770ea34ccd702f8c4f470a5b27d2db34cadba159f2809c9baae5a27fb2fc
602e259708538139a7b954cd1541fcef540ae7e46d3a52c1e8fe19ba9cea91239c7f441d11c74f28
9da634644068607d1d3fcf7ea341ebf6cb0673967739fcf5d5cb87051675ca4bee3951ea2f361f8e
a3d2db26394dd597318bf4b9121db377119d293c545ab4717e0a96e9e3e44289e3b32749ba2832e6
977becf7120438c9216e784da40428c4b4386577bbae92937e9fef13dff4db44bfd4992e584dc3d6
930467fb7476cc840f88b043f509470dcd03c4b5ec26596d0a6cee8264d67a39278c806e8f46731b
4f4a44bd1ebf31d6638f145611cdb827e475f0f6dea0e8ed0e7b046dc7b0ec5221fa3e4075a84e25
7fa453485020bd66730eb7f87ddc5087cc12ea657294f3b11954f5ee51a5a090b8c87164df7ef589
13f4e8144a0da01cadc868484ca70bfffb9a1694a17f2ddf8fa5e6147f564807d7428ba1a68baca3
63957d8e8018d8e35fba86ebb4c4b9698b463327a3cf479319350cf4ed65b657276d58ec9d88f499
3b0b985d8f97127223e713d34d62938001a7e74548dfbe4368a8bc7884b379d8f236d2b84c5e61ae
48772647aeff2054a094945b2d99b2f07d311b6f67467e55d06ecb6da04b61b47a07b433dce29d04
691da785591384ca57729d096d38bec480febcab3c4ae46f80040ff138cd3dbe3ec2ded17e39d25d
e907b6926abe2259d5fef952cf50730af7d34c36558ccc46264811d5a797105e959f2ab0c3afb009
fcd9d21d8b306f9f68a8bea2332e6d71b5b477aee4c6ffe31732eefc60a0f5305cbc2ca483f1a7c8
10f917d38657d49a141aa7e4271c5c6dfdbe888a9fd2f7a2377646b1f8376c30755c08e400933d93
0dd0c88ea8bfa7cd5240c63f7f04b0a11e384f287371b92dd90efd357a9257646c966a7dfeb665ea
3a52db28bb285a04ad3a25c85733d3115c47c78f0674b36c7b2c3d361a89b3135dba6f29969e4314
a7d66dded8972ff7b91700480037ff89f88fb557a92eb61d8c2f8124eb28d1a81f28f5c09f288e3d
02165658324cdd98c928752c3a3d806c0b581933c10c732d67f6ba318a17e2b647ee099998f5aa25
097092369ce6a5fb0e1e50417b532fe7e05fa11c853605ac4c9c7951e24d0dfb945d30030653d577
44d8d08670297d2d9672365685491535a24574c19ed6478fbd27b30806e062878f11cb9d6cbc2d3b
e8c5e2530f4268ab39a861a3e8c0351859eaad934702f2e2a80f67290719f5a51699abf556fb9df0
106b3a7c0c1ff866ad2e40fcf1cd4eb329ebb5c25f16c9ca63b86e094d5ef49c99868223bbc5fdf4
7395c5ccfec270e09d0dea627d416edcf8d20261930c26f35c6b0c2691139adab175a5f72fba83c5
b6543b16f43edc7ff2b7247f51a05aa4233823d7213091d5b826e13f2839c9b16d6d28791ffdbfd1
b4db78e344b83c7b9f3916235f5cfb9e2e91341ad052f0dd5374accc426f920aa1cd596e2c572b39
ebc540253fb401ec89cbf410f9beb979599ae003e033e37394d944e58935f27c3732eff07038d2a9
ed5e17400ed7d2685748db4048a93ede9fb0014831648fc71052061299f89fb1bf40f147588c78df
3ab27e6d52dcc03016e652a041349cb577b4065acb257329852b0622b21899d75ca36aaf87c5c124
03ec64fa8d61e6b83e27b7798daadf011861ab926d815f1f8f291a9cfdaf4d7b7ab25cff521418f0
9c9fd13491e735724775a9b8564a3c5319ff42d8c41ff090619dd8b6015a6d104764dcc682be28d5
79af32d7dbe87a6e9e2853cea027049d266551a8d80ad290ee805149fa2f79175b8539642cc7cf9b
eb3bf5f3244652973b5305d1af9cc838fa80222b0d16ce7ce8fb087396ed848c817399a8ef4c1174
2dcb7f8daf6e24a8abe8417d9300ce116350723adcc1273899383609bbb348c985146f8443e61d11
4ad769e776e3fee9dcae6294bd034b6e9f688a8576fcc54880ff9a37f2e01ae8dfad76a52b4ee43c
ed53c92f5909ed216e5fe8e5636d61f702819c156d8185f20877a6303eaae1c0b6b1b4b6d906be3a
88330e3bbcc36d147178957ab11366df23c12d35f0de5928b68d37ef8f413588c66b98089939e078
38e528bfa3b29f6c3538c8e6bcea0830ad2ae10afcadd6abb344052c10c2f706d49c64235a12f3e6
1082d1e3d78f3a0620d722b35e8db6f4517f9646555ec9e0147820218a8ca1b247c33cb19b9aae4c
eb1318302131c892fd79fc42583e4be674044236e47e7055d146d710c951cd8f05feb6fbbb09df92
ea651ee35b2717d978e804bede91365f5a506fe5c8f99578b699ded2a599324ca9edce29e3649dd0
39278f59e8921ddd596f7faf9685efb7cbbc24e4f14be1b9f681440be5019bc623360ddd516e24f4
a88eef57ff8d3fa982dc4dd344ad16fbc201f10d74228391c0b8baa9ba40fb904fcea282097bccd5
952b205229076ac50ed4dbb98ed2b34f70defb2f5081a7918c75bb0434fc742234b60cb4ae9a6128
c88b5e47ddf6e0f4bba9bb2a5062b85028471d9e6855708dbd856cbb2331c854eb2de7347cc6629f
0ea6d15cfd43214ae681ca20f5cb4c260e254dfb36360ac6d2069223fc66711301a529ef0274f99a
0befb467119247b33cb321111c2c9d62123630a40f20f530024f67934ce60ce29989aaacd6aaa87e
715c55a05bfec1d16541fe64023349d1699b348ac4231c684f8de40859bd7a6defa0592e43ba6e7f
8d1d8fcac9cdfff98098933769728c0d6f45f51afc018caae5adf09cf6adcdddd3434bd8e2ee0d56
fc4caa171a6c24a21f3e66cd14812cd7b938fde911261a4a2fbd260146f0ea3792aebc4b9ff1204e
f9345fc5b68646b4bf19668c0fac713e177b101433a44051505f1086d1bd8ca5abec4a82a395bc9c
dee8a2af78fb1f396d9dc1fe7fa6aaf55b7b43eacf23b9be99924c59d609793946cee352ad457bb1
94a92d99702d5210defaa3a43b71b39eea5c67e3f6634bd6e3504a7d523ce9faac46ce43f68c06d0
32140885cc21867f82f92b05c5e958f2193f65e33692f6fa4886902c0d31ed66045dbbba6a4b5952
62b9aa59b829ce5cd0edabb5368b0f3f71495b6f12242e6a86198b4316e5f04155080357ffaa8d78
f6580816ffabc760218e2f8bba6362d49bffe86826ede938e07661b4c51d2d99acb74416ff609d12
eb7931831302d621ee08334fc2225885cc4a5ea4b139009147cc339e7d6137766613f3619e3c303c
797f896afd9c3515f8922c7f235f127cb80f77b7203de8c52a3e933fff54d00231e2247ec6990723
b77f66d1fa19567427a86657d811a2b4b53353f00c1b51fed2d1c8103f87f5dd4c63c046a174a2d3
641819870cc1e7d34a3945f0b262e663cae916d172aa4f55c9ac5430259e89969f266f6464538fa8
1fd2f06d6d0483fd5caa4072339cc1fd97b80a5daec27099519e028f4f1be9f372be
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 HBW_Copy_State <Virtual>  0
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 PID_0 PID  0
 SSC_Copy_State <Virtual>  0
 HBW_Encoders PROGRAM  0 -1
#END

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"Copy State"
#END

STR ST1
COPY 0x1 "4 0x0 MC101 C101 1 0x0 MC102 C102 1 0x0 MC103 C103 1 0x0 MC104 C104 1 0x0 MC111 C111 1 0x0 MC110 C110 1 0x0 C130 MC130 1 0x0 CT10.Acc MHR136 1"

// Rung HBW_Copy_State#2
// Offset 21
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC400 C400 1 0x0 MC401 C401 1 0x0 MC402 C402 1 0x0 MC403 C403 1 0x0 MC404 C404 1 0x0 MC405 C405 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC3 C3 1"

// Rung VGR_Copy_State#2
// Offset 23
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC400 C800 1 0x0 Y39 MI400 1 0x0 MC401 C801 1 0x0 MC402 C802 1 0x0 Y53 MI401 1 0x0 Y15 MI402 1 0x0 MC403 C803 1"

// Rung MPO_Copy_State#2
// Offset 19
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MHR1600 V3200 1 0x0 MC800 C1610 1"

// Rung SLD_Copy_State#2
// Offset 9
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 C1200 1"

// Rung SSC_Copy_State#2
// Offset 7
NOP

// Rung SSC_Copy_State#3
// Offset 8
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Mini Factory Fall 2021 Project For CS 453/454/553/554 "
"Advanced Robotics I and II<br> <br>Date 09/17/21"
#END

NOP

// Rung $Main#2
// Offset 1
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#3
// Offset 4
#BEGIN FMT_COMMENT 
"Run HBW_Encoders"
#END

STR ST1
RUN HBW_Encoders

// Rung $Main#4
// Offset 7
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#5
// Offset 10
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#6
// Offset 13
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#7
// Offset 16
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Encoders
$PRGRM HBW_Encoders

// Rung HBW_Encoders#1
// Offset 0
#BEGIN FMT_COMMENT 
"<center><FONT tsize=4>HBW X (Horizontal) Encoder "
"logic</FONT><br></center>"
#END

NOP

// Rung HBW_Encoders#2
// Offset 1
#BEGIN FMT_COMMENT 
"X Encoder Up Down Counter"
#END

STR C51
STR C50
UDCG CT10 DST511 DST511

// Rung HBW_Encoders#3
// Offset 6
#BEGIN FMT_COMMENT 
"Encoder Right. Move to Conveyor"
#END

STRPD X8
ANDN X9
STRND X8
AND X9
ORSTR
STR X8
ANDPD X9
ORSTR
STRN X8
ANDND X9
ORSTR
OUT C50

// Rung HBW_Encoders#4
// Offset 22
#BEGIN FMT_COMMENT 
"Encoder Left. Move to Storage"
#END

STRPD X9
ANDN X8
STRND X9
AND X8
ORSTR
STR X9
ANDPD X8
ORSTR
STRN X9
ANDND X8
ORSTR
OUT C51

// End of Code Block HBW_Encoders
$PGMEND HBW_Encoders

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
NOP

// Rung HBW_Program#2
// Offset 1
#BEGIN FMT_COMMENT 
"Initialization and Reset stage"
#END

SG HBW_Program.S0

// Rung HBW_Program#3
// Offset 3
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#4
// Offset 11
#BEGIN FMT_COMMENT 
"Jump to Homing Stage"
#END

STR ST1
JMP HBW_Program.S5

// Rung HBW_Program#5
// Offset 13
#BEGIN FMT_COMMENT 
"Ready Stage<br>"
#END

SG HBW_Program.S1

// Rung HBW_Program#6
// Offset 15
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#7
// Offset 23
#BEGIN FMT_COMMENT 
"Set Ready status"
#END

STR ST1
OUT C130

// Rung HBW_Program#8
// Offset 25
#BEGIN FMT_COMMENT 
"Task Send"
#END

STR C101
JMP HBW_Program.S7

// Rung HBW_Program#9
// Offset 27
#BEGIN FMT_COMMENT 
"Task Recieve"
#END

STR C102
JMP HBW_Program.S12

// Rung HBW_Program#10
// Offset 29
#BEGIN FMT_COMMENT 
"Task Reset"
#END

STR C103
JMP HBW_Program.S0

// Rung HBW_Program#11
// Offset 31
#BEGIN FMT_COMMENT 
"Manual Control"
#END

STR C104
JMP HBW_Program.S3

// Rung HBW_Program#12
// Offset 33
SG HBW_Program.S12

// Rung HBW_Program#13
// Offset 35
NOP

// Rung HBW_Program#14
// Offset 36
NOP

// Rung HBW_Program#15
// Offset 37
NOP

// Rung HBW_Program#16
// Offset 38
SG HBW_Program.S7

// Rung HBW_Program#17
// Offset 40
NOP

// Rung HBW_Program#18
// Offset 41
NOP

// Rung HBW_Program#19
// Offset 42
#BEGIN FMT_COMMENT 
"Fault State"
#END

SG HBW_Program.S2

// Rung HBW_Program#20
// Offset 44
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#21
// Offset 52
NOP

// Rung HBW_Program#22
// Offset 53
STR ST2
JMP HBW_Program.S0

// Rung HBW_Program#23
// Offset 55
#BEGIN FMT_COMMENT 
"HBW Manual Control"
#END

SG HBW_Program.S3

// Rung HBW_Program#24
// Offset 57
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#25
// Offset 65
#BEGIN FMT_COMMENT 
"Manual X PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 100 40

// Rung HBW_Program#26
// Offset 80
#BEGIN FMT_COMMENT 
"Manual X Left"
#END

STR C110
OUT Y50

// Rung HBW_Program#27
// Offset 82
#BEGIN FMT_COMMENT 
"Manual X Right"
#END

STR C111
ANDN X0
OUT Y51

// Rung HBW_Program#28
// Offset 85
STR C103
JMP HBW_Program.S0

// Rung HBW_Program#29
// Offset 87
#BEGIN FMT_COMMENT 
"<FONT tsize=4>Homing Stage</FONT>"
#END

SG HBW_Program.S5

// Rung HBW_Program#30
// Offset 89
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#31
// Offset 97
NOP

// Rung HBW_Program#32
// Offset 98
#BEGIN FMT_COMMENT 
"X Home - PWM"
#END

STRN X0
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 200 100
OUT Y51

// Rung HBW_Program#33
// Offset 114
#BEGIN FMT_COMMENT 
"Y Home - PWM"
#END

STRN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 75
OUT Y7

// Rung HBW_Program#34
// Offset 130
#BEGIN FMT_COMMENT 
"Z Home - PWM"
#END

STRN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 200 75
OUT Y5

// Rung HBW_Program#35
// Offset 146
NOP

// Rung HBW_Program#36
// Offset 147
NOP

// Rung HBW_Program#37
// Offset 148
NOP

// Rung HBW_Program#38
// Offset 149
NOP

// Rung HBW_Program#39
// Offset 150
#BEGIN FMT_COMMENT 
"Jump to Homing Reset Stage"
#END

STR X0
AND X3
JMP HBW_Program.S6

// Rung HBW_Program#40
// Offset 153
#BEGIN FMT_COMMENT 
"<FONT tsize=4>Homing Reset Stage</FONT>"
#END

SG HBW_Program.S6

// Rung HBW_Program#41
// Offset 155
#BEGIN FMT_COMMENT 
"Reset counter for X axis encoder"
#END

STR ST1
RSTCT CT10

// Rung HBW_Program#42
// Offset 157
#BEGIN FMT_COMMENT 
"Jump to Ready"
#END

STR ST1
JMP HBW_Program.S1

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
SG VGR_Program.S0

// Rung VGR_Program#2
// Offset 2
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#3
// Offset 10
STR ST1
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 100 100

// Rung VGR_Program#4
// Offset 25
STR ST1
ANDN X27
OUT Y26

// Rung VGR_Program#5
// Offset 28
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#6
// Offset 30
SG VGR_Program.S1

// Rung VGR_Program#7
// Offset 32
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#8
// Offset 40
#BEGIN FMT_COMMENT 
"Rotate CW<br>"
#END

STR C400
JMP VGR_Program.S2

// Rung VGR_Program#9
// Offset 42
#BEGIN FMT_COMMENT 
"Rotate CCW"
#END

STR C401
JMP VGR_Program.S3

// Rung VGR_Program#10
// Offset 44
#BEGIN FMT_COMMENT 
"Move Up"
#END

STR C402
JMP VGR_Program.S4

// Rung VGR_Program#11
// Offset 46
#BEGIN FMT_COMMENT 
"Move Down"
#END

STR C403
JMP VGR_Program.S5

// Rung VGR_Program#12
// Offset 48
#BEGIN FMT_COMMENT 
"Move forward"
#END

STR C404
JMP VGR_Program.S6

// Rung VGR_Program#13
// Offset 50
#BEGIN FMT_COMMENT 
"Move Backward"
#END

STR C405
JMP VGR_Program.S7

// Rung VGR_Program#14
// Offset 52
STR C406
JMP VGR_Program.S8

// Rung VGR_Program#15
// Offset 54
STR C407
JMP VGR_Program.S9

// Rung VGR_Program#16
// Offset 56
SG VGR_Program.S2

// Rung VGR_Program#17
// Offset 58
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#18
// Offset 66
STR ST1
ANDN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y26

// Rung VGR_Program#19
// Offset 83
STRND C400
JMP VGR_Program.S1

// Rung VGR_Program#20
// Offset 86
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#21
// Offset 88
SG VGR_Program.S3

// Rung VGR_Program#22
// Offset 90
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#23
// Offset 98
STR ST1
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y27

// Rung VGR_Program#24
// Offset 114
STRND C401
JMP VGR_Program.S1

// Rung VGR_Program#25
// Offset 117
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#26
// Offset 119
SG VGR_Program.S4

// Rung VGR_Program#27
// Offset 121
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#28
// Offset 129
STR ST1
ANDN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y22

// Rung VGR_Program#29
// Offset 146
STRND C402
JMP VGR_Program.S1

// Rung VGR_Program#30
// Offset 149
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#31
// Offset 151
SG VGR_Program.S5

// Rung VGR_Program#32
// Offset 153
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#33
// Offset 161
STR ST1
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y23

// Rung VGR_Program#34
// Offset 177
STRND C403
JMP VGR_Program.S1

// Rung VGR_Program#35
// Offset 180
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#36
// Offset 182
SG VGR_Program.S6

// Rung VGR_Program#37
// Offset 184
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#38
// Offset 192
STR ST1
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 50
OUT Y25

// Rung VGR_Program#39
// Offset 208
STRND C404
JMP VGR_Program.S1

// Rung VGR_Program#40
// Offset 211
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#41
// Offset 213
SG VGR_Program.S7

// Rung VGR_Program#42
// Offset 215
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#43
// Offset 223
STR ST1
ANDN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 100
OUT Y24

// Rung VGR_Program#44
// Offset 240
STRND C405
JMP VGR_Program.S1

// Rung VGR_Program#45
// Offset 243
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#46
// Offset 245
SG VGR_Program.S8

// Rung VGR_Program#47
// Offset 247
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#48
// Offset 255
STR ST1
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 100 15
OUT Y53

// Rung VGR_Program#49
// Offset 271
STRND C406
JMP VGR_Program.S1

// Rung VGR_Program#50
// Offset 274
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#51
// Offset 276
SG VGR_Program.S9

// Rung VGR_Program#52
// Offset 278
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#53
// Offset 286
STR ST1
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 200 70
OUT Y15

// Rung VGR_Program#54
// Offset 302
STRND C407
JMP VGR_Program.S1

// Rung VGR_Program#55
// Offset 305
STR C3
JMP VGR_Program.S0

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"This first stage currently sends the crane back to the "
"turn table, resets the compressor, and resets out detection "
"bit. Once it is sent back to the turn table it jumps to "
"stage 1"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STRN X16
OUT Y15

// Rung MPO_Program#4
// Offset 12
STR ST1
RST Y17

// Rung MPO_Program#5
// Offset 14
STR ST1
RST Y18

// Rung MPO_Program#6
// Offset 16
STR ST1
RST C1000

// Rung MPO_Program#7
// Offset 18
STRN X12
OUT Y46

// Rung MPO_Program#8
// Offset 20
STR X16
JMP MPO_Program.S2

// Rung MPO_Program#9
// Offset 22
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 24
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 32
#BEGIN FMT_COMMENT 
"Always be Detecting if we have something, if we get "
"something set C1000 on"
#END

STRND X24
SET C1000

// Rung MPO_Program#12
// Offset 35
#BEGIN FMT_COMMENT 
"If we have something (C1000) and we get a go from Doug "
"(C800), start by turning on the compressor"
#END

STR C1000
AND C800
SET Y17

// Rung MPO_Program#13
// Offset 38
#BEGIN FMT_COMMENT 
"If the compressor is on, and we are outside the oven, open "
"the door"
#END

STR Y17
AND X18
SET Y20

// Rung MPO_Program#14
// Offset 41
#BEGIN FMT_COMMENT 
"If the Oven Door is Open, and we are not all the way "
"inside, move the loading tray inside"
#END

STR Y20
ANDN X17
AND C800
OUT Y44

// Rung MPO_Program#15
// Offset 45
STR C801
OUT Y52

// Rung MPO_Program#16
// Offset 47
STR C802
OUT Y44

// Rung MPO_Program#17
// Offset 49
STR C803
JMP MPO_Program.S0

// Rung MPO_Program#18
// Offset 51
NOP

// Rung MPO_Program#19
// Offset 52
SG MPO_Program.S2

// Rung MPO_Program#20
// Offset 54
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#21
// Offset 62
#BEGIN FMT_COMMENT 
"If we have detected something at the oven (c800), are not "
"already at the oven (X19), and the vacuum is not on [Which "
"means we do not have anything] (Y18), move crane towards "
"oven (Y53)"
#END

STRN X19
AND C800
ANDN Y18
OUT Y53

// Rung MPO_Program#22
// Offset 66
#BEGIN FMT_COMMENT 
"When we first reach the oven (X19), turn on the compressor(Y17)"
#END

STRPD X19
SET Y17

// Rung MPO_Program#23
// Offset 69
#BEGIN FMT_COMMENT 
"When we reach the oven (X19) go down, and come back up "
"after 3 seconds"
#END

STRPD X19
OFFDTMR T0 3000 Y19

// Rung MPO_Program#24
// Offset 74
#BEGIN FMT_COMMENT 
"Turn on the vacuum in order to pick up disk, before the "
"timer turns the crane down bit off. #TODO finish comment "
"here"
#END

STRLE T0.Acc 750
AND T0.Timing
SET Y18

// Rung MPO_Program#25
// Offset 80
STRPD T0.Done
AND X19
JMP MPO_Program.S3

// Rung MPO_Program#26
// Offset 84
STR C803
JMP MPO_Program.S0

// Rung MPO_Program#27
// Offset 86
SG MPO_Program.S3

// Rung MPO_Program#28
// Offset 88
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#29
// Offset 96
#BEGIN FMT_COMMENT 
"When the vacuum is on [which means we have something] "
"(Y18), we are done timing (T0.Done), and we are not at the "
"turn table position (X16) then run the crane over to the "
"turn table position(Y15)"
#END

STR Y18
ANDN X16
OUT Y15

// Rung MPO_Program#30
// Offset 99
#BEGIN FMT_COMMENT 
"When we turn off the vacuum(Y18) and are at the turntable "
"positon(X16), jump to the next stage"
#END

STRPD X16
OFFDTMR T1 3000 Y19

// Rung MPO_Program#31
// Offset 104
STRLE T1.Acc 750
AND T1.Timing
RST Y18

// Rung MPO_Program#32
// Offset 110
STR X16
ANDPD T1.Done
JMP MPO_Program.S4

// Rung MPO_Program#33
// Offset 114
#BEGIN FMT_COMMENT 
"This is the reset button"
#END

STR C803
JMP MPO_Program.S0

// Rung MPO_Program#34
// Offset 116
SG MPO_Program.S4

// Rung MPO_Program#35
// Offset 118
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#36
// Offset 126
STRN X15
AND C800
OUT Y45

// Rung MPO_Program#37
// Offset 129
STRPD X15
OFFDTMR T2 3000 Y43

// Rung MPO_Program#38
// Offset 134
STR X15
ANDPD T2.Done
ANDN X13
JMP MPO_Program.S5

// Rung MPO_Program#39
// Offset 139
STR C803
JMP MPO_Program.S0

// Rung MPO_Program#40
// Offset 141
SG MPO_Program.S5

// Rung MPO_Program#41
// Offset 143
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#42
// Offset 151
STR C800
ANDN X13
OUT Y45

// Rung MPO_Program#43
// Offset 154
STRPD X13
SET Y18

// Rung MPO_Program#44
// Offset 157
STRPD X13
OFFDTMR T4 2000 Y21

// Rung MPO_Program#45
// Offset 162
NOP

// Rung MPO_Program#46
// Offset 163
STR C803
JMP MPO_Program.S0

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"State 0: Listen for Doug's instruction to start module."
#END

SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
#BEGIN FMT_COMMENT 
"Am planning to add a button to jump to a state where there "
"is a test suite. To run conveyor, and ejectors<br> <br>"
"For now, goes automatically to state 1."
#END

STR ST1
JMP SLD_Program.S1

// Rung SLD_Program#4
// Offset 12
SG SLD_Program.S1

// Rung SLD_Program#5
// Offset 14
#BEGIN FMT_COMMENT 
"When the light barrier is broken, turns on timer to run "
"conveyor belt with disk until the middle of color sensor."
#END

STR ST1
ANDND X35
OFFDTMR T200 3000 C1600

// Rung SLD_Program#6
// Offset 20
#BEGIN FMT_COMMENT 
"C1600 is set to true when timer is running so the conveyor moves"
#END

STR C1600
OUT Y30

// Rung SLD_Program#7
// Offset 22
#BEGIN FMT_COMMENT 
"When the timer is done, move to stage 2."
#END

STR T200.Done
JMP SLD_Program.S2

// Rung SLD_Program#8
// Offset 24
NOP

// Rung SLD_Program#9
// Offset 25
SG SLD_Program.S2

// Rung SLD_Program#10
// Offset 27
#BEGIN FMT_COMMENT 
"State 2 is where color is determined by checking if the "
"analog value is within a range, and conveyor timer distance "
"is set based on color.<br> <br>"
"Need to integrate a counter here still."
#END

NOP

// Rung SLD_Program#11
// Offset 28
#BEGIN FMT_COMMENT 
"Subscrib is to get value from color sensor and convert it "
"to something the HMI understands.<br> <br>Need help with HMI"
#END

STR ST1
SUBSCRIB "4 WX0 V3200 1 0x4"

// Rung SLD_Program#12
// Offset 33
#BEGIN FMT_COMMENT 
"The disk should now be in the center of the color sensor. "
"This function checks if the color of the disk is in the "
"blue range. If so, sets boolean value C1601 to true."
#END

STR ST1
RANGECHECK V3200 0x1 23000 22000 C1601

// Rung SLD_Program#13
// Offset 38
STR ST1
RANGECHECK V3200 0x1 20500 19500 C1602

// Rung SLD_Program#14
// Offset 43
STR ST1
RANGECHECK V3200 0x1 16000 15000 C1603

// Rung SLD_Program#15
// Offset 48
#BEGIN FMT_COMMENT 
"If C1601 is true, Off Delay timer starts output is set to "
"C1604 which when true runs Y30 for timer length."
#END

STR C1601
OFFDTMR T201 3000 C1604

// Rung SLD_Program#16
// Offset 52
#BEGIN FMT_COMMENT 
"When C1604 is true, turn on conveyor."
#END

STR C1604
OUT Y30

// Rung SLD_Program#17
// Offset 54
STR C1602
OFFDTMR T202 2000 C1605

// Rung SLD_Program#18
// Offset 58
STR C1605
OUT Y30

// Rung SLD_Program#19
// Offset 60
STR C1603
OFFDTMR T203 1000 C1606

// Rung SLD_Program#20
// Offset 64
STR C1606
OUT Y30

// Rung SLD_Program#21
// Offset 66
STR T201.Done
JMP SLD_Program.S3

// Rung SLD_Program#22
// Offset 68
NOP

// Rung SLD_Program#23
// Offset 69
SG SLD_Program.S3

// Rung SLD_Program#24
// Offset 71
NOP

// Rung SLD_Program#25
// Offset 72
STRND X36
OFFDTMR T204 5000 C1611

// Rung SLD_Program#26
// Offset 77
STR C1611
OUT Y34

// Rung SLD_Program#27
// Offset 79
STR T204.Done
JMP SLD_Program.S1

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STRN X40
OUT Y36

// Rung SSC_Program#4
// Offset 12
STRN X41
OUT Y38

// Rung SSC_Program#5
// Offset 14
STR X40
AND X41
JMP SSC_Program.S1

// Rung SSC_Program#6
// Offset 17
SG SSC_Program.S1

// Rung SSC_Program#7
// Offset 19
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#8
// Offset 27
STR C1200
OUT Y36

// End of Code Block SSC_Program
$PGMEND SSC_Program

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierOv en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInle t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierWh ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBlu e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOut sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBelt _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
#END

