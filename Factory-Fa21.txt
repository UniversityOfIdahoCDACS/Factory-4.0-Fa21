// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\Nick\Documents\GitHub\Factory-4.0-Fa21\Factory-Fa21.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
9d98c5816f64e172dbab998601ae8e7ca0580c7a91315ef9b820836243debc7e2217d1e28fa835dc
c6331e914b8309177eeeff320a39726d926a9bf2d5f528430b3b932dce68bed8d1549485b84f8f5b
2a9827e7a6295cf91f4d4aa60fdefb2903c5bddf31e8631f7905c489aa6e6105bc5e4792c71a236c
877135628a13267cd81e88464fe8c5449257ca6273cb2a11a4ffcd02c4bfc41ed5f481e4438978bd
ce6ea984587d86bf4048ecc4955f7097538f879519fec434113826b965c42bcbbfbc0581e72b38de
518e257fb0452c73c976baf62f78e95f1f8581091e6cd3b8832bc0618834693eecaebc881102c74a
8950353a083f6bbea3e1bb9e29c1bb606088347f8e79b70430e56463e6bd0a8255fc9bb30b47d370
20d912819f946562d679380b95711237dbbde6ea85becf738c4caf0ff4a434aede7dd47f5bb5de87
4c04deec76c16327d3982c554a5c3f4bb12a6fcf02449aac7a06816b4a7c0f603ef3395097786b19
27d733260834a2c970f1ddf8711df9c9aadfa8bafff25c1acd0b0cffd18785ec7a69de15bb9238e9
8b2f2a6619e2a31ff0006cdfd6814fe7e12076a2e66ada13edf63f663fbd16b03d10ee1d239f8e0e
c407bca88f97fedb74fbec7dd0fefd78c46921f0f694a8843ac14d0b45478298e1bda1f0c72a4e23
71b90f1fcbf6e64f256536ffb9d7a9919c0470ab8943fa747cca38c448f72ba3ca75cfc161ef19b7
ca06178bc32c2a16cec9f2e4b865997354b912b321cfbc428e37ef2544f11c8efbea8b16b81e3a53
b7b486ebb5e8593fb89e8b0b83b808321b4f6a4347eb06ac1af7352a1946bb3ff99b63ca139b5c49
d7c91ac9c81eb7599a27107761567e2f94a2b51adb334b4df39507fb77c407a8fa3386c2e54a4b2e
32ce7eb087c5c28b17b3d92c385948e4b465185cf673f4db44c6e6471248b7359417dc866c5b020a
0ac32e312b7e3e1ab35a3f4f00bfef3e050138aee5a7b3456db319f047d67d1552c2cd8fa2843644
19e74598c9800d3cb3257fab5a66bc9857988595061a4835a8e0aa125d4a70f087bf424800d431c3
2f7750a9471c360690551d67c17019b89c6526b5c5579d332f7be9dd3cf6a7aea41de2ce38ce6c35
5137f732c4adef172b2ea0a71a6e4a7a01939d90b56b988120b46e4a674fc5198b09fd5dae9858a4
f4cf796b1b6ab8dd35b891e71d188667eed66f71cbd7f3f72a8b4249d4da40c76a622cd98b4f27be
06f53594364cab7ce7a14c296e401b3e40942ce2d4f7465f42fb4ce0b9bac1e084e44bb36e6f0f6b
923d2eec0dd78d0a90555b7aa079bfddf2bae162f9e66a87d658f5ffc0ca4307b9e4ceff7cc141ab
8c02b00bce084fa2232335c97bff2ed7931377a55c4a5814c7dce19f89d4e07a69e5655fe426e1af
8e29126a37344c20adedf5ae956545e53d6c7237fc146ec75fffa84090d5631fb4cca2fa8a641705
efab685248b6c1154a490ecf455909edec3d5f4e91faab06f89266c2e02355abde0562d3c7e45855
f463eaddfffe76419fce0951cabe18dbe195b9f47a8bacfcee857db66bd5594c42420fde1e4d593c
e1d7e4097a5c774b52d630ef870bc1c91afb8a556410ae4feab558c5750e85dbbefabffb6ba46e0d
f397e547a2cd7f3989df07dad833c5dbad7d5f2ef7adf96b8627748c1c4f6223f2c6f1627e866b27
e7b70e469675d3b4ffb80ec52e62f7d726ba4d229fa3a0b92df53a257b1579e744f3f1099fafe9d2
96dbc30a274f6724e8d2599ba82c59974790049805fd171eba2924f8d754f7d27218e5693a1e5578
8ae3ca540893a6fec498612e243c6a1f3715fd33fc76b9742b68df32cee1a36ef8bd05048c4e7dbf
39b51738bb98b238977d0d397c8f65921ff8900c1ebd2e4c9caeeef7a13e5497e2a40396a380bb6a
dfd8b953adf447e9729385a023b4ce99d4965331cf4c265946d4dbb5fe425f726aaa64842d05c1b6
785805421e6cf89af52e984672a7836e5aeb7203c3cb26c95f7725d417febb9b16d18e03eaf69137
6f310a07e0bd989137fa713c188fe8c2bdd909522c3faa49805ad50c674eccb6ca30f58df7aa9790
d672ba664e6f796c179a3da9e94cff71e355daf889b031726c2c7b39f1bf5dc4bd49dcaf88080398
16f964850c9512adb66f9d47cd2f181a25c3d43d78854ecadea023a520bfc206bc597d9062ed8c88
36af936b96134a7b75e51722a582c1158105fcd489b202ed17d2ae723bb0981e09accd25e70ba613
957566bac325bd8b56b603f023d3435381f68360fa1572f457ebcb4b3cf492cff93a7a488b864576
0a44791fb0780fd1d815a5c21aaef7651252e24054422f64311f6e235fcc8f37a897fef5fff3fba7
38baf84e2a3cc6bb6fc9a802c47e707433603e2e631fa72e4e70b22d1f7ebd377c58ea3cdc624884
879e652190341c287f6bc83c54e015603cf9a58e30ec8e581f63b0be47dbd078e3fef605bded7233
ec2a4b22a0d8a331d2050fd5e3c9b3af3b70ef26eb36fb7c33bfa34cf6f808b88b9db8f37a14eafe
924f399d62a63f8db0e27b30991066f3e0569993a7bf0921bc9498d12625ca1ab4dbd514195b3c28
1bef2faa8276fe88195aecd731c529963824a2a02535432d3b0e2d9bddbb707d3182c8b15febefa4
302ace318bba5f78da25acc90e48fdd06502d43a54c683cd6b0d99db47771ae81ae51de4178204be
1ee64cc2065594addcd3141762dda170403e8040fb9a263e76379ff5089501784f9c61040da77109
3159f68e2c77546ae6413dcae0142bd9c82de7d70f8a452aae8b0109a7b9995f83df89042b029de2
7b72e2c043663ced79b9b15d9ec3c348b6b0b4e58fd6d548e8871b4035e43189657c18000566bcfe
38235d7ade4c8dd9ecd0934d709b804d94abc4775313336460f95f763203e2f43882301f37395531
d1b934bb4f44f61fdd0ac436a213c14c081389aa82b609216753d65d2f36e683845c0eb87d59a659
74426f63e15fae9b67df9e47ab40d0b3bf4ac3007694212c9916d38cfa88ae2f3585fcdef6afef41
cc4a35faf03ca58e7958d1439541ab5e914a855829dc45574d384f20868a5461fecce8adc65b4c96
fc87e978fecdfd78c52e2e1bbea66ee10914265b10bcb984fe8efbd563e6c1a8dbd00b7486d41dca
89e3167dd525d8d8c327f338abb8e01b2f0cafdccda46495c3998a087f07310535c1f745ce253425
652e98a0603244690ddc5226ae8de56d58e23c3d1528ac1a29ca713dbe02593f884b6150e663442d
5e11476c5028cfeb49a3fa6cadb963e80aa4a3fe5b4b3b731e5580aef7067ae92a938002750d43fb
6645e04935a08c6a3ae7780b70f58b9e2b070217fba82a608592e270f755f682e8158cfd87df62f5
864b0827048ea1b60f5068184d25494d73fc2a0a7e83d534fb56cadf017113aafc1959d072e960fa
1ed5bdc628635b15dc7cd99e27a0a9acecc187621a7ae566c9ff491e789a6973db7001bf124f0e8c
94206ee9e8b1d84b744ee9e2bc6d884f3ddd9f463b082d81728079a92d7eab3c94d3e139963e71e1
41ca341a67b2edafa959aa0b5c8808941fec7e4b4f1c3777d5dae6713175c77f605828bf949f6cec
74d9ce1ab0fd383f4276652177e8c1fe2e8e761f20ee2b3bb5559ca7f910ed69d0965c38d802bad5
9d4ded77729534a825e71bc9f3ab16d6c6fa6aca413f11e0ed9748f1cad3ee9e09c2ce2734051bb5
49336688489409510cac0d5e90e97e151d439b47aafd18010f7df14098478e496342b5014c19918c
714f27aea17fdd2a1cd75cdfa53813e68a7b0635109c6fb1d03a25ad7f453ba84347fa3a40761875
9df2f4208e88233fceb8f622a23e97b43f7e9a4665d3187f9d6e14bdbbc6802de1cef9ec1710213f
11ed1bd5a89bbe3d1e54e0ade46670d21ab7e9bf141224e720d8a52b072a344ed38879788f65507e
f58a0746a27e6ddb341e615fe8c03d1534c387c95175c18f081148598725d258d3c3d8989e6e9e1f
e90336189a655eb6e1849026cd67f33ece4bec16aba2a7062aa0b80a05ae52a0cc8c58d8c45219cd
79347d3f291b7cef0400b17147a76e557b9666f351257b33a1049e9ec787004bf6b7538fdc6ad16c
b81b2a7c0e9b251367d438df466445cbf9bbc87c21322ecb6b0654974a905a748b7def1c06d4326a
4141dcf11d10c69bb40d323b66c29398b635178f09fb9a0cb4b1eea84be941fb8b3868c51a71a1f3
0ebdf41ddf8ba7e38974fb0a373e1933d994d6f3ee17a6487531034d6b9d088fead3c350c3a16d79
d4efbf1c89fa6fb4368adeaea0f372a68c78a48731103f003ed9703bed91a624ae7a0a77270c155a
49936b2f67b5f566b99891ae9a6a967777541e7200cf168e310b6c66984fd66b7cb8124b0f479535
a8ed3ea568ddd2bb54b355448482f202438787da9a155e3045afb139e953157e61af34848350d262
b97bc00a939c3529dc2aaf61e69bf7645bcd782f4c4b3edf176c8e4066c65df6e557b0340bdffbae
fc1df9d23f1e979f5f179e0e2d7203e9e1335f2288d05c09b4ff154fc945d0ddcf492282f23ab816
286461c958365b971e427e0abef1a0955c05e87d15454d94409493b2061ac51a4aa7aace1dfa5928
37a1ad7bf98f1f73269e8eb7d26f933cd604bea9e28b45e8ffbf702414e12feca4cca02f6eec9343
a91bb1c7a6a81d913c320adb9f1e66bfa44a68f05366391a76a36a74f77671c9e29f0ff19c31c10b
d8edb41122d73229d432102f6e81f9793c8f5e47391302b417935cfd2ee2ac61e614485dacbf80d4
2bea91bbaa1c53811ee3d48b3473705197a8306371d55550bf104f3be60cd0d85167854e6d31ac5d
8bec6724482b8e64643037704db5b5c56dca2892d1ce2b96c087bcbc68bba6ed1135648be16a15a0
2f9ef0e15df93cf8fa4e8f78eaf5390756b9d3f434b6f727b24a2f977a745e1570c6524d01be8d18
dbe267d8ed8e8325ea15a9a869db1fc4a948b1668e9960ff0b6c48e352b6387686d4c2d635f89d86
f3c86dd75af12b31198fb3509cc609da1f8b2cc67ee1b1e5028caeaa37378ed583e11593cf0a4dda
dbf28eda73dbf62ba9caad34b4c75144b95fd6282c900d0dca1c6aa902e4a83a89cce942776d5fff
a3ccd0a1df299745a00ccce9c3ff0e2e831334c2229a957465d245c7312d67084d7f2019e71d8290
7b292c66fd8169d21dc49872aa15c58692422fbbf8f01959d1cdb7240b81a3000cc20af5e54704ff
0ab812e1f6d0b477c38b7635d7ec3c32b76f00e7eb514fe8c722ae35a6957bba8ac1b14cfde6f59a
7ce9f61e3d397c1e658804c39471f8ddffa891c8b00834d708516c2b529a72a33f77697554f88ac6
b09731f8ee078fc2a53ba54e4f2970dae0fc1fb16ce097bef3f6ce67e2bb13b7f25a2aef1bca8f7e
f0c813d503af9b68871056ce75b7250d2cc4b47b8c5e6172a5d27941103b4e1e294fe668d8d2814b
c35feb4c18cde327483f3c6a59f4b9046f30ba5ed233ebb3d8b3716c35237778f5065537cc7ffe38
3d2f8529bc66dbbfbc363553b2e05002a3214dff71f82a7672833f606f47a7134855a99d38e1949d
9755c852fade9470869539fc5f8b0c2307d8289cc5cb2658a45b2dcbe3c12245363f2bcfc5ff4ab0
79976aea2924478571b1643bd772c4ff7df3502cb0f4638134c9c8c061faf3ccdfc72fe4d7531249
ca360591c9e4fa7ea6d4722a3e9a248b99f4624d8c2cba957b74996fc9820d322599895d705dd947
b8f3c5c59e1b402d2a3e0358375df3fd4a698b7abcdf3ca385d1e8448517b96b0432727cd1ec0eee
e1b55e4f5c58a0ee74803b73fa0dbf7331a3f2ce428b38ef63c82d3ffc6c64faf8c7bd44a0025ebb
34bef01cb5b2e670ebd7844893c174853eaf5bbfdf11e032b42bc59b00a5d48288b3ae96c34d091a
fc4a2d905961d524140d9eaec7dc9c3d0b3213ce2e5bb2fd2587adf6ee4608d136eb777c37515e57
97873ec1b730dd1007befc34443070522ed3e552256f049d1e3fec05a96c524322815fd82e1c1c49
b412c2de59ea1fc619275a032951e48a7e5c97db73a4652ece77e611bbd459705b39f8e86d71cb66
c5d0d0c07b8cb1f2e797293a2efafa4e2d3576ca35e5e70fd637f68ff89668f8e9e5df844a735378
9686ef734c1faf4447c0fb15ddbd66a004744a9c92039d3b630cd5ce29b27c36ec7826e49f6c9dee
7c8bcff68bf7dfeb89f4a02feb56f1bc717936849bf4cd30fb801fc7f50d62a87d3e7472b42b7a79
2cec581b2ea929868ab14e99dcc913b560a7200502785617d66d5345f3e83ae745e55ff785699819
a77ac8bc9df3852826bcd779266ccc60a97635ab3e7a2977ab1237c97046f273f283db9fd34f3ec1
048d98422d358c78083b844faf86d12020989fc839c5e77a98e2e16d7a272fb8238d8c95b56f4e43
224d64a97d74211b3399b4c75e871c38f572681c42a299f5c8cc845894b732a3e25daedbc80cb414
c69d986908a428454c6d144147133caed6851117c0c7a1755ca10e748fa3362fa68f57cd06616422
6d4beb4ba952ae9bd50d285b292197618aafd47a0c165858b71d7ffce806f73dfaefaa6e54256a12
ec31cd34f6765cec59f1e39c2b3b13f51d0ea5f17193f8e0cd9b8fd0206156e14082a8b80a511518
2b0449fc126cb0d0af4ed613babc2ce7b4df88ab6079879781b0c40be68f291519f007ae47e04e2d
1bafda488fd86ba1acb448828f569b089f9cb063f69d7bc5f3d9051320bcc98c2949c7c569e89354
461beca5076ba0cd186ed1720206d68102a251e776ccbd79b043b1a46295760da3f9e5582f39696f
fd3c8f3cd725a1e961eafcc6d3dd9cc034335ca3a043babc988bf5e1d45ce06f7721c791308c7b19
bb01a9dda540aae093a4fb63d650f6c3e187167286ff90b9148f8550490afc5937f721ccf13bab15
6ec5111dd59746aa05d08953c7c2948b8e2cfcd680bb0f30a9ace199359e19b0b173166c393b1497
fed764ffec967a72687833b8f61ad4809bbd1730f9bd33b10f05e7f39b28479970b3b39386ad49dc
2e7a930ed16bcc4c6952423ecd4accf09798f207b1fc8ab4a912365bf85a7149875ee1ebe56b56ba
6828fccd9e468e484620343abd328f2522850b8f6f132b35d779ff9a992de655f53bd4c7b5318924
bd04ab24aab9c702e1a482d639d46abf85264fc91b88e06849ad476c6c773f4ca65643cb380cc60d
f092cce8dbf5d055b8e764cff15dfb7cb06f591bea991bc04869f435bf0ca506a8ca9e7cb3076415
d808faa96ed702cc2ec44a7b688c8efc77898088172287d6ca5a782c3163bf9696cf43bbb683ed75
7942f074b203b2fd821e5c7bf0a577f9016e5aa0b5eb5cde34a3f448c3ac3ad116e51b458348984e
767bd62290d80ca2d4b6edd67c68d6850324a33622d650ec3e6344a1031bb1fdc70d39dba2f044ec
3b819f8f53add5d1a64e9e5ec9e2f44e231b0799afef8353225d6e2399b319751d21898983a5db7d
71a8ff9abc970bc9c901274a9a373315ce606616b6522ffe04c14c947bd832e2c8fa3b6c901f25c8
b865798235bfcebbd39a473667b1dda0ee5bdba62f14dd4095edadf74154c763d523a69affc4bc15
751dcbed6739f991234d5ab52fcbee9ea4c8bf46ce83090d85943c074eb1440015a398297ac2e031
9f12280f3d26a5c6dd0e23098cf7b4e6bbd84250933cde9b04f5995c973f860b5093952d71036baf
07be60dea5292e59de6c47a2dd09891b9370d72beb1f77d094cce30c9d11f44741b923739aad8f5c
698eeb9d794e9340a303b5fefa1a1106b4c6cd99eaeb62380ce6a83771ae4c95ef7aa33b0890f3e4
c37e8a9bc7e8c1762ba45df1894e85fbfd14d1052e1ed75d93920a3cd30978afeff11d76b7a071d9
b2ebdb968312a9e1566158d94060e51da309919ee6dbaa546b3962d12add01e5d7aaf2f871fd9fc7
5b03ab87c3ea41522d426db543869c70a2126fee1262c7222c49aa75fc2cd6dfbc76bbd887a2584a
a329ad7a1f798f60f614f94038c3e81f00f51718b538c5387683deddd4de32f4a22b6b354ce01304
f07f9ee368420a652ceedfb8156bde44bf2f113f09f5024c32ca3a3bc0cbcf734fb6f8a2676e062c
267576fac473ce6a1dcdc06ab965371b3144effc466d5f87014c1db5bbed695593e9f02ed6d2f1fb
061a095afc8dc3bde2b9af828f99e3ec849893dcc93db0927219f608c095f4f1b521ccb6e4907b9f
fe8647ca47b2e21efcb10d743892186d97a859f7b1d331a1e5e0089f59ffe17a44bdb6b5e8ddfef9
b149f289e50df65236a487cf3ac26b8c78ddbc81f5b8b30829bbff33db01f9cb2e86e2f701a01553
11832c365de95fac9b7138f684a7e81e3d714b27b0526802598d031b9f16c225ddd6978d9a547c7f
31f640a914633eea510497680410eca135a242b6e836dd148b1be1dc9eacf50ce9b588b52e40fb9d
1de9eba969be37af5bc04f65af606aa12f80048315fd8c7fea9c19337cd091781b0bdfb19df8d157
f565c2da583534a1674ce67aeb509b2a2f5d0716fee3a4b82c9bbf671cbb8f0b6ec0a913379ba9c8
960bc425e4dfdf3d5d1fa1a4478bbbac0df0007d05ac91329991a1d9b076aedc0cc02995986cdf2e
86825c4d4ed91a9d1cd3da61866a8a8bce8d8e01c2fe46715bb180598798b691a03e328c4f8de26f
9232beea3ca3acc5155cfbbeb772e64338631b65d090017c7ec111104221b5fd37cf99285ba67f20
d4de1ad465e6b4c2b18761edc8cf4c64663be850147d73cde273f6dcf4f452c27f4176dedc01a5fb
5aadaa254e9cfb1bdefd8795b8a08d9bc16391a4acd62914ac2af2c6ec9b221730961c4a51f49b39
dab37993f2a1d6f8e0a43e76311d00e4f17c853b2f8fd134f5c8ede0c779546187a040869bb9688b
64ee8891c744a5041fba9e3a1024b97731b716f2b3e791b7ea5a88843b8f4c833cbfc3469f8d056b
b00cf5e90206259aefe9d73d9cf8212ddbc66eee621e4a4bdf03e684b85b08660589bf215ea953a8
000efd2a147269b71867bf387bf8111c82886076a4914c5b377d29823d504560ce6d19d5dade3cfb
6ed35b5fea9e471289fb283a2b1905b09a22cc268b0f75e3b7cd2e58352296bd0ef4b58f4ed39cba
3e15bf88635a941ea933adb13d2d23d5b6fc7e2f7b7eec20acdcc153fcfa16929229dfb58c08911d
3b9d4636cf8ccf7c5edc9531629cf833072927b9cee8327a24ff99f3aed791538a6417c3a352b3a3
c171829ffb8f6cd37d6f19c96c8278e0fc4388afd7b4b8dfa9c2190cab7fb97309fc9fadb23413cc
4f87b128d28db7d8796ae0494a2a45f746994c921f1e181a964536766d7dbb90e015bac3fbb03ab1
cfe923bb90ae56812e08f0d202c0e56974b4128cecf8bbcffcff9ef063885ff99649b7f0f8814800
9c7c377515e02b2be8cefe1f9515ec52acab189eb5e5fa3c97babdbf7d6a7e8e964a6a471fe82870
fd2317b54f0aba50d5dbdc0655bca318ed9161edd81d7c993d5ffd574102e5ad384dcecb140f96a2
fa0635347c3cb5a2e001ab654f5c26f636a0f920d5736517c393e88de1428334274033b648273f72
9565359ab49c0df69c05448b18c79249e259871b47023bc3209dbbd1a5d2bbbeb5b1907d2b07ac59
47b2440c7b8c936bb9252db369ff5a618d60a8319c0b6d4cee1c24b5264dcfb62110937fb5ee2f4f
0c128ea3dde32694b9e1d6a4a69e3c23fa183808ae3e4073f39c555b293dac535c3a65b4ea0fe588
4919ef266456166afff3dc7c01feef6659f578d5613d89ff5aa216420c24eef898ecad4a4f976644
811b411bfaab3ec5fe1f3595918bb332c4291a20a9acbbe5322306b7e82ae70d986c5717b9ffc1c1
78843c7d390f6bc7a3c2152b459cd2c81c9ee987ec1d526eedc4d70b99d088e4f34c70d58f7a57a0
87c035a44d16a46690fc58ff4ab31115c65f26e1d236943330d617e43301e3e9ea9eb9ba81c149c2
baaa0a100c54954ad0b4b24f0abe4fe92bc9259092f23d468b574f97e6be6a3a6d43039962271fbd
f85fa3a0982a3024fe5e1cfb5e99bd51d947f00f88c0fe4f13763856ac310286ac1a5f5100e6805d
012e08d1eb54289a8150598483366e8080bd028ee340d08178ff5441bceba16bda16113860969968
0f59d9c6e140b2320b68d5531daa7b692e77f256fa06bc30c4473711166454d5595d32435b367aef
04b1b44c614997e9333f2b45860ba5c3f309c440b1f840cd30ccb81026a83ed369111145b39c2167
fe7978a5dced1c62e8eaad5dce177519eada6015f3f0dfae2b96ea4d502f7d17c9a7968a679fbb42
a912a3e4234c45938b871e452899dc3b6aa641fa62f17c15f4d514ff84fcbeaff39fac5b71f2c675
528a7c1ae29ae7d14c0bd51fc48330ff8f4182cdbab95182049d96e15ffbcc1019d7fecc57513e53
68f4ff15d7647860ac9ef3b9f03b0ecb8eaced4c3a540c4d8aa0c4c6f792ed935460ff496c5873fe
79a6decd1025495cbd089f62d66a72614637b290a259f4119108fc6329f879fed5f55d362d22991b
53f6d83f1c6a478f63a9335befd97fe732c9ff5154b60d60fa657eccf34f088740985675f481e650
fcdb9184b60b9a70d8213a34cc4ba6b2171cda8ec493dd69cfe3d3739819d8fedb269009deed81dc
f69a1201d4953b3833862fe4b04667ef4fa036eb5df05009554f99edc05d9497972e4739932e7a63
d6de93e1b65d4b9b14676a9f12feddfeb055e09af547445f7bcbd84ebf1750e4b7531c672c14879b
412fce3bf861df1299818729b4c9b4098e2b0a0001b535d721d35227451d79885c257137391e99a4
95e8e8c458d0670437fa184be9986c4029b76fcdbddb547f50eea0d2a1a5e1d5a63cedf20ab2b1e5
4f486ee93c6d6c5b7b0047c48811a44ffd06e79ddf5de7bc9adff4518172c1a915b71f49a8890e3b
a8f66ed03fd3bc300722befab7a8072b2dd9f019762bee3b16398b802c2c02c7163402d5be75b6a1
2203de9e10288c0e9c2e0f6b812e7d89751943cd93f8ad6ab1a97a728d1b7f266a51c4eb4691f4d5
e96728094f9390b90301d87e88505e8b51661e339d77f4a21500882a7a4355dcb3e5f8ad06379e3d
8ac69c04413c2f6ec83d742f06d54672f630b69cfc52c0208853926c502d4471722ebd66d886286e
6f98d540a3987dd5d4a8404aa65d7d3448f17dea447efb08c083c228c18deee8a89dc45133634907
660b8259b66427c50215ff81ff01dfdc3e6d2216ec6be630a4d3ccae6737eef371a1cfb87c7d7c07
f6c2b8012df5e442c6c0d9fa2871203d77fe0a3de4d3e3d075e26dabc62e53ae992d46ee91f35834
7264e64ebedfbb0d71e7d92730845c0c7dcf11b84f4ff9a4d9f854cb65cb5b0881a912d7e6b7f663
726f31fa040fe89da91bf9e6b5ed040c17b5f497e65280296e8325805d7a8eb26c0901daba2cb014
63816fbbeab85f86782bd8f1ef3d70c61cfa4ddd923bd4c3e0b761777ca1ddbcf1681b611446ca9e
4dc3b89d004192e1a2a879c134ba4faa18daeeb70bcd7e54b289fe5db658a6aaf11c07b8af49306e
b1b475df66604d13b4cc8dfa50eb9d16bba6c413351eb665ce0d38a2062c421af523893918aff683
97be37519d87b3159240d5f63e750e7de423686980f9a48dfad0835832c5e56267545deac7137398
2d09d2511b44cf605ec5516d6540e61eb9a5c20eca70c7d48b69fc8b9185993fb2643ae8dd843c30
58ec7e793f32c1444f96a8852192f93ac95e9a6473c66c27e8a406bc72be41ec9fa29320d9f7c115
2f9d56029c709af875fd2fac48f00d94788c396da1cfb1854cab7a8a40f4467c639d54f8bbd8ce34
a8ccf33023f3aa990b999d72cef8e2cc8ca3081d7f6f6a6e31de43047a01736699d89e4aa0e81f31
2584f7cb7f31e165e04b28d750f32bced67a1ff793863d2a151ccd848f93ac7056e10c6ef3a3ca4d
7352a4704203aef20e6748fa6d9ff341a0bf6237f9d99062786aa6
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 CP_State_Program PROGRAM  0 -1
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC200 C400 1 0x0 MC210 C410 1 0x0 MC220 C420 1 0x0 MC230 C430 1 0x0 MC240 C440 1 0x0 MC300 C500 1 0x0 MC301 C501 1 0x0 MC302 C502 1 0x0 MC303 C503 1 0x0 MC304 C504 1 0x0 MC305 C505 1 0x0 MC306 C506 1 0x0 MC307 C507 1 0x0 MC350 C550 1 0x0 X32 MHR400 1 0x0 1345 V810 1 0x0 180 V811 1 0x0 175 V812 1 0x0 860 V813 1 0x0 200 V814 1 0x0 400 V820 1 0x0 420 V821 1 0x0 440 V822 1"

// Rung VGR_Copy_State#2
// Offset 51
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC400 C800 1 0x0 MC401 C801 1 0x0 MC402 C802 1 0x0 MC403 C803 1 0x0 MC404 C804 1 0x0 MC405 C805 1 0x0 MC406 C806 1 0x0 MC407 C807 1 0x0 Y16 MI400 1 0x0 Y43 MI401 1"

// Rung MPO_Copy_State#2
// Offset 25
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MHR1600 V3200 1 0x0 MC800 C1610 1 0x0 MC801 C1650 1 0x0 MC802 C1651 1 0x0 MC803 C1652 1 0x0 MC804 C1653 1 0x0 MC805 C1654 1 0x0 MC806 C1655 1 0x0 V3201 MHR1601 1"

// Rung SLD_Copy_State#2
// Offset 23
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 C1200 1"

// Rung SSC_Copy_State#2
// Offset 7
NOP

// Rung SSC_Copy_State#3
// Offset 8
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Mini Factory Fall 2021 Project For CS 453/454/553/554 "
"Advanced Robotics I and II<br> <br>Date 09/17/21"
#END

NOP

// Rung $Main#2
// Offset 1
#BEGIN FMT_COMMENT 
"Run CP_State Program"
#END

STR ST1
RUN CP_State_Program

// Rung $Main#3
// Offset 4
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#4
// Offset 7
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#5
// Offset 10
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#6
// Offset 13
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#7
// Offset 16
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block CP_State_Program
$PRGRM CP_State_Program

// Rung CP_State_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"<center><FONT tsize=4>This program runs copy state "
"functions at the top of every scan</FONT><br>"
"</center><center><FONT tsize=4>Use this for copy state "
"rungs that need to be executed every "
"scan</FONT><br></center>"
#END

NOP

// Rung CP_State_Program#2
// Offset 1
#BEGIN FMT_COMMENT 
"HBW General Copy State"
#END

STR ST1
COPY 0x1 "4 0x0 MC101 C101 1 0x0 MC102 C102 1 0x0 MC103 C103 1 0x0 MC104 C104 1 0x0 MHR105 V105 1 0x0 MHR106 V106 1 0x0 MC110 C110 1 0x0 MC111 C111 1 0x0 MC112 C112 1 0x0 MC113 C113 1 0x0 MC114 C114 1 0x0 MC115 C115 1 0x0 MC116 C116 1 0x0 MC117 C117 1 0x0 MHR118 V118 1 0x0 MHR119 V119 1 0x0 MHR120 V120 1 0x0 C130 MC130 1 0x0 V131 MHR131 1 0x0 HBW_Program.S0_15 MHR132 1 0x0 $HBW_Encoder_X.Acc MHR137 1 0x0 $HBW_Encoder_Z.Acc MHR139 1"

// Rung CP_State_Program#3
// Offset 50
STR ST1
MOVE $HBW_Encoder_X.Acc V10

// End of Code Block CP_State_Program
$PGMEND CP_State_Program

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
NOP

// Rung HBW_Program#2
// Offset 1
#BEGIN FMT_COMMENT 
"Initialization and Reset stage"
#END

SG HBW_Program.S0

// Rung HBW_Program#3
// Offset 3
#BEGIN FMT_COMMENT 
"Jump to Homing Stage"
#END

STR ST1
JMP HBW_Program.S5

// Rung HBW_Program#4
// Offset 5
#BEGIN FMT_COMMENT 
"Ready Stage<br>"
#END

SG HBW_Program.S1

// Rung HBW_Program#5
// Offset 7
#BEGIN FMT_COMMENT 
"Set Ready status"
#END

STR ST1
OUT C130

// Rung HBW_Program#6
// Offset 9
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 0 V131

// Rung HBW_Program#7
// Offset 12
#BEGIN FMT_COMMENT 
"Task Send"
#END

STR C101
JMP HBW_Program.S7

// Rung HBW_Program#8
// Offset 14
#BEGIN FMT_COMMENT 
"Task Recieve"
#END

STR C102
JMP HBW_Program.S12

// Rung HBW_Program#9
// Offset 16
#BEGIN FMT_COMMENT 
"Task Reset"
#END

STR C103
JMP HBW_Program.S0

// Rung HBW_Program#10
// Offset 18
#BEGIN FMT_COMMENT 
"Manual Control"
#END

STR C104
JMP HBW_Program.S3

// Rung HBW_Program#11
// Offset 20
SG HBW_Program.S12

// Rung HBW_Program#12
// Offset 22
NOP

// Rung HBW_Program#13
// Offset 23
NOP

// Rung HBW_Program#14
// Offset 24
NOP

// Rung HBW_Program#15
// Offset 25
#BEGIN FMT_COMMENT 
"Task Send"
#END

SG HBW_Program.S7

// Rung HBW_Program#16
// Offset 27
#BEGIN FMT_COMMENT 
"X Home - PWM"
#END

STRLE V10 700
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 200 V118
OUT Y50

// Rung HBW_Program#17
// Offset 46
STRGT V10 700
JMP HBW_Program.S1

// Rung HBW_Program#18
// Offset 51
#BEGIN FMT_COMMENT 
"Fault State"
#END

SG HBW_Program.S2

// Rung HBW_Program#19
// Offset 53
NOP

// Rung HBW_Program#20
// Offset 54
STR ST2
JMP HBW_Program.S0

// Rung HBW_Program#21
// Offset 56
#BEGIN FMT_COMMENT 
"HBW Manual Control"
#END

SG HBW_Program.S3

// Rung HBW_Program#22
// Offset 58
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 50 V131

// Rung HBW_Program#23
// Offset 61
#BEGIN FMT_COMMENT 
"Manual X PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 100 V118

// Rung HBW_Program#24
// Offset 76
#BEGIN FMT_COMMENT 
"Manual X Left"
#END

STR C110
OUT Y50

// Rung HBW_Program#25
// Offset 78
#BEGIN FMT_COMMENT 
"Manual X Right"
#END

STR C111
ANDN X0
OUT Y51

// Rung HBW_Program#26
// Offset 81
#BEGIN FMT_COMMENT 
"Manual Y PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 100 V118

// Rung HBW_Program#27
// Offset 96
#BEGIN FMT_COMMENT 
"Manual Y In"
#END

STR C112
ANDN X11
OUT Y7

// Rung HBW_Program#28
// Offset 99
#BEGIN FMT_COMMENT 
"Manual Y Out"
#END

STR C113
ANDN X10
OUT Y6

// Rung HBW_Program#29
// Offset 102
#BEGIN FMT_COMMENT 
"Manual Z PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 100 V118

// Rung HBW_Program#30
// Offset 117
#BEGIN FMT_COMMENT 
"Manual Z Up"
#END

STR C114
ANDN X3
OUT Y5

// Rung HBW_Program#31
// Offset 120
#BEGIN FMT_COMMENT 
"Manual Z Down"
#END

STR C115
OUT Y4

// Rung HBW_Program#32
// Offset 122
#BEGIN FMT_COMMENT 
"Manual Conveyor PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 100 V118

// Rung HBW_Program#33
// Offset 137
#BEGIN FMT_COMMENT 
"Manual Conveyor In"
#END

STR C116
OUT Y49

// Rung HBW_Program#34
// Offset 139
#BEGIN FMT_COMMENT 
"Manual Conveyor Out"
#END

STR C117
OUT Y48

// Rung HBW_Program#35
// Offset 141
#BEGIN FMT_COMMENT 
"Jump to Ready"
#END

STR C103
JMP HBW_Program.S0

// Rung HBW_Program#36
// Offset 143
#BEGIN FMT_COMMENT 
"<FONT tsize=4>Homing Stage</FONT>"
#END

SG HBW_Program.S5

// Rung HBW_Program#37
// Offset 145
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 33 V131

// Rung HBW_Program#38
// Offset 148
#BEGIN FMT_COMMENT 
"X Home - PWM"
#END

STRN X0
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 200 100
OUT Y51

// Rung HBW_Program#39
// Offset 164
#BEGIN FMT_COMMENT 
"Y Home - PWM"
#END

STRN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 75
OUT Y7

// Rung HBW_Program#40
// Offset 180
#BEGIN FMT_COMMENT 
"Z Home - PWM"
#END

STRN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 200 75
OUT Y5

// Rung HBW_Program#41
// Offset 196
#BEGIN FMT_COMMENT 
"Y Home - PWM"
#END

STRN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 200 75
OUT Y7

// Rung HBW_Program#42
// Offset 212
#BEGIN FMT_COMMENT 
"Jump to Homing Reset Stage"
#END

STR X0
AND X3
AND X11
JMP HBW_Program.S6

// Rung HBW_Program#43
// Offset 216
#BEGIN FMT_COMMENT 
"<FONT tsize=4>Homing Reset Stage</FONT>"
#END

SG HBW_Program.S6

// Rung HBW_Program#44
// Offset 218
#BEGIN FMT_COMMENT 
"Reset counter for X axis encoder"
#END

STR ST1
RSTCT CT10

// Rung HBW_Program#45
// Offset 220
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 66 V131

// Rung HBW_Program#46
// Offset 223
#BEGIN FMT_COMMENT 
"Timer Delay<br>Wait for motor momentom to actually stop"
#END

STR ST1
ONDTMR T3 500 C0

// Rung HBW_Program#47
// Offset 227
#BEGIN FMT_COMMENT 
"Reset X Encoder"
#END

STR T3.Done
OUT $HBW_Encoder_X.ResetEdge
OUT $HBW_Encoder_Z.ResetEdge

// Rung HBW_Program#48
// Offset 230
#BEGIN FMT_COMMENT 
"Jump to Ready"
#END

STR T3.Done
JMP HBW_Program.S1

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
SG VGR_Program.S0

// Rung VGR_Program#2
// Offset 2
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#3
// Offset 10
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#4
// Offset 12
SG VGR_Program.S1

// Rung VGR_Program#5
// Offset 14
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#6
// Offset 22
#BEGIN FMT_COMMENT 
"Rotate Crane CW if limiter is not hit"
#END

STR ST1
ANDN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y26

// Rung VGR_Program#7
// Offset 39
#BEGIN FMT_COMMENT 
"Retract crane arm on X axis until limiter is hit"
#END

STR ST1
ANDN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 50
OUT Y24

// Rung VGR_Program#8
// Offset 56
#BEGIN FMT_COMMENT 
"Retract crane arm on Y axis until limiter is hit"
#END

STR ST1
ANDN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y22

// Rung VGR_Program#9
// Offset 73
STR X25
AND X26
AND X27
JMP VGR_Program.S2

// Rung VGR_Program#10
// Offset 77
SG VGR_Program.S2

// Rung VGR_Program#11
// Offset 79
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#12
// Offset 87
#BEGIN FMT_COMMENT 
"VGR.T0 - Reset VGR to 0 state"
#END

STR C400
JMP VGR_Program.S2

// Rung VGR_Program#13
// Offset 89
#BEGIN FMT_COMMENT 
"VGR.T1 - Move disk from HBW to MPO"
#END

STR C410
JMP VGR_Program.S3

// Rung VGR_Program#14
// Offset 91
#BEGIN FMT_COMMENT 
"VGR.T2 - Move disk from SLD to Loading Bay"
#END

STR C420
JMP VGR_Program.S4

// Rung VGR_Program#15
// Offset 93
#BEGIN FMT_COMMENT 
"VGR.T3 - Move disk from Loading Bay to HBW"
#END

STR C430
JMP VGR_Program.S5

// Rung VGR_Program#16
// Offset 95
#BEGIN FMT_COMMENT 
"VGR.T4 - Move disk from Loading Bay to Shipping Truck"
#END

STR C440
JMP VGR_Program.S6

// Rung VGR_Program#17
// Offset 97
#BEGIN FMT_COMMENT 
"MANUAL CONTROL"
#END

STR C500
JMP VGR_Program.S7

// Rung VGR_Program#18
// Offset 99
SG VGR_Program.S3

// Rung VGR_Program#19
// Offset 101
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#20
// Offset 109
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#21
// Offset 111
SG VGR_Program.S4

// Rung VGR_Program#22
// Offset 113
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#23
// Offset 121
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#24
// Offset 123
SG VGR_Program.S5

// Rung VGR_Program#25
// Offset 125
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#26
// Offset 133
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#27
// Offset 135
SG VGR_Program.S6

// Rung VGR_Program#28
// Offset 137
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#29
// Offset 145
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#30
// Offset 147
SG VGR_Program.S7

// Rung VGR_Program#31
// Offset 149
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#32
// Offset 157
#BEGIN FMT_COMMENT 
"Rotate Crane CW"
#END

STR C501
ANDN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y26

// Rung VGR_Program#33
// Offset 174
#BEGIN FMT_COMMENT 
"Rotate Crane CCW"
#END

STR C502
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y27

// Rung VGR_Program#34
// Offset 190
#BEGIN FMT_COMMENT 
"Extend Crane X+"
#END

STR C503
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 50
OUT Y25

// Rung VGR_Program#35
// Offset 206
#BEGIN FMT_COMMENT 
"Retract Crane X-"
#END

STR C504
ANDN X25
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 50
OUT Y24

// Rung VGR_Program#36
// Offset 223
#BEGIN FMT_COMMENT 
"Extend Crane Y-"
#END

STR C506
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y23

// Rung VGR_Program#37
// Offset 239
#BEGIN FMT_COMMENT 
"Retract Crane Y+"
#END

STR C505
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y22

// Rung VGR_Program#38
// Offset 255
#BEGIN FMT_COMMENT 
"Turn on Compressor when in S7"
#END

STR C500
SET Y28

// Rung VGR_Program#39
// Offset 257
#BEGIN FMT_COMMENT 
"Set Vacuum"
#END

STRN C507
SET Y29

// Rung VGR_Program#40
// Offset 259
#BEGIN FMT_COMMENT 
"Release Vacuum"
#END

STR C507
RST Y29

// Rung VGR_Program#41
// Offset 261
#BEGIN FMT_COMMENT 
"Turn off compressor when not in S7"
#END

STRN C500
RST Y28

// Rung VGR_Program#42
// Offset 263
STRN C500
JMP VGR_Program.S1

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"This first stage currently sends the crane back to the "
"turn table, resets the compressor, and resets out detection "
"bit. Once it is sent back to the turn table it jumps to "
"stage 1"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STRN X16
OUT Y15

// Rung MPO_Program#4
// Offset 12
STR ST1
RST Y17

// Rung MPO_Program#5
// Offset 14
STR ST1
RST Y47

// Rung MPO_Program#6
// Offset 16
STR ST1
RST Y18

// Rung MPO_Program#7
// Offset 18
STR ST1
RST C1000

// Rung MPO_Program#8
// Offset 20
STR ST1
RST Y20

// Rung MPO_Program#9
// Offset 22
STR ST1
RST Y21

// Rung MPO_Program#10
// Offset 24
STRN X12
OUT Y46

// Rung MPO_Program#11
// Offset 26
STR C801
JMP MPO_Program.S7

// Rung MPO_Program#12
// Offset 28
STR X16
AND X12
ANDN C801
JMP MPO_Program.S1

// Rung MPO_Program#13
// Offset 32
SG MPO_Program.S1

// Rung MPO_Program#14
// Offset 34
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#15
// Offset 42
#BEGIN FMT_COMMENT 
"Always be Detecting if we have something, if we get "
"something set C1000 on"
#END

STRND X24
SET C1000

// Rung MPO_Program#16
// Offset 45
#BEGIN FMT_COMMENT 
"If we have something (C1000) and we get a go from Doug "
"(C800), start by turning on the compressor"
#END

STR C1000
AND C800
ANDN X17
SET Y17

// Rung MPO_Program#17
// Offset 49
#BEGIN FMT_COMMENT 
"If the compressor is on, and we are outside the oven, open "
"the door"
#END

STR Y17
AND X18
SET Y20

// Rung MPO_Program#18
// Offset 52
#BEGIN FMT_COMMENT 
"If the Oven Door is Open, and we are not all the way "
"inside, move the loading tray inside"
#END

STR Y20
ANDN X17
AND C800
OUT Y44

// Rung MPO_Program#19
// Offset 56
STR Y20
AND X17
RST Y20

// Rung MPO_Program#20
// Offset 59
STRND Y20
AND X17
RST Y17

// Rung MPO_Program#21
// Offset 63
STRND Y20
AND X17
OFFDTMR T100 3000 Y16

// Rung MPO_Program#22
// Offset 69
STRPD T100.Done
AND X17
JMP MPO_Program.S2

// Rung MPO_Program#23
// Offset 73
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#24
// Offset 75
SG MPO_Program.S2

// Rung MPO_Program#25
// Offset 77
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#26
// Offset 85
STR X17
SET Y17

// Rung MPO_Program#27
// Offset 87
STR X17
ANDN Y20
SET Y20

// Rung MPO_Program#28
// Offset 90
STR Y20
ANDN X18
OUT Y52

// Rung MPO_Program#29
// Offset 93
STR X18
RST Y17

// Rung MPO_Program#30
// Offset 95
STR X18
RST Y20

// Rung MPO_Program#31
// Offset 97
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#32
// Offset 99
STR X18
JMP MPO_Program.S3

// Rung MPO_Program#33
// Offset 101
SG MPO_Program.S3

// Rung MPO_Program#34
// Offset 103
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#35
// Offset 111
#BEGIN FMT_COMMENT 
"If we have detected something at the oven (c800), are not "
"already at the oven (X19), and the vacuum is not on [Which "
"means we do not have anything] (Y18), move crane towards "
"oven (Y53)"
#END

STRN X19
AND C800
ANDN Y18
OUT Y53

// Rung MPO_Program#36
// Offset 115
#BEGIN FMT_COMMENT 
"When we first reach the oven (X19), turn on the compressor(Y17)"
#END

STRPD X19
SET Y17

// Rung MPO_Program#37
// Offset 118
#BEGIN FMT_COMMENT 
"When we reach the oven (X19) go down, and come back up "
"after 3 seconds"
#END

STRPD X19
OFFDTMR T101 3000 Y19

// Rung MPO_Program#38
// Offset 123
#BEGIN FMT_COMMENT 
"Turn on the vacuum in order to pick up disk, before the "
"timer turns the crane down bit off. #TODO finish comment "
"here"
#END

STRLE T101.Acc 750
AND T101.Timing
SET Y18

// Rung MPO_Program#39
// Offset 129
STRPD T101.Done
AND X19
JMP MPO_Program.S4

// Rung MPO_Program#40
// Offset 133
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#41
// Offset 135
SG MPO_Program.S4

// Rung MPO_Program#42
// Offset 137
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#43
// Offset 145
#BEGIN FMT_COMMENT 
"When the vacuum is on [which means we have something] "
"(Y18), we are done timing (T0.Done), and we are not at the "
"turn table position (X16) then run the crane over to the "
"turn table position(Y15)"
#END

STR Y18
ANDN X16
OUT Y15

// Rung MPO_Program#44
// Offset 148
#BEGIN FMT_COMMENT 
"When we turn off the vacuum(Y18) and are at the turntable "
"positon(X16), jump to the next stage"
#END

STRPD X16
OFFDTMR T102 3000 Y19

// Rung MPO_Program#45
// Offset 153
STRLE T102.Acc 750
AND T102.Timing
RST Y18

// Rung MPO_Program#46
// Offset 159
STR X16
ANDPD T102.Done
JMP MPO_Program.S5

// Rung MPO_Program#47
// Offset 163
#BEGIN FMT_COMMENT 
"This is the reset button"
#END

STR C802
JMP MPO_Program.S0

// Rung MPO_Program#48
// Offset 165
SG MPO_Program.S5

// Rung MPO_Program#49
// Offset 167
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#50
// Offset 175
STRN X15
AND C800
OUT Y45

// Rung MPO_Program#51
// Offset 178
STRPD X15
OFFDTMR T103 3000 Y43

// Rung MPO_Program#52
// Offset 183
STR X15
ANDPD T3.Done
ANDN X13
JMP MPO_Program.S6

// Rung MPO_Program#53
// Offset 188
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#54
// Offset 190
SG MPO_Program.S6

// Rung MPO_Program#55
// Offset 192
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#56
// Offset 200
STR C800
ANDN X13
OUT Y45

// Rung MPO_Program#57
// Offset 203
STRPD X13
SET Y18

// Rung MPO_Program#58
// Offset 206
STRPD X13
OFFDTMR T103 750 Y21

// Rung MPO_Program#59
// Offset 211
STRPD X13
SET Y47

// Rung MPO_Program#60
// Offset 214
STRPD X14
RST Y47

// Rung MPO_Program#61
// Offset 217
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#62
// Offset 219
STRN X14
JMP MPO_Program.S0

// Rung MPO_Program#63
// Offset 221
NOP

// Rung MPO_Program#64
// Offset 222
SG MPO_Program.S7

// Rung MPO_Program#65
// Offset 224
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#66
// Offset 232
STR ST1
FLASHER 500 500 Y39

// Rung MPO_Program#67
// Offset 237
STR ST1
FLASHER 500 500 Y40

// Rung MPO_Program#68
// Offset 242
STR ST1
FLASHER 500 500 Y41

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"State 0: Listen for Doug's instruction to start module."
#END

SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
NOP

// Rung SLD_Program#3
// Offset 3
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#4
// Offset 11
#BEGIN FMT_COMMENT 
"Wait for Doug Start Command"
#END

STR C1610
JMP SLD_Program.S1

// Rung SLD_Program#5
// Offset 13
#BEGIN FMT_COMMENT 
"Enter manual mode S10"
#END

STR C1650
JMP SLD_Program.S10

// Rung SLD_Program#6
// Offset 15
#BEGIN FMT_COMMENT 
"Stage 10 has manual controls for SLD"
#END

SG SLD_Program.S10

// Rung SLD_Program#7
// Offset 17
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#8
// Offset 25
#BEGIN FMT_COMMENT 
"Manual control for conveyor belt"
#END

STR C1651
OUT Y30

// Rung SLD_Program#9
// Offset 27
#BEGIN FMT_COMMENT 
"Manual Compressor Control"
#END

STR C1652
OUT Y31

// Rung SLD_Program#10
// Offset 29
#BEGIN FMT_COMMENT 
"Manual White Ejector"
#END

STR C1653
OUT Y32

// Rung SLD_Program#11
// Offset 31
#BEGIN FMT_COMMENT 
"Manual Red Ejector"
#END

STR C1654
OUT Y33

// Rung SLD_Program#12
// Offset 33
#BEGIN FMT_COMMENT 
"Manual Blue Ejector"
#END

STR C1655
OUT Y34

// Rung SLD_Program#13
// Offset 35
STR ST1
SUBSCRIB "4 WX0 V3201 1 0x4"

// Rung SLD_Program#14
// Offset 40
#BEGIN FMT_COMMENT 
"Manual Auto Run"
#END

STR C1611
JMP SLD_Program.S1

// Rung SLD_Program#15
// Offset 42
STRN C1650
JMP SLD_Program.S0

// Rung SLD_Program#16
// Offset 44
SG SLD_Program.S1

// Rung SLD_Program#17
// Offset 46
#BEGIN FMT_COMMENT 
"When the light barrier is broken, turns on timer to run "
"conveyor belt with disk until the middle of color sensor."
#END

STR ST1
ANDND X35
OFFDTMR T200 3000 C1600

// Rung SLD_Program#18
// Offset 52
#BEGIN FMT_COMMENT 
"C1600 is set to true when timer is running so the conveyor moves"
#END

STR C1600
OUT Y30

// Rung SLD_Program#19
// Offset 54
#BEGIN FMT_COMMENT 
"When the timer is done, move to stage 2."
#END

STR T200.Done
JMP SLD_Program.S2

// Rung SLD_Program#20
// Offset 56
NOP

// Rung SLD_Program#21
// Offset 57
SG SLD_Program.S2

// Rung SLD_Program#22
// Offset 59
#BEGIN FMT_COMMENT 
"State 2 is where color is determined by checking if the "
"analog value is within a range, and conveyor timer distance "
"is set based on color.<br> <br>"
"Need to integrate a counter here still."
#END

NOP

// Rung SLD_Program#23
// Offset 60
#BEGIN FMT_COMMENT 
"Subscrib is to get value from color sensor and convert it "
"to something the HMI understands.<br> <br>Need help with HMI"
#END

STR ST1
SUBSCRIB "4 WX0 V3200 1 0x4"

// Rung SLD_Program#24
// Offset 65
#BEGIN FMT_COMMENT 
"The disk should now be in the center of the color sensor. "
"This function checks if the color of the disk is in the "
"blue range. If so, sets boolean value C1601 to true."
#END

STR ST1
RANGECHECK V3200 0x1 23000 22000 C1601

// Rung SLD_Program#25
// Offset 70
STR ST1
RANGECHECK V3200 0x1 20500 19500 C1602

// Rung SLD_Program#26
// Offset 75
STR ST1
RANGECHECK V3200 0x1 16000 15000 C1603

// Rung SLD_Program#27
// Offset 80
#BEGIN FMT_COMMENT 
"If C1601 is true, Off Delay timer starts output is set to "
"C1604 which when true runs Y30 for timer length."
#END

STR C1601
OFFDTMR T201 3000 C1604

// Rung SLD_Program#28
// Offset 84
#BEGIN FMT_COMMENT 
"When C1604 is true, turn on conveyor."
#END

STR C1604
OUT Y30

// Rung SLD_Program#29
// Offset 86
STR C1602
OFFDTMR T202 2000 C1605

// Rung SLD_Program#30
// Offset 90
STR C1605
OUT Y30

// Rung SLD_Program#31
// Offset 92
STR C1603
OFFDTMR T203 1000 C1606

// Rung SLD_Program#32
// Offset 96
STR C1606
OUT Y30

// Rung SLD_Program#33
// Offset 98
STR T201.Done
JMP SLD_Program.S3

// Rung SLD_Program#34
// Offset 100
NOP

// Rung SLD_Program#35
// Offset 101
SG SLD_Program.S3

// Rung SLD_Program#36
// Offset 103
NOP

// Rung SLD_Program#37
// Offset 104
STRND X36
OFFDTMR T204 5000 C1611

// Rung SLD_Program#38
// Offset 109
STR C1611
OUT Y34

// Rung SLD_Program#39
// Offset 111
STR T204.Done
JMP SLD_Program.S1

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STRN X40
OUT Y36

// Rung SSC_Program#4
// Offset 12
STRN X41
OUT Y38

// Rung SSC_Program#5
// Offset 14
STR X40
AND X41
JMP SSC_Program.S1

// Rung SSC_Program#6
// Offset 17
SG SSC_Program.S1

// Rung SSC_Program#7
// Offset 19
#BEGIN FMT_COMMENT 
"This Stage will be for looking at the High Bay Warehouse"
#END

STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#8
// Offset 27
#BEGIN FMT_COMMENT 
"If something is detected for pick up for 2 seconds (X42 is "
"not on), write to MI600 to let Doug know we got something."
#END

STRN X42
ONDTMR T150 2000 MI600

// Rung SSC_Program#9
// Offset 31
#BEGIN FMT_COMMENT 
"This means something has been dropped off, but is now "
"being picked up by the crane so turn off MI600"
#END

STRPD X42
AND MI600
RST MI600

// Rung SSC_Program#10
// Offset 35
#BEGIN FMT_COMMENT 
"If something is detected for drop off (x43 is not on), "
"write to MI601 to let Doug know we have something"
#END

STRN X43
ONDTMR T150 2000 MI601

// End of Code Block SSC_Program
$PGMEND SSC_Program

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C101","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C180","HBW_Fault","Modbus MC180","Status in Fault State"
"V105","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","HBW_Fault_code","Modbus MHR181","Current Fault code"
"T3","T_HBW_S6","",""
#END

