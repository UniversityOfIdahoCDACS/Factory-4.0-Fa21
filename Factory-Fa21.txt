// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\Nick\Documents\GitHub\Factory-4.0-Fa21\Factory-Fa21.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
bb56c71955bbb035a60f74a0cfac16467f094b0735dc7857a860880851f3156482147edf355d6af3
5b595ba8a77cb43e983cd4833be0d84f00c6b50e70de8f75c493eb922ebeef2680d465e11d06b4ff
8942279a57148951bb4b78344773cc20309fa218caf97ff488efb3b60a23240ecbf24941305ac480
e424f5a2eeb711600262b6356ae6434abd8c0b6d726afdd23899b12233c2ee69fb7be3cc5a4fbc6a
a228dc8ee76935de6dd9cc651921e36382e78bd12eb72ab7df00fc74496ddba434147b18d616f365
2ee765d4eb37b0bca89799b1bf7afe56ef2bf7e16297a24011d234b8dedf3401e3ca4538e44a587d
7ca985be88a68f64968db4c8df129c13662c9a9284d6d211b0d56014a9b46a3db489358a278bca30
7e53a0e05f319fe36278741dceb30b6c3a9f3f6083aad429e4d22d57351d63d31d61fbcb7f1d6611
5efff11148e545a1bc55f47038d73867082076602f1692e04c5ad6ad65bfd017f62b30cd55119483
04dfe42e578d65c1fb9bc4d2c9bd3b4daeedb6924cf0fa4afaed1c9d3b6d0d14a0ef42c4cfe09926
c43b8e4510ee5f09101ff51e8a92873a920b9c6e4fe5f57c3edbe7ace19cdef24478275c18c8d4f2
7e95ee81f5c2a4693389159a6683fbd78e7d778f91c92ba1cd40c51d7e4c9d61da72ec9c0ae8008c
72e224bc44d70bf49e577b1a0def490a171382858cc0d9e0dd8a26c761f0bc21e71b11f9ff50ab0e
94e636616c77982e6103441315bc8c9ea1052b8c9da093cb07c2481f8738e3697742090566340408
0a66f7ab2a5a7edb9aa5a2ea1687d4acbed84a92f0ce174099b6540e0b8a6cc3e42182fb4c3cb2b0
b84c553b31b51124fe78ba7f199eb8b028f9e873b67d0e77d1c40be0d0a8bb366a8d3982a019848b
6bf745c4fcd5ed1c5a399e232d6dede28c4e44f9f0dc864fd55d825f905b46169a8d38ccf75094dd
042df153715f1cf11c95d36c0a0e9a80ed8fc44cf214245d88379f2e178b3e67dc3bdc991c76bb2f
cc7bc1f585af9a35272dbe3aa7106e70dc0ee069c2412ed4e608b77903491dab08e6d62e47daf4ab
6152b37f2ccc93455552055173faa042e79d5ed2f6820d3be4a450549b3fa58b18c5db0b386462ff
2a7c44d4f7c9e02a39e5aedf70b04a6dce0b920eb6143f978f258180f0a5fbacb1539abc45453e8e
c2a7a98024417d24a07a56beac71ec198c9c58f89c8ad43b2b3e5ff513260c08f7840a5568822a06
4faab6c8d682cc72b283ef433d2a0920e91c5cbd49e91a71faee725c25dd8808ad31b7f9b890d252
335b9850f3c0022a5e8068fff1ab598c22d23b1371b19608f370ca10eece4985530e71f14606c092
b3f68be76ed1af184b14b4181af7e4f78ff7f5799e3ae7cf3deec04735961a02948eda8497ca741b
4c3e411c690f255b7c92155b42adfa0015a6336b3e3d9efd036ad4d3ed884ebd0fc75af2c39d82a4
fbca6ad00d5ef98ad83596fddad4f4ac36d26c01f15d8d1d8d62ffb5fe3a844ef359dfade3863083
3f0830af13ebbe643e1e9ef0188e0dbee11a659e0a3e86b3a4c5a9cd591ba813923edd36681568a2
baf4a935528c7ebfe2ad80c80445cd5470bfa7528bc8b2d0048040284276f4a7b66c742b7f8bee97
b58e6758fe8127fad702ac70a89dbf289c5edebf7bf62187a6c8c7473dd7c40403370b721d7c0ee3
337b56708558867b496c6a7f9d5a534a4128562f6223aca64a61b3d58b08ca8caa2fa905ec5e80e7
9904d758dd83230193510e15c3826d99f820c5261b6bd64ee8d756766301fb36699a6d7ac52c5d08
f92de5580ffe95406162e0ed1777711f8c77f7b498769a47c0061905b4b078e98479a112c03494d3
3cc8251a7a7db0ef1cfbb88d4bc2988b40ed7164af24108000b783770229abd1ad5796c0a2533e0c
44e71a4cdb3af32926ad448cf5cf897b6e36455e24a697715b5785c00fa751b142bea6c11812a8fa
41e26c39dbe3ab3c1818afb79b4507ef935ab542d01a8dacadc6fca1decf5af1038e5f1cd00dddc2
f5ab426868b4b769b5016e048f00201d93259dd0f477e3c102ce90b5dd37298af50d5d29d29fe2da
59b5a0e8c3caee7cc3090656e2a7869f2033f2148e4cf03ab01b83e10b26a8cd6fb345b46c1af95c
ffd01dab03f58c29534479435ef91bd65ff0d20e60f53f5ef5f6354aad0267726f3535d60b68ee84
0785112d978f2164a6943d1f6c0ebf1b180de132ed8c88369daf63bc2f6bf0c250a2fdb8e14a8874
975e6ce50774a640e4e7f31b485a393d8b00321ec251d572eaa12e3e2d7f17ca23ac94a1e341b21e
36d8ad6cb25acf15e75f89897b289e6c977dc5895e5402c3dd7eaa9297714be4a83c24292bbb3f72
ee5db296806d3383ed0baa8668fcc25c517e0fc3f712b68e213b3b92dce13cce76c75141cf35900d
d1cdc5f63e6f4218bae729d236826c731ff7bfd63c51db95df68952b25cbcad373b8a6160d8198d3
23ae77744879e4d18fdfa8b9d602748896266b871457eee9634a72faf3bdbfe9edb24190d566fce1
6722c04ea44f21c1f504f63cc81000c4d2f7bcd5bbbda8c419ffc286dbf5f69d2aa2e91e8f89f649
1fbe43b6e02b9830d4e4814dca2494563ddbc8a83adb883be13cb7c8e114d0927155c0fe09abad5f
14446b1a8932932953b600fd75cdb04de014144abb891311f508cd244f81427c71f412f2dc5c884e
8f4c54d0f95b59ac75e575919c3c8e6406c47ea37c340eddffbfe35c6937835190fa2047b66f687d
2a6eaafd65e4ba8edecc068939fc9704e8abdea7acb78bf5c58d0b260c9985a2e89791c50061686a
73d1b0e53c62cf45f7ac53bf833fbf4f26009a587fd32abd477af155dc1b4ea358b26f60d829ad1e
58e607f9a5b9f7a1eda29f9b17396734c11b445be200c58375bb834df0b32f49581fca5b4155c4f0
f647a33b2224afc719655d3d56676a93f2903396a0046fc72143580451b46911af58e7bbe028f72d
c7abb822e45c7af15b4b133e78991a0b05c4c3fe3bbdad9a65bfa5dce651f12c49b63e06f3498b8d
df83be05c8ce739f26377bea7a3e773387629c9b2a22198b1ae2fea6bf70659c992a31c2731b81c1
c6f939d7fd0b6a3a42a56050671b03beffc72368f9effefaac9f2fc8e8a25737f34fde42f6d45afb
497d6422f3e0b847263ed3f198c79f8aed41276f966615c86ce8fb25a2c2fedc871e6557fd77cab1
fe066d05067700ee7ef116ca4d0523ba1aa72014aa55f184f34d6fd164270a8b28021ada6eac5de9
f0c2f7e1f2a0e89d20f827842576f4f1a44dc02633f8d6887cd624b5e025ec1fdbdf09c1683e93e5
4f122e345cd513d04368b08b12b20f88598793696eb66eb223d29979c7ba2509fa85efe62e260446
091dcf3b7bff37d3efe51b4e9b8c2166d04f29593b82d4317150598753b6f5c05d4020f284e97429
5a90c0feb4ae8be309905bd59460a264b22883c472ed7382d600a598a2fd769e2f208b976315f08d
be9b280b8f3b763fe1b6975cf1af19b1ad8f4c8b7376f82e6f889a5e664f1b817adfde831ed51f7b
5b81217f42a4b3213ec59e329f02586e28698e9c58622b686a35c1a98578afd4dcf3c70d9919704f
812434ba5a93a8866adad2d91e794b619684bce926236d85b9374e596361ed5c84f59cd2abbcfb9a
9d71a27a2df03b2655ba7ce3e039ba05ebd759e0f07eacdabfad0a133d662e698d011596fa1f7f0d
df0ab6bb52a172774c2e6b94b47391bb7d80ec0941f13e9ed9a83f141f2c30011f31d01219910bbb
66357223bc95aa7a5a8bb1e954cb0b310769048ce335fb243a013a1077655d082723ad20f6144354
5a37bb0ad2137a0c9cf03d06d8300dcc130d3609a33876542d0a3f6f020684c2db36586c3c3416f3
b4b20a5c3d7a93eee7ec2b4c765c769100c0edd8b0900946059f7478da66a837463eb231911a3ab4
1c5dbaa81ca44b7606915a50b9a6978927f15bfcd286d08f9c08304500518d19f3c9912cecfc8010
b03b456b464a30ef566da4ff659e3b0b3e3e350a9754d8e3490083ef0a42f28564ad96b85666a07f
619aaab42d3f07520144a981693e5b593f7c835b33c26863d2b8cc8df9a7f35267154078e676381a
634c796d6d72587b1ec9d31f0256ba1214bb114f662f192612095e25ac473ff849b0db507253ddef
adeee9caf1e20c703f3cc111f108848c0ecea95faf0378270516784ee9805c86de948bb1ac83dc9a
f948883ba919ae5ab9de1ab9c585807cca36e266756efd026114d3c55c12a7b871d7726d5753d167
810e7df239cd8d61a3855ebe71e20d86b1c02fc9ae22a36331d46a0246c4829b76ddbd9b4a1f8c46
86970fb08a854e059d923bc73559ceb291b4173492e9765d8256ec49c02cc9e998da6a405b39e15a
50cbc46d718d7b3a33a2f7c119b21a64935a60be54e948438c6b64f6f336366b2ba4efd52777f3a0
75c294ffe02eb50502d153e338fa418b121db428c785d9a6de37b7c3760ac81d9b143d75bb2840ce
8251bd92d232f10270e4730807bb2415fed6cbd3ead9ce70392c5aceba2fdc552e68779d174bfa72
938c0d16b364e841d524b6735fdb38966b0684d5a9ab94fc0bb9a34c75dadd4be949ee325d41db50
7c2513ba1cbc4476715731cc4ab671536a5ebb168492659a6d6bae4a5d134c5cb3ce0e9cb5d6ba95
b8e1c58756b4efb0638c9986f8905861fa4d458a112c85a7a436149de53fab1522513509acb27f67
907506ed11d1c9aeadfd29e8e132f1c1d86962daad184ad7cd3b1a5f0092d27a07aa0db92953d15b
a40f1f5ffd3d976a4b0e511bf6be3bde5e098cffba05afd6465c9aa685d1fa22f9168a042b33608d
1022fdf6c024dcf4f95f90c060069d46810cc2c9166fca7b69dd36b5f96ade96bf1dcf93361b3bae
4e91b96f0f656193e31c1faf7765829c2cc566cb76811b6d5bc895932801984e50c8dae1f943b26d
cee3cf5aba654d9bfb899524e39fc60f12c2253ea2b4e971155b39d45afd4d2efef3764ba326686f
28149e802733bbb879e852dbde50bc3cbec13d87489c58208d4e6d5cbbfac1ffea24fbc5e2080bcc
ec855c0ad10f61668c445fd47cc2a094deddd6fc88c6867a988d622364d872257568fbab28c85230
e069129395bc4f4260c170b5db5f503656604de31cf61d8611425c265b5bbff732bd0d26fa195e1d
3598bd650c5b68de30debe47afbf210654efe395a3ab6a94dfdbb6e3c2f64c43ccf223da3d4a3891
dd6bbca309afc22fa70c4b92f736628e9ea3df74c62249801202a9e49cf46a5aa080148f527f67c8
7cb61163bfff1f6c95e53e3c25e26e513012eb7305f8e8aa4f565dc75192dab42c12a0f4447b95fe
fecef17e0648a0486287a3f05085b82a2ad1791b206d74033aeb733d5ac34dbe3a6f44fe99e54427
66da5cae49087a427fe17cdd6ef52e5b9122f6e188632cd059720c95f2ac49e98e1dc6926ae653e9
1b1d6fbde3ebcb418529a200bcfebe8461961021fda63c27a0bdf6d416f351b6d64f1a4539c47334
d5bd624c1a467ad73b3ebbb59097bc08e560b2d1360819b8e7ce3f08136a29b574d21167534b1b90
f1e84a9eca58bf1fe7fd1ac44df89f196c3b3fc981e67231a5e5b3d2ebfb3154d23d9728f51c8f83
6fdf1cb3b5ea5343d3a525fa2e0adfcfdb635fd45e1930d4b40f5626899a120f1664206f2b84fba0
cd8b13434d11aae2caf36dd524e08376f1a27dff31904b50a1c67a440d0f733e0bbe4b1b82678cda
c5a885892887352c425aa6feb38b4fbf42e2d1605adf3b3172df00a17963278e079280ec4b1ad517
d9028de72df6b5ffb17724173412b5a9235f52f58446af0b0435f5c162b1512abd009416e3174088
86b57f7a0e1db8f9b08215b0df3ba63f7caaacf3d72f3b8c77bd434ffbb96c3f6e30d38d4a05fbfc
e443b9fe4a7bd49f7dbfb1beb0247460a6beea372907c5a035f60d97e06b3c47df8d2c70c77a76ee
fcdf82b06abff40332e77415056089168645442a4dad44d9ec6299d9ee14ca4d69284c3805eb4f5b
231661b18cf44994546240812322edc4ee159cf81a9b311a52d6a84e4501621f9f718820e446f167
5a46a593eeb53af86e0dc00f0d3a7e0733bc4b1878d015d66bcceede2e9ab04d23be77ba7ae85b1f
4bea6a1298f1874434cb557bd382d35d3434341415b6e835ed1e9a6f745a97511b20247a58629530
18501c6a348236d799daf7257e36bdaadb27781110110b0ed29f467a480ad4a121f59d31c9fc3e21
10e1d432ad2e2e499b7cd00c20b94d6a89e8e793a8d09170eb581e4321dbb8656d30b69015e6d8c6
e60029d8c9a6435dd8cc67cfa6771c36de1b2bdb26e467a4a7fd8a1a45b34d497956db5da5baeeb1
e828db3a4d7e7ff51146b1f7a00ee36c6ee2cffa5e8a6cc228b91eb1d91de2543bca4e59f0186dbc
d73d55507f8875b75aa8b976bd68a5b721d37e76cff23039a95bdd194cf2af90cf6aa0cd3795adbc
b8859aa688b57e0057914ab9ef3acada0f4ec20b6a4f725b3e39b2f25d42651530ecff09d92be13b
95c99e957154397232c67e36f550664422caeb12e5cc519675fb37ca21cc5126ecda362110a7c546
52bc4d1e85eb39c29272299ce2ebd4e2dc83418b6ff92ab7a5af07db2124a1bbbb35956c00800985
047d1ebd6c42f80bc9c503d83becfbfe0ec49e389093bedb477586518cf0a29d6d9052028e1f2a0b
644d48777bf2bcf9bb9beee28f5f950a7ca616dfe58852e308333eedc28fbaadd00c6b14f511d27b
f4cf1d02599fda440bd1269582853a766b0c0d1b3e77220cbd5d3161dde0a4e3c3d0ae7ae538ea1b
616d7c58174f1764a891fe77d8705997850e56e1b3ec1d80b7c637193349df8ffe7ccb20e9e7c3c7
9a670b0423e27972948246a0e38350d4e69db481e3ebd51b43ac0ae74da0f8e91b67f59f9adec673
367ad3c9e1f4b5feb62f1674827785d1207e6fccafe00c5de84ad27e8de900c949c23cbc441bf961
1f1cbcd1193ee9375bc398545c9ff263b98095132334a161b523134929b669ef39853a3703849727
4b36e98194da24ea5696ae0f6f9a9e7042562ea7bd0adfc1d91551b70faea4196e2edc29dd619d5d
ad0cbb397d380b0112967e02afa0a72c14915ed5aeb54f46e16e83287e87cd94310e4e0935fb6618
7e0564a8fa2b8bff30cfdf0244ce427017e52b3d0870cb5066469dc3120ae65aba948cb35e46f469
ccd062ddc58adc405834c0d0071be04ae723a80a7350df75146a8f0be85a2c3d563244bad2f00bbc
7d444412407d0806ba2c24ec642e843113d026404312e33cd9a8b88e8fee2c4f9bd104204d9c33f2
5a1dde399b3b795d740251d536d1fee1435aec41a3f4c5710eeef0db32230ba457d8a97033788b25
2fd2b4916baf5d1652c1c4466d1cf23084ee0e5e2b120f16353c24e36497bc17939c6f32647934d3
a629ac42bc5649554d428c4a6a6b8e9fd369b3b3d00cc2c11de3387f08b7f773f75d944e8920e28a
627782c50fb4d9cdc4379f7e0493df0c61aca7a85bdcfe8999f32c50edf3408d48f440313f0bbc9d
62c02dff9b9181011bf0e355cbb9e885efabd59b56637b4ab8dc747b27b91f735eeeabb6d88e4052
235d22f5ed73f974c6d3273e08c3e7828895016350c7244ab3400ff64f79dae659fbf168dd7272c2
e4c5314e60aec462eeeacb6cb4d2e32f4cf62359a8a79d61477e90f0d9c141d07c8cdcc028412d99
33c9ec7888d888f57f79333719674c8bc2890c2277adea1b1c49b9922acd0cc9da3095de41f22f47
64df20b9c6697a26e48db37a91058b6d6f4be1ee9070dbef5504f8a1f5d830fbd520cbdb67eabe59
1221196278e84d5ef6785c87a32ae4d5533942614b4bd9c9d03a88c78ac67099a14fdb7059a672aa
fbfc8bac87b1c6a05373ea9c9994f57441754327b8e5d234e796d77d3456bd148d06ad2d7c0d3fa0
a81cf6e047fc6e58cd3b91f9b91d5d4c624dd0d3d1ac18a427d84373caa8b5ada24c071ec6f3b3c0
de4b1c25b81360d1bb8cc4b34523e6da9539500f430a67a35e59eda80ffae01dab17143e8fd2ed2b
c73e22a9e92d49aef71cf636057abddb5a00760c451e7d80174b0c4a11fd53ee626bc2469bc18794
025e301e1017ea568336eabf1f01602a2c6e6fff2189eb859d43db58b416e7b566ff009cae7e3c88
9f25f2251170c1676b4165f415ba7195e5119e3b087e9a6b8aa3e7b87473f42d6b0b8e6f2d445647
dc9645156fae9b4b0f87f5fca4a2cc6507560fb334a9ada9b4bfb29c2cf4d53f5b08c4247066d324
a458069b2674948506505f268b64e55807a4676f22730ffaf31ce2f38971daa8b4b382cd8a579ad4
48060dbf207ba9118f917ce53d69d4c77c22cfcc45127ae9c0d63192b4c2b90bb4576c3539ef6700
b58e1c4c684048553517e7568b69c3dee32e5bbe5f11d4ddfde3af2d3e5de263c61179c2071e37a6
8bfaf30e1165fdbf19a3dc913a359b5f39b501147c729c595622bec1cbcc6aa1cb9b0f6192001ace
bf53c4df3a2c10e1094650658c2c00ec9c104d5f9386babb56b7c73bf7dcf36c97fcb1067065ebfe
bb2c4fd35c5ee4ac27a0986bdd216f25e52bec9dc40e71452244c6aa4cfe52110fa4a846a76e5b33
67626c95369719fe4ba73c7e39e5900fcc5dd8def688c0c526532c45ef98c47a09d216685d80660d
578c7b607808954e5b269fd055f478afe43ac24d5abcdb99317cddc6798d88b890e0594cf756dda1
3bdcc03c6225883485e04060648f23d7d3b23ebc895705f7a78dce3c577e602fff6aa3898ea3848b
4bbd55a6a830f0cb7792aec39cec9141a36e1b0f8be76fbb311d24dcc54d9e7f0f4570c4b5a0dcb1
1323b075a7bf3a5a0bcf3bfb654abba8298fcf6d60f7966b40809450ac9b51f0da1efa9064764986
605f0e6f86d7087c88bcbc7305b19ad8551933474f6e567df846e3458863499c522f9c1bf4cab52c
41358fad713bace27f5ab521451096eca8d694831462cc47a82c27d910e5159616eaf6f95611fa75
c12f9eba42960a71fdd6d17ae7785b22dffb641e7da4e46e0e6039fd8fbf3876bdb70298eb879821
d4f1fa35a31847b74080968a1b0645599d9c5f86cceed7cb3f1ac6d44888dd187494048cabd98fe0
38d13ffbae7ffcb23c328fcc0f347445d596a0a2b7fadf8a1f5e6e99d01f44185d7420cc28bb15bb
25f8e0a680978fe57a68ee17572c9889361067005b599105f126d51d52ba7f4c44be4255d69e4dc2
127af3009300722c85120de07f1bfb39746fefa72e5c9b445304151e32a19b3b75924701beb66b3c
8ffe45f6f0bf07df913f2860281fd7a1d0a79d7f81069e35a407a90cc300f9803700dde8b700a615
2a3e7e701a64f5b0e1005d041215a8442370311be9245b054fde9219a23fca9e6fc621b1b0dd820d
2158ba1eb4ce8dd326367869537b07cfc8778934ad1e2d8464b45179ca6525d3bc75182b2e7bfd5f
6cf0f8ae58015505be5a1e7ead613d1d8a6d5ce9b6fe6fa7950f9b202ec84aafa739e3b544940513
c0edca7b276a40831180498bc0e81d3071c285bb6f2adaca80274f012f31dd8d3eb183dd7ed3b5d8
384312542437d04e850668d4d9e5669b01c39dea773ee1e24b9046216576dcb4b1aeaa0b93edd5dc
5bbdede4d6ea58c8b525c24a556946f4d0fa2a49bb240edb7443240eb93bb2f2995d8ddf0792abed
9e7c133edc16f457da9f0c577988728c0b100bff0918b9fd900ec9170011e1994545005137d597f9
9cf350cb6c901453b7113e0b7774d3b606b91c32f87ad8f57b5c84e46a47ba2289e57146047f0311
c3ed680d179c29c4a1e3dc38d196915171b2c82bc81bcb5bbcf16ccda11dda541f1ac7d85810fa81
c5763f6826fffa407f60f368608116f6b7982960194ca7ef387a2e3ab1d0b7999768d96f70a450f7
129a56457af4e8183ece7a88691cb49d5f9c2e72e30d5b01ad032e0a9a30b1ff748b4287afede90c
2bc44cd2a549ce90160f9f51a582f729304983ba45a97737a70132b4d5876553529a74d77a3c30d8
b4b7f91cb9cf1d5a6f5d81907e62147b31d76af0ec37d8b849b5f09e297245386f4cf4eeaa9600fd
51871afff3c05246b6007be6880f2cb50e4d7980f022fab8c6a87961d207513f73ad114c04efe7b3
c313dddb0c6e7abf137b2df987b4e010d2a80a03253ee654c0d3205bbec5aca4a95bb180c764395c
05e357a587460c8083c06955bb28e6394b785a12f4e90f10b1101e21939b60e1ad3c47ac6bce3539
62ff41cf5ecbd6c1f4864abc952b6346b740a2ad5ed4ed60a8d7b21fdac832c0f7855e8d0366cc14
c57be1077121c5094677c0cd4b4549df2aa9b43d45a9adda205f8e181682c9e89e999c9ef12e9612
a01b261394eb453c5950bd52993b4ef70be9051dd8f671009ea51fc7a7691da0ee43b020b111c850
10cd00978b9ab7441d10e0ce94c220188502c922d485fe839b6c2d0438eadf2efcb44c0b723adbce
38aaf9cbffa7122e08ff0a9b76a59edc7957be6e7d76e1c83c500809a2a4899a6feb1499b3b28664
c33b30180919e0bad551d46a701663ce5c2c6a1ecc56587df96eff38e179e5a72dd69ed39321f7ba
c24d36cb730f3ff150c02c96f6b91e77727847cde0d1bd509eb1f6fa8db11a6481c5e601cb4cb5f8
110fa771c0ba35f571475787beadc79fe3940cccd963c991dea96c23cd29b3ee0b1e25f579460cdc
80a6c77fd7a51781aaf465fb6c853ed3ea29d9255c0aabb9e89092819268d3b867e68aaa2153e4fd
bd03087a012f42ed26fcf391a6fa9b6758f6d30778a98fb9a45d932c1cd45c0a1c9e249c86b24900
e0a3766ff5dec8dc93819302784a9078006f35b6407d58a595ad44930b19e07cc305cf1c54ee4ab7
268ef974d56b0962cea9e208dde3640e260d65d31e1e22eefa2eba0bd44e593b298d01c72a5cd1b2
23c79c4f39ba6f9b149b09393404b54a3a1e188c2708dd182a674fbb64ce24cab1a18284fe828056
59747d8873d6e9f94d69d64c2a1b61f941b31ca2ec0b344067a5cc2071955245c78871066b924657
a535a7e2e1e5d7d1a8b0bb1f415aa425476ddd32d429a482cd85d8b4de85e5f5fb6b63f0cac6257e
d464823f32440c8a37164ee53ca904ff9110d5c1390e326207950e296ed8c21fba869463b7d90866
d11c77ed9eae6e9c97314ea4278459163f53383c1b8c6879787738aef995a48d83c462aa8bbd94b4
f6c08a8750d3371145b5e9d6578e82dd73536bc2e70b9196b1ba6471fe2151116ee6cb7a856d5399
bc8105b158057a38f6d28b8c13599bb6c2744fcbde4b63fecb7862557a14c1d2846ee66bdea42ef8
1a3c20ade409ae57aad1032dedc170da31174dcb1ebaded260aeb8042519c54e2c7593924263717a
4a9182719001e674f8c5839d1ea32717596173473a0c0642ae31a36b3ecdd8697d202b7fd782a550
de70203ed783ef4809a607a3924b4afcb3d7c0400ec5c110c85e499ced3505b1849f6c3ed748b53a
c35119ab3b2afe09c6201b67ea0a70ade462768c991128b96fe41bb655491f5e4e3bdb49b6141814
5157a142d5b41d3dd0ba04570b773a5490275f9f0815c0ed0216bb17d77cf82a19ca0c56eeb12f0b
9f574ef9d2317e5c0f804e7ff0398a9c9d1b7bd8243379d6faf9e03817afddf5644be86e895c8afb
4c3031af24e9cffb62116dd89a4ace4be2c13ef95a82677de1847c180db6a1beb70e474c4c7ba780
37fad845452cabd57482685a1bb4e9d5bf90227586ea58b179b62aa76733c1db5a96
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 HBW_Copy_State <Virtual>  0
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 PID_0 PID  0
 SSC_Copy_State <Virtual>  0
 HBW_Encoders PROGRAM  0 -1
#END

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"Copy State"
#END

STR ST1
COPY 0x1 "4 0x0 MC101 C101 1 0x0 MC102 C102 1 0x0 MC103 C103 1 0x0 MC104 C104 1 0x0 MC111 C111 1 0x0 MC110 C110 1 0x0 C130 MC130 1 0x0 CT10.Acc MHR136 1"

// Rung HBW_Copy_State#2
// Offset 21
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC400 C400 1 0x0 MC401 C401 1 0x0 MC402 C402 1 0x0 MC403 C403 1 0x0 MC404 C404 1 0x0 MC405 C405 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC3 C3 1"

// Rung VGR_Copy_State#2
// Offset 23
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC400 C800 1 0x0 Y39 MI400 1 0x0 MC401 C801 1 0x0 MC402 C802 1 0x0 Y53 MI401 1 0x0 Y15 MI402 1 0x0 MC403 C803 1"

// Rung MPO_Copy_State#2
// Offset 19
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MHR1600 V3200 1 0x0 MC800 C1610 1"

// Rung SLD_Copy_State#2
// Offset 9
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 C1200 1"

// Rung SSC_Copy_State#2
// Offset 7
NOP

// Rung SSC_Copy_State#3
// Offset 8
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Mini Factory Fall 2021 Project For CS 453/454/553/554 "
"Advanced Robotics I and II<br> <br>Date 09/17/21"
#END

NOP

// Rung $Main#2
// Offset 1
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#3
// Offset 4
#BEGIN FMT_COMMENT 
"Run HBW_Encoders"
#END

STR ST1
RUN HBW_Encoders

// Rung $Main#4
// Offset 7
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#5
// Offset 10
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#6
// Offset 13
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#7
// Offset 16
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Encoders
$PRGRM HBW_Encoders

// Rung HBW_Encoders#1
// Offset 0
#BEGIN FMT_COMMENT 
"<center><FONT tsize=4>HBW X (Horizontal) Encoder "
"logic</FONT><br></center>"
#END

NOP

// Rung HBW_Encoders#2
// Offset 1
#BEGIN FMT_COMMENT 
"X Encoder Up Down Counter"
#END

STR C51
STR C50
UDCG CT10 DST511 DST511

// Rung HBW_Encoders#3
// Offset 6
#BEGIN FMT_COMMENT 
"Encoder Right. Move to Conveyor"
#END

STRPD X8
ANDN X9
STRND X8
AND X9
ORSTR
STR X8
ANDPD X9
ORSTR
STRN X8
ANDND X9
ORSTR
OUT C50

// Rung HBW_Encoders#4
// Offset 22
#BEGIN FMT_COMMENT 
"Encoder Left. Move to Storage"
#END

STRPD X9
ANDN X8
STRND X9
AND X8
ORSTR
STR X9
ANDPD X8
ORSTR
STRN X9
ANDND X8
ORSTR
OUT C51

// End of Code Block HBW_Encoders
$PGMEND HBW_Encoders

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
NOP

// Rung HBW_Program#2
// Offset 1
#BEGIN FMT_COMMENT 
"Initialization and Reset stage"
#END

SG HBW_Program.S0

// Rung HBW_Program#3
// Offset 3
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#4
// Offset 11
#BEGIN FMT_COMMENT 
"Jump to Homing Stage"
#END

STR ST1
JMP HBW_Program.S5

// Rung HBW_Program#5
// Offset 13
#BEGIN FMT_COMMENT 
"Ready Stage<br>"
#END

SG HBW_Program.S1

// Rung HBW_Program#6
// Offset 15
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#7
// Offset 23
#BEGIN FMT_COMMENT 
"Set Ready status"
#END

STR ST1
OUT C130

// Rung HBW_Program#8
// Offset 25
#BEGIN FMT_COMMENT 
"Task Send"
#END

STR C101
JMP HBW_Program.S7

// Rung HBW_Program#9
// Offset 27
#BEGIN FMT_COMMENT 
"Task Recieve"
#END

STR C102
JMP HBW_Program.S12

// Rung HBW_Program#10
// Offset 29
#BEGIN FMT_COMMENT 
"Task Reset"
#END

STR C103
JMP HBW_Program.S0

// Rung HBW_Program#11
// Offset 31
#BEGIN FMT_COMMENT 
"Manual Control"
#END

STR C104
JMP HBW_Program.S3

// Rung HBW_Program#12
// Offset 33
SG HBW_Program.S12

// Rung HBW_Program#13
// Offset 35
NOP

// Rung HBW_Program#14
// Offset 36
NOP

// Rung HBW_Program#15
// Offset 37
NOP

// Rung HBW_Program#16
// Offset 38
SG HBW_Program.S7

// Rung HBW_Program#17
// Offset 40
NOP

// Rung HBW_Program#18
// Offset 41
NOP

// Rung HBW_Program#19
// Offset 42
#BEGIN FMT_COMMENT 
"Fault State"
#END

SG HBW_Program.S2

// Rung HBW_Program#20
// Offset 44
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#21
// Offset 52
NOP

// Rung HBW_Program#22
// Offset 53
STR ST2
JMP HBW_Program.S0

// Rung HBW_Program#23
// Offset 55
#BEGIN FMT_COMMENT 
"HBW Manual Control"
#END

SG HBW_Program.S3

// Rung HBW_Program#24
// Offset 57
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#25
// Offset 65
#BEGIN FMT_COMMENT 
"Manual X PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 100 30

// Rung HBW_Program#26
// Offset 80
#BEGIN FMT_COMMENT 
"Manual X Left"
#END

STR C110
OUT Y50

// Rung HBW_Program#27
// Offset 82
#BEGIN FMT_COMMENT 
"Manual X Right"
#END

STR C111
ANDN X0
OUT Y51

// Rung HBW_Program#28
// Offset 85
STR C103
JMP HBW_Program.S0

// Rung HBW_Program#29
// Offset 87
#BEGIN FMT_COMMENT 
"<FONT tsize=4>Homing Stage</FONT>"
#END

SG HBW_Program.S5

// Rung HBW_Program#30
// Offset 89
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#31
// Offset 97
NOP

// Rung HBW_Program#32
// Offset 98
#BEGIN FMT_COMMENT 
"X Home - PWM"
#END

STRN X0
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 200 100
OUT Y51

// Rung HBW_Program#33
// Offset 114
#BEGIN FMT_COMMENT 
"Y Home - PWM"
#END

STRN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 75
OUT Y7

// Rung HBW_Program#34
// Offset 130
#BEGIN FMT_COMMENT 
"Z Home - PWM"
#END

STRN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 200 75
OUT Y5

// Rung HBW_Program#35
// Offset 146
NOP

// Rung HBW_Program#36
// Offset 147
NOP

// Rung HBW_Program#37
// Offset 148
NOP

// Rung HBW_Program#38
// Offset 149
NOP

// Rung HBW_Program#39
// Offset 150
#BEGIN FMT_COMMENT 
"Jump to Homing Reset Stage"
#END

STR X0
AND X3
JMP HBW_Program.S6

// Rung HBW_Program#40
// Offset 153
#BEGIN FMT_COMMENT 
"<FONT tsize=4>Homing Reset Stage</FONT>"
#END

SG HBW_Program.S6

// Rung HBW_Program#41
// Offset 155
#BEGIN FMT_COMMENT 
"Reset counter for X axis encoder"
#END

STR ST1
RSTCT CT10

// Rung HBW_Program#42
// Offset 157
#BEGIN FMT_COMMENT 
"Jump to Ready"
#END

STR ST1
JMP HBW_Program.S1

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
SG VGR_Program.S0

// Rung VGR_Program#2
// Offset 2
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#3
// Offset 10
STR ST1
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 100 100

// Rung VGR_Program#4
// Offset 25
STR ST1
ANDN X27
OUT Y26

// Rung VGR_Program#5
// Offset 28
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#6
// Offset 30
SG VGR_Program.S1

// Rung VGR_Program#7
// Offset 32
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#8
// Offset 40
#BEGIN FMT_COMMENT 
"Rotate CW<br>"
#END

STR C400
JMP VGR_Program.S2

// Rung VGR_Program#9
// Offset 42
#BEGIN FMT_COMMENT 
"Rotate CCW"
#END

STR C401
JMP VGR_Program.S3

// Rung VGR_Program#10
// Offset 44
#BEGIN FMT_COMMENT 
"Move Up"
#END

STR C402
JMP VGR_Program.S4

// Rung VGR_Program#11
// Offset 46
#BEGIN FMT_COMMENT 
"Move Down"
#END

STR C403
JMP VGR_Program.S5

// Rung VGR_Program#12
// Offset 48
#BEGIN FMT_COMMENT 
"Move forward"
#END

STR C404
JMP VGR_Program.S6

// Rung VGR_Program#13
// Offset 50
#BEGIN FMT_COMMENT 
"Move Backward"
#END

STR C405
JMP VGR_Program.S7

// Rung VGR_Program#14
// Offset 52
STR C406
JMP VGR_Program.S8

// Rung VGR_Program#15
// Offset 54
STR C407
JMP VGR_Program.S9

// Rung VGR_Program#16
// Offset 56
SG VGR_Program.S2

// Rung VGR_Program#17
// Offset 58
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#18
// Offset 66
STR ST1
ANDN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y26

// Rung VGR_Program#19
// Offset 83
STRND C400
JMP VGR_Program.S1

// Rung VGR_Program#20
// Offset 86
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#21
// Offset 88
SG VGR_Program.S3

// Rung VGR_Program#22
// Offset 90
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#23
// Offset 98
STR ST1
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y27

// Rung VGR_Program#24
// Offset 114
STRND C401
JMP VGR_Program.S1

// Rung VGR_Program#25
// Offset 117
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#26
// Offset 119
SG VGR_Program.S4

// Rung VGR_Program#27
// Offset 121
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#28
// Offset 129
STR ST1
ANDN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y22

// Rung VGR_Program#29
// Offset 146
STRND C402
JMP VGR_Program.S1

// Rung VGR_Program#30
// Offset 149
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#31
// Offset 151
SG VGR_Program.S5

// Rung VGR_Program#32
// Offset 153
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#33
// Offset 161
STR ST1
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y23

// Rung VGR_Program#34
// Offset 177
STRND C403
JMP VGR_Program.S1

// Rung VGR_Program#35
// Offset 180
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#36
// Offset 182
SG VGR_Program.S6

// Rung VGR_Program#37
// Offset 184
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#38
// Offset 192
STR ST1
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 50
OUT Y25

// Rung VGR_Program#39
// Offset 208
STRND C404
JMP VGR_Program.S1

// Rung VGR_Program#40
// Offset 211
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#41
// Offset 213
SG VGR_Program.S7

// Rung VGR_Program#42
// Offset 215
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#43
// Offset 223
STR ST1
ANDN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 100
OUT Y24

// Rung VGR_Program#44
// Offset 240
STRND C405
JMP VGR_Program.S1

// Rung VGR_Program#45
// Offset 243
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#46
// Offset 245
SG VGR_Program.S8

// Rung VGR_Program#47
// Offset 247
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#48
// Offset 255
STR ST1
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 100 15
OUT Y53

// Rung VGR_Program#49
// Offset 271
STRND C406
JMP VGR_Program.S1

// Rung VGR_Program#50
// Offset 274
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#51
// Offset 276
SG VGR_Program.S9

// Rung VGR_Program#52
// Offset 278
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#53
// Offset 286
STR ST1
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 200 70
OUT Y15

// Rung VGR_Program#54
// Offset 302
STRND C407
JMP VGR_Program.S1

// Rung VGR_Program#55
// Offset 305
STR C3
JMP VGR_Program.S0

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"This first stage currently sends the crane back to the "
"turn table, resets the compressor, and resets out detection "
"bit. Once it is sent back to the turn table it jumps to "
"stage 1"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STRN X16
OUT Y15

// Rung MPO_Program#4
// Offset 12
STR ST1
RST Y17

// Rung MPO_Program#5
// Offset 14
STR ST1
RST Y18

// Rung MPO_Program#6
// Offset 16
STR ST1
RST C1000

// Rung MPO_Program#7
// Offset 18
STRN X12
OUT Y46

// Rung MPO_Program#8
// Offset 20
STR X16
JMP MPO_Program.S2

// Rung MPO_Program#9
// Offset 22
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 24
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 32
#BEGIN FMT_COMMENT 
"Always be Detecting if we have something, if we get "
"something set C1000 on"
#END

STRND X24
SET C1000

// Rung MPO_Program#12
// Offset 35
#BEGIN FMT_COMMENT 
"If we have something (C1000) and we get a go from Doug "
"(C800), start by turning on the compressor"
#END

STR C1000
AND C800
SET Y17

// Rung MPO_Program#13
// Offset 38
#BEGIN FMT_COMMENT 
"If the compressor is on, and we are outside the oven, open "
"the door"
#END

STR Y17
AND X18
SET Y20

// Rung MPO_Program#14
// Offset 41
#BEGIN FMT_COMMENT 
"If the Oven Door is Open, and we are not all the way "
"inside, move the loading tray inside"
#END

STR Y20
ANDN X17
AND C800
OUT Y44

// Rung MPO_Program#15
// Offset 45
STR C801
OUT Y52

// Rung MPO_Program#16
// Offset 47
STR C802
OUT Y44

// Rung MPO_Program#17
// Offset 49
STR C803
JMP MPO_Program.S0

// Rung MPO_Program#18
// Offset 51
NOP

// Rung MPO_Program#19
// Offset 52
SG MPO_Program.S2

// Rung MPO_Program#20
// Offset 54
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#21
// Offset 62
#BEGIN FMT_COMMENT 
"If we have detected something at the oven (c800), are not "
"already at the oven (X19), and the vacuum is not on [Which "
"means we do not have anything] (Y18), move crane towards "
"oven (Y53)"
#END

STRN X19
AND C800
ANDN Y18
OUT Y53

// Rung MPO_Program#22
// Offset 66
#BEGIN FMT_COMMENT 
"When we first reach the oven (X19), turn on the compressor(Y17)"
#END

STRPD X19
SET Y17

// Rung MPO_Program#23
// Offset 69
#BEGIN FMT_COMMENT 
"When we reach the oven (X19) go down, and come back up "
"after 3 seconds"
#END

STRPD X19
OFFDTMR T0 3000 Y19

// Rung MPO_Program#24
// Offset 74
#BEGIN FMT_COMMENT 
"Turn on the vacuum in order to pick up disk, before the "
"timer turns the crane down bit off. #TODO finish comment "
"here"
#END

STRLE T0.Acc 750
AND T0.Timing
SET Y18

// Rung MPO_Program#25
// Offset 80
STRPD T0.Done
AND X19
JMP MPO_Program.S3

// Rung MPO_Program#26
// Offset 84
STR C803
JMP MPO_Program.S0

// Rung MPO_Program#27
// Offset 86
SG MPO_Program.S3

// Rung MPO_Program#28
// Offset 88
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#29
// Offset 96
#BEGIN FMT_COMMENT 
"When the vacuum is on [which means we have something] "
"(Y18), we are done timing (T0.Done), and we are not at the "
"turn table position (X16) then run the crane over to the "
"turn table position(Y15)"
#END

STR Y18
ANDN X16
OUT Y15

// Rung MPO_Program#30
// Offset 99
#BEGIN FMT_COMMENT 
"When we turn off the vacuum(Y18) and are at the turntable "
"positon(X16), jump to the next stage"
#END

STRPD X16
OFFDTMR T1 3000 Y19

// Rung MPO_Program#31
// Offset 104
STRLE T1.Acc 750
AND T1.Timing
RST Y18

// Rung MPO_Program#32
// Offset 110
STR X16
ANDPD T1.Done
JMP MPO_Program.S4

// Rung MPO_Program#33
// Offset 114
#BEGIN FMT_COMMENT 
"This is the reset button"
#END

STR C803
JMP MPO_Program.S0

// Rung MPO_Program#34
// Offset 116
SG MPO_Program.S4

// Rung MPO_Program#35
// Offset 118
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#36
// Offset 126
STRN X15
AND C800
OUT Y45

// Rung MPO_Program#37
// Offset 129
STRPD X15
OFFDTMR T2 3000 Y43

// Rung MPO_Program#38
// Offset 134
STR X15
ANDPD T2.Done
ANDN X13
JMP MPO_Program.S5

// Rung MPO_Program#39
// Offset 139
STR C803
JMP MPO_Program.S0

// Rung MPO_Program#40
// Offset 141
SG MPO_Program.S5

// Rung MPO_Program#41
// Offset 143
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#42
// Offset 151
STR C800
ANDN X13
OUT Y45

// Rung MPO_Program#43
// Offset 154
STRPD X13
SET Y18

// Rung MPO_Program#44
// Offset 157
STRPD X13
OFFDTMR T4 2000 Y21

// Rung MPO_Program#45
// Offset 162
NOP

// Rung MPO_Program#46
// Offset 163
STR C803
JMP MPO_Program.S0

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"State 0: Listen for Doug's instruction to start module."
#END

SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
#BEGIN FMT_COMMENT 
"Am planning to add a button to jump to a state where there "
"is a test suite. To run conveyor, and ejectors<br> <br>"
"For now, goes automatically to state 1."
#END

STR ST1
JMP SLD_Program.S1

// Rung SLD_Program#4
// Offset 12
SG SLD_Program.S1

// Rung SLD_Program#5
// Offset 14
#BEGIN FMT_COMMENT 
"When the light barrier is broken, turns on timer to run "
"conveyor belt with disk until the middle of color sensor."
#END

STR ST1
ANDND X35
OFFDTMR T200 3000 C1600

// Rung SLD_Program#6
// Offset 20
#BEGIN FMT_COMMENT 
"C1600 is set to true when timer is running so the conveyor moves"
#END

STR C1600
OUT Y30

// Rung SLD_Program#7
// Offset 22
#BEGIN FMT_COMMENT 
"When the timer is done, move to stage 2."
#END

STR T200.Done
JMP SLD_Program.S2

// Rung SLD_Program#8
// Offset 24
NOP

// Rung SLD_Program#9
// Offset 25
SG SLD_Program.S2

// Rung SLD_Program#10
// Offset 27
#BEGIN FMT_COMMENT 
"State 2 is where color is determined by checking if the "
"analog value is within a range, and conveyor timer distance "
"is set based on color.<br> <br>"
"Need to integrate a counter here still."
#END

NOP

// Rung SLD_Program#11
// Offset 28
#BEGIN FMT_COMMENT 
"Subscrib is to get value from color sensor and convert it "
"to something the HMI understands.<br> <br>Need help with HMI"
#END

STR ST1
SUBSCRIB "4 WX0 V3200 1 0x4"

// Rung SLD_Program#12
// Offset 33
#BEGIN FMT_COMMENT 
"The disk should now be in the center of the color sensor. "
"This function checks if the color of the disk is in the "
"blue range. If so, sets boolean value C1601 to true."
#END

STR ST1
RANGECHECK V3200 0x1 23000 22000 C1601

// Rung SLD_Program#13
// Offset 38
STR ST1
RANGECHECK V3200 0x1 20500 19500 C1602

// Rung SLD_Program#14
// Offset 43
STR ST1
RANGECHECK V3200 0x1 16000 15000 C1603

// Rung SLD_Program#15
// Offset 48
#BEGIN FMT_COMMENT 
"If C1601 is true, Off Delay timer starts output is set to "
"C1604 which when true runs Y30 for timer length."
#END

STR C1601
OFFDTMR T201 3000 C1604

// Rung SLD_Program#16
// Offset 52
#BEGIN FMT_COMMENT 
"When C1604 is true, turn on conveyor."
#END

STR C1604
OUT Y30

// Rung SLD_Program#17
// Offset 54
STR C1602
OFFDTMR T202 2000 C1605

// Rung SLD_Program#18
// Offset 58
STR C1605
OUT Y30

// Rung SLD_Program#19
// Offset 60
STR C1603
OFFDTMR T203 1000 C1606

// Rung SLD_Program#20
// Offset 64
STR C1606
OUT Y30

// Rung SLD_Program#21
// Offset 66
STR T201.Done
JMP SLD_Program.S3

// Rung SLD_Program#22
// Offset 68
NOP

// Rung SLD_Program#23
// Offset 69
SG SLD_Program.S3

// Rung SLD_Program#24
// Offset 71
NOP

// Rung SLD_Program#25
// Offset 72
STRND X36
OFFDTMR T204 5000 C1611

// Rung SLD_Program#26
// Offset 77
STR C1611
OUT Y34

// Rung SLD_Program#27
// Offset 79
STR T204.Done
JMP SLD_Program.S1

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STRN X40
OUT Y36

// Rung SSC_Program#4
// Offset 12
STRN X41
OUT Y38

// Rung SSC_Program#5
// Offset 14
STR X40
AND X41
JMP SSC_Program.S1

// Rung SSC_Program#6
// Offset 17
SG SSC_Program.S1

// Rung SSC_Program#7
// Offset 19
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#8
// Offset 27
STR C1200
OUT Y36

// End of Code Block SSC_Program
$PGMEND SSC_Program

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierOv en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInle t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierWh ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBlu e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOut sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBelt _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
#END

