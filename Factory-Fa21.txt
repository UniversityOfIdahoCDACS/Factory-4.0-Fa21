// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\njost\OneDrive\Documents\Factory-4.0-Fa21\Factory-Fa21.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
8287da9e707bfe6dc4b486991eb171bb67bfeb9d46d5892d80aaab398175d378aa73f7cfba22fe22
6a783bbf1a3c592656c3fb6aa20f0dac8580bd1ce0ddc19d83caf00e98f43af37fab067c8dfdaf71
147a6045f651e8d9223ca8f492d9fceb6a10d5b6c8a3190ddca16cbb7492cb8605a6f5e45ac1e1d1
7cd0075daa7aae7c4003844609e86b1e392a14569f030d20260e087006f60c9a09c01dcee867503a
797745c9e6e80f4ffec3d3a6eddb45e571047d031ba524d402459d5d39f85e402c05408889af9336
857aaceda11e4f5ad2138424055ab0f864416cb8326e621d0953e963eafc76ceb824f1a9c0e16707
6baabd230cde5be685db0ecb51b5f722fdd27442553017fd0be82401c283e0b137108f50a1fe4f15
fb595e1452d8fac1398b2f960a36c56216fd41aab83964424758b115453b89281fcef9bd0ed69b33
f41b926173edadcad08ec884cf0e18e4bae9ce70845f49315477840f6bf949ba851968016abd4a25
965660e85f2f125d7a3a365cd083ba1505ebcfe80d4961dc9d02570a5eded6282562a3200a9e167d
7090f5d18bf95eff5a8581f87180240d6062fd55b74bb248d322d3a5842a1c962abc045a214c6473
c8a469f2eee1df214a85d7fdcae596cd9d847a77da3575626e8fbd8671c6f4de772ef1c6547a6a89
6a1b2291aa69a6dfd071478dfa693433e3b12a946d4cad860130a2096c84589bd0f2ba5da9fca9ea
c5891327894463fac2096178f17138d88b57f4449ab5fa5d9aac0db90acb3a690baccbaa8270e932
34dfa2230dadd9cebfa77d12cf112b99936bba9e62c9f64fa1502ddd714e407c621c8d79aca9cd01
d2ea9ac0762d1b04db21a5586ad06b4f388729975cebd1a8f3c92d1cb44e1b61af5e17c3caded3ae
54ff0423bdf3dcfb2b5d70249ddb45714eb011af90f31842fba90a5e988abf3a1b8084715779f655
22e478aac07d758c8374cb0be583ed4ba070c8cce20583d6e8dcdf4932806f1cbb251e978eb73431
4e9c2d93e12f6aee5d7c652359f0feda3cbdc7ed0c622c46c5c2a14069b3ab78a92d3fb551ebff6d
98b68cb3564e06f6481ee5f9f8cb9184a89d0ae4db2fb86980f5614a6f5063d9546cb9f9b4c0e7ae
e9094f1efac7ea4d4d10325dcf6fdb6c89ddede6d70d4f12f00c4fa82ef8c361969ac2483a0591eb
117fcc6ff1e51fa7c30e6ebba99e1c90df86dd570c6a7d77b9ade818b35e7488184a4de6cd6b1875
ac6b1fce09cd06bfd026e5a5b099b7e0c55b2d48f2a9334926d4da845a8310cab8b86c8f31a28a55
0bc2de9878fad989fa022d54a13b3d2b9ca14fac7503139206d1d0e8e37b57652fc7427eb06beadb
ba78a4060e7a9cdb6776b86267a57a4af835079197995ea47482dcb37f8c66cc1e8a498361591daa
71a977ec0291348db2073aae668185a71a9c2090bff67bacdebf82dcda03c2d8b34c97e91583f466
8dbdb5f00b2915f36e4e819052fc5e3a972e1513fd55260c73692777c4c20f11e9ee192039349b53
ea3926b16e7bce2395113033178edfcf32e0556739e43985e816f2b8aa0e6a4c0ed7672577ed4c5a
14290449758ca2d96e63944184d671184850ef2e063231671f7307f0f2e4fcf0364316e74eb4efea
22c400c32e878d5b3b2b696d1934618ff2782cdd7c2c0970f31fedf1d125e8e5751a9e67df0642c5
f2c3c29355ba742bd96838598f358d62f90eb84cbbd006690b21b0feca5e81edb09fc5f124e0cdb3
87a7036a2c8f75792d24021aab31b920bb4aef68587a71c841b827403a82bba7d1bf15f49645a3e1
3ee3a0b551274ba9767aee884add3035c87c1402376be680e9fa9a783f61f63d45f233391f07342b
9273146ed6e960f094c01a474da8e845ff873ea6151cd2cf265d3a282b5989df3c10bbcfe21435a3
9f276451e09fab92960efd043a69f550de81514c413d98598238be193f8048de887f46a64569c286
033bf3b9f1bc973d0e7430a6962cc8c8a070cae226411c6107408b51f17fab6a30cda542471d0212
875475cb35e562d2250b37d8a50e3ee2631d5074bf634b8a9c8972fd5ace6ecb78f667d116698b43
b14247262cd20baa84c6dc6af59f98c09ebd15c61a134662fbe5acec6ed66a48893017110bc1309b
0ba07a68f936013659999ac0950309555636e6b08decaaeb9e9936fd8a7124126c6a203c4223ebd1
e04473befbd87be667426a6634747a1cddd78791a78f92b9f53acd4ea070d936f43421635440bb53
93176fd51b17bdb937c4da7c38a1c80e3d10106a21172acf666f6d5f08739e6245e503652a86dcc3
f1c4983f0f423e7de559515771529b7597363bf0011c2045896af1ab75bac92b94f0a92ccddcc668
25a2030d97acc5945839ad6807c70834ddf1a8326898c3c061e6c7e89951658064c50a187a9247bd
0cffa754ad9afb7e6e0750321c01e7d959dbe852c53b3b26dd7923501f6288e530c17a84de08dffc
df7b80add42c5e9c0fec9407fcdd001156b52795c1076cba6a70ba4e520da583989516eca123a0d9
2db62e7b790226f5d24b0edbbab5aa1308c5acbd2f86185dad64091db2f8ce84e04c6673cb242c04
7bcdc895fb909fa099802ddec0541089e09eaca1a2d893a5ad264329cf9cf9c1e4378de8b097cd1d
371a3f2c9eabe35207042ab90c7d87a7c294bbc736d4228409881e3d9cc824c6670695295d0bc872
1de28847a1a5442f704009e8157d8f9826b2a2b6cd487afb4f2c9c17b3f1c665dc33cb330da6dc7f
3a6241d772ca189dea8dd29cbd8255d9783462f37d81fb0f586f860b1a09e10b3a82423d44b37876
c57467116af3f439f0e63da721c9a7a44998c3a1f19716755aeb6140b5fdd54a46c39311df5069f1
b0ee60a600de915d3a30790777904e679017e856b471acbe1d62028dd47894faa5b2e93a2c76008f
4a6c50ce029724f4fbdc5af956032e45121a1c65bf1f7aa98821ad58936ab745873c149277ee2667
461435d4a3803767ab757886af3f0360b97addc96b2947ef214e392db874eff2f42ffefa6c6f8716
92b784bddf29cd41061c87f4afed8bc9672da3e34d9689eb8f9bd172b4b052308c615ae15f4e0659
b34626308028aef83796a4f8d16297412c019e69350aeba7a3898e191fefc0fab2b44ccad75a4825
57bce5718f00f8ba4b904de8a6b686dacc05f523123311e45aa261388bb3a54c48982b904ea0a643
5bbbbe65ca57850dbd697e03ae40156e021098c26a22f29ff7f42d351d9e3402c9d563074c1e86b5
e98b78b1330f07b64342265266fdca1e5108bfb51945313440a4f345c8a3ed205e57b9901218ba27
a2a72de6477966361971b03434b849655f23d3d43bdb7f77471b2f71fcc4558b8cc655a7f025be14
ee1209c64f1f462aa35c8258d7c9fecbd5b8c43e3c244243696e284bfcec4e353666cb0931f4042b
11f93b2d1c9084079b8ec6a029a5dd8da0f6f019a1f15cd1a8b10b5c835bf06aa308b8d3bf18d5d6
fd1e57dba2f722090c6ea9c2fce7d7d1a15051a78db99711ee7031db0744f2c5a331c298309be9d7
79e4b680b5ba502a7448da77b0cfcc1593ec3312648e18abe0f6e0a17e6c6c353cafe0da850e568c
e92d9f60966e40085ec734ea89839c14c2f8192375c84f8fcdb63595907c0c96904eedfa215b7a27
fa1c0b9e0139cc8adb0b1f60f31f1b9e5e75b67f87f27c3475aab82c946b6287269a9122f3965220
dd77f0ed94848dfb544cb91b18f85975ff675043fd7009162c70af77dc7960eb5b305cfb3764f0ed
17295dd4e53ba15600cb50e32c869a6197002e6630e7b403510e2619c26284bee855e5f58bf073d3
56baaa8c6512d6a4589a74093411ed1ed2c05ff0e0f634cbf39bda70ec6df78259d3cfc7be29b112
05eb29b698d0862fdcd22a8a0ea5f2c3ad3ed256f850aa9ccaa7cfa1e732ba74de22d5f966e6bcfc
6b20e0f26dc28a9c76108271ab01eaf561a1521d1f05e2d723e1188c1e516b4c4668eb71ec47b29e
0383d9991d56e6f46bc4a4f223d8ae091901b38a471a00f81d11e2efdec7e910d2012f6731d82b9d
c996be61b60cc10ec7ef6292568ca7a2c000bb31b329b41fe905b0389a2a0b18ecb8e7cff02b8b34
d58bdc81ae17b023308839b26adb64c781725ecfafe713946b5c74010c135d56943943d21726eb42
5545739b68cfeddc5260221da9d4c7db3e985312d6334980dac9f8a0037607c8a2d8b4990f06db15
8c2128061979196f0a979a3791b8062bf1f21d7df2c775831d6ed907ed18957764f0ae0f9391d990
a8b178dc79c6fe6776065139d5d137da35da98c91e0ab388ce73e757404930ed3c63b6325f7262dd
725036513d2fdcfed7fad6e8421f5e5c7473f926279e9133854ffce5a0ad10ac255c4d7798f4e615
cf64efdffc799838444d3e9cf4880a5cc7bcfa72a10191d447fc177b642a3fb05540b4b64f83b0fe
d3aa9da874d4c223746e543fd4ec85c46e32c02bfade20b9aba8c65cf2498d4470b6a5bdaac32df0
9c09143c8d15de99877ddc1c47f437d49b772b531566f7718cbc4c14ada53f90441f52d1b953395e
664a3ce0055d1a3a2c27869ff44ecde4800174a527cfd712165fbfd12424bd9a09d1761046d618e8
92e4b15ea66552c1194df3cd1fc3b59f9eebc887b83d28eccc984fe681ed6815c6faa34810af5c22
3b2cbc030ecb495f789f609e516efd1606c96697c41dd3820cbf11095072fd00a1e778b97f44f9b5
deb8110b575ff2ec9676ab7bec8c60f381566f860df191d88bae22096d2f9ad058b7d51cd72a0a60
eb62fc006029ca8c7ff5501d5f3e6474ddff906cf957263f3e550f4fa723e21dc380327005a197c0
97c994b572de49acb0972d59b209ee012bd1670e068cbc52b400512b56f3eea65a6035dab03b04b1
3e8f51407cf83d793a8e4fb82a31fdcb9e711b2479d3ea8e8224ebffbc30b2aaf072317b87b9ec03
69e2dd68eb57169f859179771b95bbd8cad6db6dbb49f8435d9a46e5ace2c2fdfe20b99f386efad8
f6b5c910bd8bde27d0b400c9f903477d9096e0cf4602e1b7222660bd79e69d62937c6ae144299def
0409f9151b326c2769c9cd6830dfde6c500510613cd129fc04edcbbcc14e93eb64ea3615fc8d0387
e7ba651a5a7294844ae438014576a83f01ac41873cfd09177f7d0752e60c2971ccb7aebcf0d143ce
10b3f11f8edfc7ca66457b455cf0288fc42fd7ede8e2bcdb7ad1b812850473ee045356ec46199177
d9a55aef80ffc701e9ec4a4eb79325c86a3465ab5e81094ad2965310a26bcc17e8da2f09f7f65149
d306a1148590333340f8a8ad2f45c3e2651ef02a36ff4512f9b93004c415b6f19b98430fb68bf6f5
edc557cd36d9904023f9103cd5007e105964b9643c31e9a144a051d439d144572447b4bd0e9b792b
452c282fea15733c10846511b41c29035b83ebee518ab9b111eb0d9d189da1b3a746c361b50e45ec
243bae2e6ea8b748d0127dcb1adf10e7acc25793849c16f70432760e9283c2b3f043eaa913b43c2c
0d4a3a20a0fd706e8428467ccb501630b2f1e1995ae5d7dcd34d58f4274fde553503cf90c17dcd04
15a14dda51c4ae83ec3661e1fe7eb203bcff56a6bbbd89e7d7ab12b7833a84be7c80e868f8a8dc03
d733bbb356fba375530940166a9545337148562fe5643cb105cf2f2a94f602a5b0a37c19cc8883ca
a3bdd4c75d09036f4da759e150ac60487c666343acc06d66e71cd0a7266235efd16352e1da642395
d569df265c12c925cdff4b485bb9c3398742034ec105e7594f72bbc1e528c0f68c06e08126464fc2
2321b8dd9f1c6adb84b2df49753c36576930de9b1404233afee04a0e05c2d2bdd867e0ac6abc31bd
d87cabab436f7fa7edcd01e2770e8b0a1e072c8f87593cdd59f1291fac5578280f13e4917ba4005a
c3103e47cf44164b9f0baa70150cfbdfc9224208e339172346a3d7e5ffaded15c8b4b24a26043a61
3c7e27ae2ef410b2fa9bcd38814545ac14c3b5e4bcded651b30ea476bf4162a6f2bcca7c414201fd
205ddf2a42c1ad7efeffc99cf1ee1509a7f24841cae516a64704997f3096770105debd0718409655
6a795eb6bebfd95e3561a769a62307573ca95ed9f0012a15f0a25680fa404153eaca4beec44196b6
2c1fc6db56409c2aed3a7a032b4b704aa2068766514752a094c9f255068c8ba04626fece5fa313cc
6b960e3b7894bb05cfc2a5e10ea906ae8bc9c19d075b6633397b79e81e1329755e18602af0bdc758
7a127bedcc6c8042b2a8561c8d286254c438b72602cf0af118243aa6141bdf67634dcc65ec880d16
f78ea13f7d26559adaa4d1c7579c474500f05fb21899f02586e67278c567070004ba57aaf281f6c5
3f45e258c85c7a9f4965cc35998c020788afebd54b3936604a9232119a122a7a0b4990ea1f39a962
39a4f1a6e92911d4e308bbcd1029174ba5671c9001506fd866fd3e280df6a7795c00231c42be8929
c174d5951748776b06bf32022c9f0b72464a3996f40274ae6ea6e6cf58d1a71e03f95cb643cd7e72
c98257583ed0fccffa1d744e1d5553f28c6373a4e44cf7c856148f545d18b340cad0d341223d775a
c38bdd224fdd3f810451b30c25a8c8f2e1a03a1953431b07995c71a865523b69e94fc5aaa4310f91
c8fe8d4e7a9f17bd326269727f2731753b073912b041a41bae4191066fe919b459f39b079697a1b3
ef18df7e7cde2c6fc9ed813c4a4eb5c449ed3c02b84b390acc9774a3347b8ae027ed3c2c2c6d7451
90ebaa46ee1dea2fd80bc9dffb1e9b82f31f9289ec21227f0783cc0bb392d6e02435fc8596d2f733
d62afbdbaa4b71d24454da8165b80732f11da178cc8a197d6bc9f70002015a29a60be2ab835be05e
f8ae97a8c7e1edaa58a6bc4bfe56b2da3f6bdbb563452fa91127cd79445bca5cdd7655cd42f5306f
18ad0757197a4528dc484f8fcd107c37d74a8bf06036880e64341efc3ae07076d4242f1942249794
faddbe0b2535b01953e4970d41befdbfdd30233fc10ac65482d26111b982adcd4ded9d6c44105686
9d62fde743d766a82a01341e3e05e95bcce2ebedb86f1b11f3fca30cdac9b7b3cf4d32db63faab52
386ce7eb4d371ed3fe69f400a5ab7f31f3bce31fbd9d2bc80ea93401e3a3402d20445a2c2974aa86
fb475c1a2a1aa3c98f7deefe68b3c53737def6054c7aedf915aa6555b328b8b2352c2cbcd9d17f9d
e216061655bd49a9843ba5f1abca1134e35dd368045cb402044cbfa5c2cdd403fa9a1233979bd9a6
c59f0dd77b07c2e1c02c2d2b272b3473b95afc1dd818a06b289ebcdbcfcad22cddf133364f5139d2
bb4d574c245001e033fe49bd830e1f145928d87739710cf2c801ccb0895b3988ca65cf38fcce7fe8
3ed801fe2205c89b10ed5b43daa571b995d89dab1a713452aa6185ce6528511cab811b3b086945cf
f01756684ab52c32662c41d52abb79c663b5df8214978db019d518d905483846c65aa7c2701a9a21
f474d4902a2a60fbca821a0709ad2dc539608bad59cf824e11f4786ffc8b48ad2b6179f00c162fe0
850bcad31a57de0aa6c32a49691f067bfcd3787d2831663ba4dcf3b7688cfe47376d95f64191b6a7
49613860e3a17b0276ba6294b27de9df57b1712b56f388007c472e09d68657849246d10200993544
a7d965dc31164ee2c8cb95d99ee2d0930770a1b52e224a8e18613d9b9a8d73290f7d45ab72b8355f
b4089f1e0268681d98b2e08cfe867e0cc2bc71021d24238868f10426611cba05289533630c1238aa
1b14dd3e1ce9ce5dd04d0276c7b3eed576a9240628d70a0aa72459932a6a9e77f3e33bf049fa0735
d30a8492d8f6a0a80db9ae41ea411b450204544f7f7972c9a77aa7d687da771821a05e29db66ef5d
4ea71dcbb2092be9558365bb91d80baf8bd58dbf5f0d6e092bce5ae6ef1c74124a6610183c8af1b5
9f9b58167d2595936feeffc53f7f6e682b50212fa3f562e346443d584acbfe5a9739c8f0469053d0
236457659b98d89655ef6e938d7321db4537b355f08c9a67f27bb5ee0c140b5e3cd44af85a9647b2
bc4622661da19cf62bab87d84555dc37684562d5afe842f00bc1247b726826355312c5f4d2a5f1a3
e07abdb534da54cf9df7b5e9bba8cc7d84be4bf395b5156a77092952d916156d5cac2049a661a34b
c083c98c7e3cd108669d27590a0ea9ffba9156d895f7d7aabee9a2088967724a081c74c4faa81ad1
911af2d8dc833cef45f8bcf738cd099e12471124f44993ccfc64e803111ff591fd099098c5dd29f3
04bf6ab247d3989705e85c2ecdfec87fa4360233e3028bacdf41d5d27424f0590eda977f1eca1f9a
c88a7ca43994f0c48ecc038f9e17e48d38248b79a0a78425de376ff1acc0b2f743aa18b24aa428b8
55d6b9561efe3d18280a5016cfa653bb162324f889444fcaeb6be0a2d3dbafd36b0cd6468b3c8d94
9bdbe68cbe19530f2e2a7342684eea6ebb45e1dcb72741eb3785c21911003d51572c24612744ac7b
28481aac296b0f8309b0a34afd4041175872a24b5cdcc1b527823250d0219bd596d23276af783aaf
de036183f63584ffa6880b39c6bdee3b2e1dfc458179508df615b516911a479b1ffde0d89f53a557
c3c9829bd510a66582e819c1742659b8c794bb82bae75656cebd5ef7f22ff2d76de1e81a9cfbf022
4664dd7321540fd3baffba4b9ff5b78a3872a7ba249852a5d08c3962d0f23c918bb0f47daa24e610
7959cc8c8f50f6fd814586a1a1a2611ae54af79cf5bf4eb707e194462e8b14e27dd0f2d8d904a331
567d0cf2c470588799d9556394ca60182288b58c8c358df1a05f45b8d735f802bfaed60e7c50fdd7
9457802812accddb64f2319efafe5e290fea5021e38a9c7603f64188dc12aed41cba55d955d742bd
eff4587231b35a7c5acd0691587afd92941be412fa09079fa67da1344998863a8aa10018eec1089b
82005c64139a2fe126585cedf35652979a6a273d23a2f65cd25a21388107aa2780ee2bae5019d917
a5a48dcf871b779b0d52d9447d29082d15bf0f238c5405621b9a63b16199d0dac3bfeb3762dc415c
0ed4ccfe9f38f31a00c9176a595ed06e9108e5912b079b312668f55799962758668f483e005fbac0
b29ff4efe4f73ecb038102f9e9220e9dc46dbda7b814855873aa9f6e5eedf779c642c8c7a222fd59
5a85e1d172933e33d5e887193030d3a3221342a88fce0ceb0a84363d30951bad0d02e4cb4cb0ff84
8a7add8758e673d42897391f77f9cb14b346ee91591243e7063566f30de6a7a9287660045d2163e0
f944329b9e692edf8ceeab82d539dd4ed07ee03c246244d328c05fad2fd6964d99b87749becc9795
5d9064b320e8e70fcabad2788c9b5911d201d18109fa69fada743ccbc479fe4ceb53080d48672420
49bffa7a696244d089297b984d09b6b26f786bfa7142531c649cd27c1b523a12dda8d9a89248be39
a35a4e73fc8521e94e869ab11e9257ec936a9a86fd702fc4c9384fbc59880b18e4722ba058d3c5ba
8acc5c31d5e8d27065d408d7c4c3897ecac8bb8964acc21a488210e9cb58a0d52fd7770b9e446727
1b81c297c53466ccaaa78db1c367d66e5d5fbb451cab84985c23d13e69ff97b1d69c3c6579887b4a
59c793ca1f596a42b01c057a365b656e222489ab1e22175a09d0483e3a4f5827328d63d4f90d49ba
42b21e02a290812e232f46eed9a27d6ef6ff56f300525eaea22885511da917b3eb3ce58e5cf83cd8
2b13af341adcf8a364a06fddf0aea9542a038bb8162c51b973279348832d00d61f44a54013c95c15
a11a416a2b1f6d7d03a7f14ac6d1f39cfe75058bc0a579d6cfe027593e7a9e33b3a04cdad3dfe042
8d5b3ecd803d733f0b3295158ee52855a8b9793cbd019a3e2a57835bf966d248292ff3e1865a466e
e904735113c1ad0a3447d7f54a39fb7430404ebc6c961e2a0eeab269c94e3a910861e5ab5bad931b
601f2c2c89e75eebbf5cf0e681a4e97494f85c1f1cc41d65a87069b559deaa8fe9916a9140ed7f12
cd40ac076e48e5171e5c1de7d13d463f0361b2bab756a9396cedc5845f9242064e7e6d496a3beed5
607192825590cc663fefa9e1ad1872c3983c1a67f04a647480ba7f08bb422ee2679ca74de7680aa2
097ca9c20155f582204e95456c540d5704e5c41721de72358150150895c2657f20f9d4e26c89b480
f7552a64cd4107f032fdbe5128b3c93cdf924026944b60d2f632cbad3b1b75a265d2c37ae5da3664
f997da4925ae09f5f0cd4f76927f8805b772d3d10a548413fa721e091bcf74fb8c13694b2f390822
f51f2f779e7ccd0acd2045ff251c48f47220d4311960c87d86b0e8163d02ab992015ace051f53b69
f81784c5305b15235d11005899a635e9d60af2de1aee11fcb2a5f8bbcb909d5e9376c29d996c6916
8de70493ddfe75cc3945eda05fd90fc85f4eb74422d287249a39d417897aa35341d7f97d79e643a7
b2b6e1e73b16cfb295dc6d7a74250bee247e9d38f34a8bd0bd283e7dfd1c73530d098c123b30ef2d
22070d7812a32b1c8e9f4ef6526ad0c5a1281bdc8353efef83ee5fa383d3a509b0f843b067648ba9
6a4431f5db2536b3ff40f68fb816d603a2255efa4bc116ca1f8e92c8e5265f05f7ec314e141d41a4
77f878d93ef815d2a78213820dd41cc9afe8c5e285a972aaff3a749e4a48a768b3b823072e43a456
9506b8f5bb48168fda0e5296a657fe396d05242c0b913c3577d96b1ca07591aaae18aec1dd64d7a1
c1f16df7197a0ede49e641fc3fa1c32f20e02de2f3e0a34de1735444671727b547ad80d7de335c18
0cf88997e79a823451d014310ac5c79fb587726436c2369ebbca68879579d7f7cdc4595c08a981b4
630d92add32034007e0dff56b8633e3a88b98dd585d0fe7f75033900c260cc23dcc9c4d636fe2a39
2b3b5db230bc7af6b39698b4c8625e8be0e010113b278f56ce1c036c58550332b37e00723ccb6d80
e4e45062ea24e3a6a02f12ce9fd9457ac99ebad052493cd5541fe40d8c5e864b3930289bb901eba9
6431c711cfe8e69217711e0efb3d108209dee501874f0e05b5faa112c8d1be9b5e3349d0b5515810
284d54a8bccbfbc46f5964e492263a7affb4698cc16251937868c06b43dc4e5ee5e56c52301671eb
dec3cd9c80f302bc77e8bffbbe76b557e598bd2873584d7c454e0e70ccbe6ff871f2540a81c0f712
9d1b8a42979270b253996d95591d56d8f618ebd0e20f80ee6d0faabe71fae51241418d1e1f73b63e
4bb375275bf04189b5defbcf30b56fc50d637546ad5c5f2be7e58e39b25afb951fbe92592d47e1b9
47fe1a3ddcdeb40d30eccdb4f9d7a80c658afe9757c20341246e1dc9470523a4d3f69b1e9e5c790e
7233b9034bc0a42cffd038e76348d7c68497d8fbb1334939f4065927a33c22779a6d4870f9e69dc3
408b43e1fa10850e9954a8b9998c3923aa7959ea2bc0469e8d58bad5020c4def5b4b60a7be1955b7
1dd300f71a13697cb158f168d0819c063a6ab8cf08f07b1c3c98416455af284fecda4ce608d4dd9c
df2a70d81272d6d48d20405922328a75b3defa10f49d43be314ddf9731a0b1ac5bdf9b7f5e9f0400
a7d5e415ccf76b854ad8dbf9850c01a2312d272d285424037733fd9ba01fe07ac2e414b46a7fd9e7
bfc0bf7195fc1ced69168434b9defe5a83a697d9605bff33d49667bc47771c1e6ad0a131bf8a35a6
cf701a4a2fb74e545392634ee715d2bb56d0ea2315f6bf4c722453a03ed4332dae3bf598d1c94387
8a6400fd67a6919fc954115ab6732392fabf725c7d43c60a23b13e6f679163d82ca5286504850e15
ca58c58995b45726d88edd67b6ae787701242ad2b3a1cfca0aabdc193f0ec9c9ef71200efcbccfe5
57587f76b0f9722883ef3ccff64e27531ac53fbfd15ae902a1f980b3c395677d3333
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 HBW_Copy_State <Virtual>  0
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Encoders PROGRAM  0 -1
#END

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"Copy State"
#END

STR ST1
COPY 0x1 "4 0x0 MC101 C101 1 0x0 MC102 C102 1 0x0 MC103 C103 1 0x0 MC104 C104 1 0x0 MHR105 V105 1 0x0 MHR106 V106 1 0x0 MC110 C110 1 0x0 MC111 C111 1 0x0 MC112 C112 1 0x0 MC113 C113 1 0x0 MC114 C114 1 0x0 MC115 C115 1 0x0 MC116 C116 1 0x0 MC117 C117 1 0x0 MHR118 V118 1 0x0 MHR119 V119 1 0x0 MHR120 V120 1 0x0 C130 MC130 1 0x0 V131 MHR131 1 0x0 HBW_Program.S0_15 MHR132 1 0x0 CT10.Acc MHR137 1 0x0 V10 MHR139 1"

// Rung HBW_Copy_State#2
// Offset 49
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC400 C400 1 0x0 MC401 C401 1 0x0 MC402 C402 1 0x0 MC403 C403 1 0x0 MC404 C404 1 0x0 MC405 C405 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC3 C3 1"

// Rung VGR_Copy_State#2
// Offset 23
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC400 C800 1 0x0 MC401 C801 1 0x0 MC402 C802 1 0x0 MC403 C803 1 0x0 MC404 C804 1 0x0 MC405 C805 1 0x0 MC406 C806 1 0x0 MC407 C807 1 0x0 Y16 MI400 1 0x0 Y43 MI401 1"

// Rung MPO_Copy_State#2
// Offset 25
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MHR1600 V3200 1 0x0 MC800 C1610 1 0x0 MC801 C1650 1 0x0 MC802 C1651 1 0x0 MC803 C1652 1 0x0 MC804 C1653 1 0x0 MC805 C1654 1 0x0 MC806 C1655 1 0x0 V3201 MHR1601 1"

// Rung SLD_Copy_State#2
// Offset 23
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 C1200 1"

// Rung SSC_Copy_State#2
// Offset 7
NOP

// Rung SSC_Copy_State#3
// Offset 8
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Mini Factory Fall 2021 Project For CS 453/454/553/554 "
"Advanced Robotics I and II<br> <br>Date 09/17/21"
#END

NOP

// Rung $Main#2
// Offset 1
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#3
// Offset 4
#BEGIN FMT_COMMENT 
"Run HBW_Encoders"
#END

STR ST1
RUN HBW_Encoders

// Rung $Main#4
// Offset 7
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#5
// Offset 10
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#6
// Offset 13
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#7
// Offset 16
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Encoders
$PRGRM HBW_Encoders

// Rung HBW_Encoders#1
// Offset 0
#BEGIN FMT_COMMENT 
"<center><FONT tsize=4>HBW X (Horizontal) Encoder "
"logic</FONT><br></center>"
#END

NOP

// Rung HBW_Encoders#2
// Offset 1
#BEGIN FMT_COMMENT 
"X Encoder Up Down Counter"
#END

STR C51
STR C50
UDCG CT10 DST511 DST511

// Rung HBW_Encoders#3
// Offset 6
STR HBW_Encoders.FirstRun
OUT $HBW_X_Encoder.ResetLevel

// Rung HBW_Encoders#4
// Offset 8
STR ST1
COPY 0x1 "4 0x0 $HBW_X_Encoder.Acc V10 1"

// Rung HBW_Encoders#5
// Offset 15
STR X8
OUT C8

// Rung HBW_Encoders#6
// Offset 17
STR X9
OUT C9

// Rung HBW_Encoders#7
// Offset 19
#BEGIN FMT_COMMENT 
"Encoder Right. Move to Conveyor"
#END

STRPD X8
ANDN X9
STRND X8
AND X9
ORSTR
STR X8
ANDPD X9
ORSTR
STRN X8
ANDND X9
ORSTR
OUT C50

// Rung HBW_Encoders#8
// Offset 35
#BEGIN FMT_COMMENT 
"Encoder Left. Move to Storage"
#END

STRPD X9
ANDN X8
STRND X9
AND X8
ORSTR
STR X9
ANDPD X8
ORSTR
STRN X9
ANDND X8
ORSTR
OUT C51

// End of Code Block HBW_Encoders
$PGMEND HBW_Encoders

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
NOP

// Rung HBW_Program#2
// Offset 1
#BEGIN FMT_COMMENT 
"Initialization and Reset stage"
#END

SG HBW_Program.S0

// Rung HBW_Program#3
// Offset 3
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#4
// Offset 11
#BEGIN FMT_COMMENT 
"Jump to Homing Stage"
#END

STR ST1
JMP HBW_Program.S5

// Rung HBW_Program#5
// Offset 13
#BEGIN FMT_COMMENT 
"Ready Stage<br>"
#END

SG HBW_Program.S1

// Rung HBW_Program#6
// Offset 15
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#7
// Offset 23
#BEGIN FMT_COMMENT 
"Set Ready status"
#END

STR ST1
OUT C130

// Rung HBW_Program#8
// Offset 25
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 0 V131

// Rung HBW_Program#9
// Offset 28
#BEGIN FMT_COMMENT 
"Task Send"
#END

STR C101
JMP HBW_Program.S7

// Rung HBW_Program#10
// Offset 30
#BEGIN FMT_COMMENT 
"Task Recieve"
#END

STR C102
JMP HBW_Program.S12

// Rung HBW_Program#11
// Offset 32
#BEGIN FMT_COMMENT 
"Task Reset"
#END

STR C103
JMP HBW_Program.S0

// Rung HBW_Program#12
// Offset 34
#BEGIN FMT_COMMENT 
"Manual Control"
#END

STR C104
JMP HBW_Program.S3

// Rung HBW_Program#13
// Offset 36
SG HBW_Program.S12

// Rung HBW_Program#14
// Offset 38
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#15
// Offset 46
NOP

// Rung HBW_Program#16
// Offset 47
NOP

// Rung HBW_Program#17
// Offset 48
NOP

// Rung HBW_Program#18
// Offset 49
#BEGIN FMT_COMMENT 
"Task Send"
#END

SG HBW_Program.S7

// Rung HBW_Program#19
// Offset 51
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#20
// Offset 59
#BEGIN FMT_COMMENT 
"X Home - PWM"
#END

STRLE V10 700
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 200 V118
OUT Y50

// Rung HBW_Program#21
// Offset 78
STRGT V10 700
JMP HBW_Program.S1

// Rung HBW_Program#22
// Offset 83
#BEGIN FMT_COMMENT 
"Fault State"
#END

SG HBW_Program.S2

// Rung HBW_Program#23
// Offset 85
NOP

// Rung HBW_Program#24
// Offset 86
STR ST2
JMP HBW_Program.S0

// Rung HBW_Program#25
// Offset 88
#BEGIN FMT_COMMENT 
"HBW Manual Control"
#END

SG HBW_Program.S3

// Rung HBW_Program#26
// Offset 90
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#27
// Offset 98
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 50 V131

// Rung HBW_Program#28
// Offset 101
#BEGIN FMT_COMMENT 
"Manual X PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 100 V118

// Rung HBW_Program#29
// Offset 116
#BEGIN FMT_COMMENT 
"Manual X Left"
#END

STR C110
OUT Y50

// Rung HBW_Program#30
// Offset 118
#BEGIN FMT_COMMENT 
"Manual X Right"
#END

STR C111
ANDN X0
OUT Y51

// Rung HBW_Program#31
// Offset 121
#BEGIN FMT_COMMENT 
"Manual Y PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 100 V118

// Rung HBW_Program#32
// Offset 136
#BEGIN FMT_COMMENT 
"Manual Y In"
#END

STR C112
ANDN X11
OUT Y7

// Rung HBW_Program#33
// Offset 139
#BEGIN FMT_COMMENT 
"Manual Y Out"
#END

STR C113
ANDN X10
OUT Y6

// Rung HBW_Program#34
// Offset 142
#BEGIN FMT_COMMENT 
"Manual Z PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 100 V118

// Rung HBW_Program#35
// Offset 157
#BEGIN FMT_COMMENT 
"Manual Z Up"
#END

STR C114
ANDN X3
OUT Y5

// Rung HBW_Program#36
// Offset 160
#BEGIN FMT_COMMENT 
"Manual Z Down"
#END

STR C115
OUT Y4

// Rung HBW_Program#37
// Offset 162
#BEGIN FMT_COMMENT 
"Manual Conveyor PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 100 V118

// Rung HBW_Program#38
// Offset 177
#BEGIN FMT_COMMENT 
"Manual Conveyor In"
#END

STR C116
OUT Y49

// Rung HBW_Program#39
// Offset 179
#BEGIN FMT_COMMENT 
"Manual Conveyor Out"
#END

STR C117
OUT Y48

// Rung HBW_Program#40
// Offset 181
#BEGIN FMT_COMMENT 
"Jump to Ready"
#END

STR C103
JMP HBW_Program.S0

// Rung HBW_Program#41
// Offset 183
#BEGIN FMT_COMMENT 
"<FONT tsize=4>Homing Stage</FONT>"
#END

SG HBW_Program.S5

// Rung HBW_Program#42
// Offset 185
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#43
// Offset 193
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 33 V131

// Rung HBW_Program#44
// Offset 196
#BEGIN FMT_COMMENT 
"X Home - PWM"
#END

STRN X0
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 200 100
OUT Y51

// Rung HBW_Program#45
// Offset 212
#BEGIN FMT_COMMENT 
"Y Home - PWM"
#END

STRN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 75
OUT Y7

// Rung HBW_Program#46
// Offset 228
#BEGIN FMT_COMMENT 
"Z Home - PWM"
#END

STRN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 200 75
OUT Y5

// Rung HBW_Program#47
// Offset 244
#BEGIN FMT_COMMENT 
"Y Home - PWM"
#END

STRN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 200 75
OUT Y7

// Rung HBW_Program#48
// Offset 260
#BEGIN FMT_COMMENT 
"Jump to Homing Reset Stage"
#END

STR X0
AND X3
AND X11
JMP HBW_Program.S6

// Rung HBW_Program#49
// Offset 264
#BEGIN FMT_COMMENT 
"<FONT tsize=4>Homing Reset Stage</FONT>"
#END

SG HBW_Program.S6

// Rung HBW_Program#50
// Offset 266
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#51
// Offset 274
#BEGIN FMT_COMMENT 
"Reset counter for X axis encoder"
#END

STR ST1
RSTCT CT10

// Rung HBW_Program#52
// Offset 276
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 66 V131

// Rung HBW_Program#53
// Offset 279
#BEGIN FMT_COMMENT 
"Timer Delay<br>Wait for motor momentom to actually stop"
#END

STR ST1
ONDTMR T3 500 C0

// Rung HBW_Program#54
// Offset 283
#BEGIN FMT_COMMENT 
"Reset X Encoder"
#END

STR T3.Done
OUT $HBW_X_Encoder.ResetLevel

// Rung HBW_Program#55
// Offset 285
#BEGIN FMT_COMMENT 
"Jump to Ready"
#END

STR T3.Done
JMP HBW_Program.S1

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
SG VGR_Program.S0

// Rung VGR_Program#2
// Offset 2
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#3
// Offset 10
STR ST1
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 100 100

// Rung VGR_Program#4
// Offset 25
STR ST1
ANDN X27
OUT Y26

// Rung VGR_Program#5
// Offset 28
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#6
// Offset 30
SG VGR_Program.S1

// Rung VGR_Program#7
// Offset 32
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#8
// Offset 40
#BEGIN FMT_COMMENT 
"Rotate CW<br>"
#END

STR C400
JMP VGR_Program.S2

// Rung VGR_Program#9
// Offset 42
#BEGIN FMT_COMMENT 
"Rotate CCW"
#END

STR C401
JMP VGR_Program.S3

// Rung VGR_Program#10
// Offset 44
#BEGIN FMT_COMMENT 
"Move Up"
#END

STR C402
JMP VGR_Program.S4

// Rung VGR_Program#11
// Offset 46
#BEGIN FMT_COMMENT 
"Move Down"
#END

STR C403
JMP VGR_Program.S5

// Rung VGR_Program#12
// Offset 48
#BEGIN FMT_COMMENT 
"Move forward"
#END

STR C404
JMP VGR_Program.S6

// Rung VGR_Program#13
// Offset 50
#BEGIN FMT_COMMENT 
"Move Backward"
#END

STR C405
JMP VGR_Program.S7

// Rung VGR_Program#14
// Offset 52
STR C406
JMP VGR_Program.S8

// Rung VGR_Program#15
// Offset 54
STR C407
JMP VGR_Program.S9

// Rung VGR_Program#16
// Offset 56
SG VGR_Program.S2

// Rung VGR_Program#17
// Offset 58
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#18
// Offset 66
STR ST1
ANDN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y26

// Rung VGR_Program#19
// Offset 83
STRND C400
JMP VGR_Program.S1

// Rung VGR_Program#20
// Offset 86
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#21
// Offset 88
SG VGR_Program.S3

// Rung VGR_Program#22
// Offset 90
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#23
// Offset 98
STR ST1
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y27

// Rung VGR_Program#24
// Offset 114
STRND C401
JMP VGR_Program.S1

// Rung VGR_Program#25
// Offset 117
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#26
// Offset 119
SG VGR_Program.S4

// Rung VGR_Program#27
// Offset 121
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#28
// Offset 129
STR ST1
ANDN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y22

// Rung VGR_Program#29
// Offset 146
STRND C402
JMP VGR_Program.S1

// Rung VGR_Program#30
// Offset 149
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#31
// Offset 151
SG VGR_Program.S5

// Rung VGR_Program#32
// Offset 153
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#33
// Offset 161
STR ST1
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y23

// Rung VGR_Program#34
// Offset 177
STRND C403
JMP VGR_Program.S1

// Rung VGR_Program#35
// Offset 180
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#36
// Offset 182
SG VGR_Program.S6

// Rung VGR_Program#37
// Offset 184
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#38
// Offset 192
STR ST1
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 50
OUT Y25

// Rung VGR_Program#39
// Offset 208
STRND C404
JMP VGR_Program.S1

// Rung VGR_Program#40
// Offset 211
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#41
// Offset 213
SG VGR_Program.S7

// Rung VGR_Program#42
// Offset 215
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#43
// Offset 223
STR ST1
ANDN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 100
OUT Y24

// Rung VGR_Program#44
// Offset 240
STRND C405
JMP VGR_Program.S1

// Rung VGR_Program#45
// Offset 243
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#46
// Offset 245
SG VGR_Program.S8

// Rung VGR_Program#47
// Offset 247
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#48
// Offset 255
STR ST1
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 100 15
OUT Y53

// Rung VGR_Program#49
// Offset 271
STRND C406
JMP VGR_Program.S1

// Rung VGR_Program#50
// Offset 274
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#51
// Offset 276
SG VGR_Program.S9

// Rung VGR_Program#52
// Offset 278
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#53
// Offset 286
STR ST1
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 200 70
OUT Y15

// Rung VGR_Program#54
// Offset 302
STRND C407
JMP VGR_Program.S1

// Rung VGR_Program#55
// Offset 305
STR C3
JMP VGR_Program.S0

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"This first stage currently sends the crane back to the "
"turn table, resets the compressor, and resets out detection "
"bit. Once it is sent back to the turn table it jumps to "
"stage 1"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STRN X16
OUT Y15

// Rung MPO_Program#4
// Offset 12
STR ST1
RST Y17

// Rung MPO_Program#5
// Offset 14
STR ST1
RST Y47

// Rung MPO_Program#6
// Offset 16
STR ST1
RST Y18

// Rung MPO_Program#7
// Offset 18
STR ST1
RST C1000

// Rung MPO_Program#8
// Offset 20
STR ST1
RST Y20

// Rung MPO_Program#9
// Offset 22
STR ST1
RST Y21

// Rung MPO_Program#10
// Offset 24
STRN X12
OUT Y46

// Rung MPO_Program#11
// Offset 26
STR C801
JMP MPO_Program.S7

// Rung MPO_Program#12
// Offset 28
STR X16
AND X12
ANDN C801
JMP MPO_Program.S1

// Rung MPO_Program#13
// Offset 32
SG MPO_Program.S1

// Rung MPO_Program#14
// Offset 34
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#15
// Offset 42
#BEGIN FMT_COMMENT 
"Always be Detecting if we have something, if we get "
"something set C1000 on"
#END

STRND X24
SET C1000

// Rung MPO_Program#16
// Offset 45
#BEGIN FMT_COMMENT 
"If we have something (C1000) and we get a go from Doug "
"(C800), start by turning on the compressor"
#END

STR C1000
AND C800
ANDN X17
SET Y17

// Rung MPO_Program#17
// Offset 49
#BEGIN FMT_COMMENT 
"If the compressor is on, and we are outside the oven, open "
"the door"
#END

STR Y17
AND X18
SET Y20

// Rung MPO_Program#18
// Offset 52
#BEGIN FMT_COMMENT 
"If the Oven Door is Open, and we are not all the way "
"inside, move the loading tray inside"
#END

STR Y20
ANDN X17
AND C800
OUT Y44

// Rung MPO_Program#19
// Offset 56
STR Y20
AND X17
RST Y20

// Rung MPO_Program#20
// Offset 59
STRND Y20
AND X17
RST Y17

// Rung MPO_Program#21
// Offset 63
STRND Y20
AND X17
OFFDTMR T100 3000 Y16

// Rung MPO_Program#22
// Offset 69
STRPD T100.Done
AND X17
JMP MPO_Program.S2

// Rung MPO_Program#23
// Offset 73
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#24
// Offset 75
SG MPO_Program.S2

// Rung MPO_Program#25
// Offset 77
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#26
// Offset 85
STR X17
SET Y17

// Rung MPO_Program#27
// Offset 87
STR X17
ANDN Y20
SET Y20

// Rung MPO_Program#28
// Offset 90
STR Y20
ANDN X18
OUT Y52

// Rung MPO_Program#29
// Offset 93
STR X18
RST Y17

// Rung MPO_Program#30
// Offset 95
STR X18
RST Y20

// Rung MPO_Program#31
// Offset 97
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#32
// Offset 99
STR X18
JMP MPO_Program.S3

// Rung MPO_Program#33
// Offset 101
SG MPO_Program.S3

// Rung MPO_Program#34
// Offset 103
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#35
// Offset 111
#BEGIN FMT_COMMENT 
"If we have detected something at the oven (c800), are not "
"already at the oven (X19), and the vacuum is not on [Which "
"means we do not have anything] (Y18), move crane towards "
"oven (Y53)"
#END

STRN X19
AND C800
ANDN Y18
OUT Y53

// Rung MPO_Program#36
// Offset 115
#BEGIN FMT_COMMENT 
"When we first reach the oven (X19), turn on the compressor(Y17)"
#END

STRPD X19
SET Y17

// Rung MPO_Program#37
// Offset 118
#BEGIN FMT_COMMENT 
"When we reach the oven (X19) go down, and come back up "
"after 3 seconds"
#END

STRPD X19
OFFDTMR T101 3000 Y19

// Rung MPO_Program#38
// Offset 123
#BEGIN FMT_COMMENT 
"Turn on the vacuum in order to pick up disk, before the "
"timer turns the crane down bit off. #TODO finish comment "
"here"
#END

STRLE T101.Acc 750
AND T101.Timing
SET Y18

// Rung MPO_Program#39
// Offset 129
STRPD T101.Done
AND X19
JMP MPO_Program.S4

// Rung MPO_Program#40
// Offset 133
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#41
// Offset 135
SG MPO_Program.S4

// Rung MPO_Program#42
// Offset 137
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#43
// Offset 145
#BEGIN FMT_COMMENT 
"When the vacuum is on [which means we have something] "
"(Y18), we are done timing (T0.Done), and we are not at the "
"turn table position (X16) then run the crane over to the "
"turn table position(Y15)"
#END

STR Y18
ANDN X16
OUT Y15

// Rung MPO_Program#44
// Offset 148
#BEGIN FMT_COMMENT 
"When we turn off the vacuum(Y18) and are at the turntable "
"positon(X16), jump to the next stage"
#END

STRPD X16
OFFDTMR T102 3000 Y19

// Rung MPO_Program#45
// Offset 153
STRLE T102.Acc 750
AND T102.Timing
RST Y18

// Rung MPO_Program#46
// Offset 159
STR X16
ANDPD T102.Done
JMP MPO_Program.S5

// Rung MPO_Program#47
// Offset 163
#BEGIN FMT_COMMENT 
"This is the reset button"
#END

STR C802
JMP MPO_Program.S0

// Rung MPO_Program#48
// Offset 165
SG MPO_Program.S5

// Rung MPO_Program#49
// Offset 167
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#50
// Offset 175
STRN X15
AND C800
OUT Y45

// Rung MPO_Program#51
// Offset 178
STRPD X15
OFFDTMR T103 3000 Y43

// Rung MPO_Program#52
// Offset 183
STR X15
ANDPD T3.Done
ANDN X13
JMP MPO_Program.S6

// Rung MPO_Program#53
// Offset 188
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#54
// Offset 190
SG MPO_Program.S6

// Rung MPO_Program#55
// Offset 192
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#56
// Offset 200
STR C800
ANDN X13
OUT Y45

// Rung MPO_Program#57
// Offset 203
STRPD X13
SET Y18

// Rung MPO_Program#58
// Offset 206
STRPD X13
OFFDTMR T103 750 Y21

// Rung MPO_Program#59
// Offset 211
STRPD X13
SET Y47

// Rung MPO_Program#60
// Offset 214
STRPD X14
RST Y47

// Rung MPO_Program#61
// Offset 217
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#62
// Offset 219
STRN X14
JMP MPO_Program.S0

// Rung MPO_Program#63
// Offset 221
NOP

// Rung MPO_Program#64
// Offset 222
SG MPO_Program.S7

// Rung MPO_Program#65
// Offset 224
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#66
// Offset 232
STR ST1
FLASHER 500 500 Y39

// Rung MPO_Program#67
// Offset 237
STR ST1
FLASHER 500 500 Y40

// Rung MPO_Program#68
// Offset 242
STR ST1
FLASHER 500 500 Y41

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"State 0: Listen for Doug's instruction to start module."
#END

SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
#BEGIN FMT_COMMENT 
"Wait for Doug Start Command"
#END

STR C1610
JMP SLD_Program.S1

// Rung SLD_Program#4
// Offset 12
#BEGIN FMT_COMMENT 
"Enter manual Mode Stage 10"
#END

STR C1650
JMP SLD_Program.S10

// Rung SLD_Program#5
// Offset 14
#BEGIN FMT_COMMENT 
"Stage 10 has manual controls for SLD"
#END

SG SLD_Program.S10

// Rung SLD_Program#6
// Offset 16
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#7
// Offset 24
#BEGIN FMT_COMMENT 
"Manual control for conveyor belt"
#END

STR C1651
OUT Y30

// Rung SLD_Program#8
// Offset 26
#BEGIN FMT_COMMENT 
"Manual Compressor control"
#END

STR C1652
OUT Y31

// Rung SLD_Program#9
// Offset 28
#BEGIN FMT_COMMENT 
"Manual White Ejector<br> "
#END

STR C1653
OUT Y32

// Rung SLD_Program#10
// Offset 30
#BEGIN FMT_COMMENT 
"Manual Red Ejector<br> "
#END

STR C1654
OUT Y33

// Rung SLD_Program#11
// Offset 32
#BEGIN FMT_COMMENT 
"Manual Blue Ejector<br> "
#END

STR C1655
OUT Y34

// Rung SLD_Program#12
// Offset 34
STR ST1
SUBSCRIB "4 WX0 V3201 1 0x4"

// Rung SLD_Program#13
// Offset 39
#BEGIN FMT_COMMENT 
"Manual Auto Run<br> "
#END

STR C1610
JMP SLD_Program.S1

// Rung SLD_Program#14
// Offset 41
NOP

// Rung SLD_Program#15
// Offset 42
SG SLD_Program.S1

// Rung SLD_Program#16
// Offset 44
#BEGIN FMT_COMMENT 
"When the light barrier is broken, turns on timer to run "
"conveyor belt with disk until the middle of color sensor."
#END

STR ST1
ANDND X35
OFFDTMR T200 3000 C1600

// Rung SLD_Program#17
// Offset 50
#BEGIN FMT_COMMENT 
"C1600 is set to true when timer is running so the conveyor moves"
#END

STR C1600
OUT Y30

// Rung SLD_Program#18
// Offset 52
#BEGIN FMT_COMMENT 
"When the timer is done, move to stage 2."
#END

STR T200.Done
JMP SLD_Program.S2

// Rung SLD_Program#19
// Offset 54
NOP

// Rung SLD_Program#20
// Offset 55
SG SLD_Program.S2

// Rung SLD_Program#21
// Offset 57
#BEGIN FMT_COMMENT 
"State 2 is where color is determined by checking if the "
"analog value is within a range, and conveyor timer distance "
"is set based on color.<br> <br>"
"Need to integrate a counter here still."
#END

NOP

// Rung SLD_Program#22
// Offset 58
#BEGIN FMT_COMMENT 
"Subscrib is to get value from color sensor and convert it "
"to something the HMI understands.<br> <br>Need help with HMI"
#END

STR ST1
SUBSCRIB "4 WX0 V3200 1 0x4"

// Rung SLD_Program#23
// Offset 63
#BEGIN FMT_COMMENT 
"The disk should now be in the center of the color sensor. "
"This function checks if the color of the disk is in the "
"blue range. If so, sets boolean value C1601 to true."
#END

STR ST1
RANGECHECK V3200 0x1 23000 22000 C1601

// Rung SLD_Program#24
// Offset 68
STR ST1
RANGECHECK V3200 0x1 20500 19500 C1602

// Rung SLD_Program#25
// Offset 73
STR ST1
RANGECHECK V3200 0x1 16000 15000 C1603

// Rung SLD_Program#26
// Offset 78
#BEGIN FMT_COMMENT 
"If C1601 is true, Off Delay timer starts output is set to "
"C1604 which when true runs Y30 for timer length."
#END

STR C1601
OFFDTMR T201 3000 C1604

// Rung SLD_Program#27
// Offset 82
#BEGIN FMT_COMMENT 
"When C1604 is true, turn on conveyor."
#END

STR C1604
OUT Y30

// Rung SLD_Program#28
// Offset 84
STR C1602
OFFDTMR T202 2000 C1605

// Rung SLD_Program#29
// Offset 88
STR C1605
OUT Y30

// Rung SLD_Program#30
// Offset 90
STR C1603
OFFDTMR T203 1000 C1606

// Rung SLD_Program#31
// Offset 94
STR C1606
OUT Y30

// Rung SLD_Program#32
// Offset 96
STR T201.Done
JMP SLD_Program.S3

// Rung SLD_Program#33
// Offset 98
NOP

// Rung SLD_Program#34
// Offset 99
SG SLD_Program.S3

// Rung SLD_Program#35
// Offset 101
NOP

// Rung SLD_Program#36
// Offset 102
STRND X36
OFFDTMR T204 5000 C1611

// Rung SLD_Program#37
// Offset 107
STR C1611
OUT Y34

// Rung SLD_Program#38
// Offset 109
STR T204.Done
JMP SLD_Program.S10

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STRN X40
OUT Y36

// Rung SSC_Program#4
// Offset 12
STRN X41
OUT Y38

// Rung SSC_Program#5
// Offset 14
STR X40
AND X41
JMP SSC_Program.S1

// Rung SSC_Program#6
// Offset 17
SG SSC_Program.S1

// Rung SSC_Program#7
// Offset 19
#BEGIN FMT_COMMENT 
"This Stage will be for looking at the High Bay Warehouse"
#END

STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#8
// Offset 27
#BEGIN FMT_COMMENT 
"If something is detected for pick up for 2 seconds (X42 is "
"not on), write to MI600 to let Doug know we got something."
#END

STRN X42
ONDTMR T150 2000 MI600

// Rung SSC_Program#9
// Offset 31
#BEGIN FMT_COMMENT 
"This means something has been dropped off, but is now "
"being picked up by the crane so turn off MI600"
#END

STRPD X42
AND MI600
RST MI600

// Rung SSC_Program#10
// Offset 35
#BEGIN FMT_COMMENT 
"If something is detected for drop off (x43 is not on), "
"write to MI601 to let Doug know we have something"
#END

STRN X43
ONDTMR T150 2000 MI601

// End of Code Block SSC_Program
$PGMEND SSC_Program

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"D0","MHR","",""
"T3","T_HBW_S6","",""
#END

