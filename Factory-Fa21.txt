// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\Nick\Documents\GitHub\Factory-4.0-Fa21\Factory-Fa21.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
2e2b7632dcd752c168182a35b21ddd17cb134731ea7925812c0607952dd97fd406df5b63168e528e
c6d49713b690f58afa6f57c60ea3a100292c11b04c716d312f665ca23458965fd307aad0215103dd
b8d6cce95afd44758e9004583e755047c6bc791a640fb5a1700dc017d83e672aa90a5948f66d4d7d
d07cabf106d602d0ecaf28eaa544c7b29586b8fa33afa18c8aa2a4dcaa5aa036a56cb16244cbfc96
d5dbe9654a44a3e3526f7f0a4177e949dda8d1afb7098878aee931f19554f2ec80a9ec2425033f9a
29d600410db2e3f67ebf2888a9f61c54c8edc0149ec2ceb1a5ff45cf4650da6214885d056c4dcbab
c706118fa072f74a2977a267fd195b8e517ed8eef99cbb51a74488ad6e2f4c1d9bbc23fc0d52e3b9
57f5f2b8fe74566d9527833aa69a69ceba51ed061495c8eeebf41db9e9972584b3625511a27a379f
58b73ecddf4101667c22642863a2b448164562dc28f3e59df8db28a3c755e51629b5c4adc611e689
3afacc44f383bef1d6969af07c2f16b9a9476344a1e5cd7031aefba6f2727a8489ce0f8ca632bad1
dc3c597d2755f253f6292d54dd2c88a1ccce51f91be71ee47f8e7f092886b03a8610a8f68de0c8df
6408c55e424d738de6297b5166493a613128d6db7699d9cec223112add6a5872db825d6af8d6c625
c6b78e3d06c50a737cddeb2156c5989f4f1d8638c1e0012aad9c0ea5c028f4377c5e16f105500546
6925bf8b25e8cf566ea5cdd45ddd947427fb58e8361956f13600a115a66796c5a70067062edc459e
98730e8fa1017562130bd1be63bd87353fc71632ce655ae30dfc8171dde2ecd0ceb021d5000561ad
7e46366cda81b7a8778d09f4c67cc7e3942b853bf0477d045f6581b018e2b7cd03f2bb6f66727f02
f853a88f115f705787f1dc883177e9dde21cbd033c5fb4ee5705a6f234261396b72c28ddfbd55af9
8e48d4066cd1d9202fd867a7492f41e70cdc64604ea92f7a447073e59e2cc3b01789b23b221b989d
e230813f4d83c642f1d0c98ff55c527690116b41a0ce80ea696e0decc51f07d405819319fd4753c1
341a201ffae2aa5ae4b2495554673d280431a648778314c52c59cde6c3fccf75f8c01555186c4b02
45a5e3b2566b46e1e1bc9ef163c377c02571414a7ba1e3be5ca0e30482546fcd3a366ee496a93d47
bdd360c35d49b30b6fa2c2170532b03c732a71fba0c6d1db150144b41ff2d824b4e6e14a61c7b4d9
00c7b362a561aa137c8a49091c351b4c69f781e45e059fe58a787628f62fbc661414c0239d0e26f9
a76e7234d456752556ae81f80d979187300de300d9afbf3eaa7d7c444fd7fbc9836beed21cc74677
16d408aaa2d63077cbda14cecb09d6e65499ab3d3b35f208d82e701fd320ca60b226e52fcdf5b106
dd05db40ae3d98211eab9602ca2d290bb6308c3c135ad70072132e7076af6e741fe03b45b92f58ca
2111195ca785b95fc2e22d3cfe50f2963b82b9bf51f98aa0dfc58bdb686ea3bd4542b58c959837ff
46958a1dc2d7628f39bd9c9fbb2273639e4cf9cb9548952944ba5e1406a2c6e0a27bcb89db41e0f6
b885a8e5d9200e75c2cf38ed287addb4e4fc4382aa9e9dcbb3dfab5c5e48505c9aefba4be2184346
8e68ac6f822b21f79787c5c1b598cd235ed48071d080a5dc5fb3415d7d894449d9b632cb73aaee69
5e6f6e3ff916d88775c494f5239921ce55a214e0177caac5a78d1c5266f22d411c33695d884c611f
2b0bafc68023d9d58188aeb6079d158c17e643c4f4d6dd64ed148bec962e170b7d13b9583ae90f4d
924f0c19fd8be705dad64224e6719c9964d0b8ae9bc74a2c455636d493cd5a91e95e9f95b3ab9887
3edfb8c27a45cc5c386cb6ebe10444e9532b920ab9b07e638af1968487f5257390bc17634eb8990f
338bc8fd4c33073e3aa251a896c559fc722dfde0ed9134f52e9412b5932ce47224d3ea0ae9c56e2a
af975f155d103b91a2d89c0a3a8064640cdc664e8aedb0cdabec27fd5dd307c69c6109eeebb1aebe
2bf8d9679949ce7e89a79b7409a2924ecfb1fcd813cfe7263025de51f662c267d45acb7dbac527ef
1deeeb8a807ea706286a70c65933346c3211b96ab6bfeace57490040c27ac6e4259cbbbda76d9c37
a70cd6c4559aad9af535366c39afa5f9fa9a4a1c2140064732359a5126dd88bec0c68c90ee8f477d
4ce8df125774d74acbeec6ca98d8d6b0717b2b3d0b233e15599661e20cdc759a58988dcff8ec17ff
3fbbc379b7bb11159b6876d0940d64a291bcbcc68dbb8663cac3c1f3a4df32cee949afc9862a706f
5d683493a3ee92d149f5fdfbddfe37d93b9a975cadb08ce925c65d07d9166587385c058061706ac4
890eafa13b006938f49501c4ab6ba498715d049ec4346f6ccd4a6b4435fdc92cc869a6b4d63eeb11
a0530bf8013657d2c2abfc9eb0ad4b75f57744fe6997978a71d58ffcb3ce24499c6dd62872a47350
73d72c017880f230a34038ab5071acbdfa198b396dabc016c6dc16e2fea1092f3439ba400d8f0c75
811a82d7d5ae8a597ee7a277161906bfa4690011832ab4f101c8a5b11e5462284ce0cadf678880a8
d7616439573c330c352c81726cf8bc254c32000d0e743f09018aef856330556d489b21441c3b61b1
9bb6938032074ffeaba88615a0d12b0b6e38176b9a788e28a524b2913064886acbaa3985f1a764de
b14e24eb0d09e883dceca544b9d123348a1e0e1a61e4d657e38030bb1f5d6ac9709f679fa10a70d3
96ceed7bde66b43146217e30112ef975d498ce5fd12d57a3f4c32aa7b6a54da7962eee91e81fd4da
69d8cbbdc65f58955c4a910b8d650b08e5346f0d5d3bbad9f647cdec195179e6ea6f3fbd73fcc55d
1c42cc0aac723df1969cd5abdb3ce2cb3cbb44fa18dd0012b1ceae2178d43856091e459680daac23
e6c0fc62ae3b88585770f655faaf82e9beb6b0c913b3d605248d01f43fc61be92b90b83edb428acb
eab899780f2c9bcb07d9d42a0393afcc15d67165c785eb438de2958114d8435e58835256c0c32bba
3e1b2811738561edaab02b5803412765cb810f4fe13a254723377dde181cfe9c20cdf64df3e2aaf5
1fea8a9c2c8402549b3a08547dce3bed80ad32c599a6470b0f2522b5b3436c561e18e0667bf6e489
fb1049dd23ac5416e73ce1440a1a2a7660a9598fbe9fbd48f60ecd94271f09e0e434873ce20c0aef
f71712c966fb29a111c5d2af02ecb9c2aebc346ec68e5e335b588199b13298ae6579cfabe0b22a19
4527d41d9fa3ab1aefee8afeca5166b2fda41319b5e99d98ec085fe9640f418cf2fb153cbeb4168b
0e0b814aebd5ca9ab5dd1c989814e5c9f38f7f789777d3dbebb783dd5068f927206af90b5c8912b8
42bea56ae3b3ea860ff02ef47b655267791468929088eeefc5c284e75040e2999aca67a59d58a887
bd559781b03c28ab37226a0c850971210c5a5cb50d5df07d041da7f02ff75cc60fa4147f13b4797a
51b2fb770e5b8ea5a0c2056e504b7b7d0dfcfd0b21153bbd42dc9d77abe85e690f9d6e349c37457b
d5481a2c1916fc86d8e476db1c6360b93f409fbec822b4074c5a4c0dd2c0c09990034c7629a2fa20
458133cc3ac2eca4f26b9846252f30b86e54b58fd964e323611a99393cd0a03a3ce241568df7d68b
56b0a732ad95602677a7b3cc5fb3b732f2d91ad32b5ed098d906148038c7ce2b8a363d8e5f3afe8c
71db5c4138282157f8e015b7b454f5d953cbfcef51dca5ba80dc03db70d5cc47f79cf0579bc85c41
bb85f17849970dfaac67fc4f802a36cd3bac82ca9c4b18affda28ab56ece281244f94959275cdf7f
fa160620c9be7a08f436d8a598bd41b27e6cf35c4c5a98675f3776dc40c15b2ef57f636b12851dbe
a947851a347c2a83707e8626a2095e6f01927efa54fc0630660b630d4b9e16d8728e7955ca4a1050
c78c4c5ec16e2630dabc2edd07ad4659cd0dfeb1b3a94e7b8f4db420b2fdc7e0eac447dd40eb1e32
af2f7535b1fa4a58c768085e8f7402a5b5ad1f26ebb6ac54b1bd4e43726b45bc7ead83cb9d748731
653a12cd1aa06da26b43ce3efa200b0e6cac179d1f8518b345a91c943686a7b440144b635c872798
7927702d02bb1c8f9c24951ec677c86b2ddef263034bbf38c7f0d8ada0bff1fa3895ef7ebb8a47ee
f9e9df37c4634170fecc8eb105786b779234ffbe7a9fe52c7665540cafdaab640e741835a3aa77b9
208d84aab5d5b5c3a63b369b3d14aa875d5eb1d15e6bd92fb1c275ab41b439dbc85c02a33f3d753c
041dd470d56a52cbdaaafd95797d9b7699763465b2a61f2462df4bfbece59c4190cf1a9ef3dece71
defc9afd918370527b567a44eeb3f2f0d8df558a8b323d9f29e350490c01bc0089f0e1db34584ab9
63c8437350d53494e8e192305824a6f06b1056de0dad3d78eb50bbd7c886931cf9ec181ae32f1c52
7f063104d8786e8fd8c2f89378402968c29e6c8756728c1507046af05ee521e8dc1a0911066f815c
30a5b89021b972352bd170b0eb589b7837db87ffb9ca5bdd2010e0b80109933ce8b3fe7d15ff95f2
cae6904ca9f1b696808b2a3358e261482cadd8098b637bbebaf3137d88881136a57ddabcea7ab444
3e481df20ac9fe6db5e15f61b36f19333247642b149184406034e34a2d41c4b96a560fe4bc03f08e
978010afa267e5f3d433cc32fdc251baaa65ca3b68b17f2ea013bda5fcde51ac0d4bd415d3e85519
7214bda7fbf35e403ada07d74020cc5f2dfac32aa15d3d7427028ea5c183367cf41b79b07b86a6cc
47ce50accc856620d359fcb1f392c8d871533cc055fb8a9392f9a3e30b8f4eb16f2c9edca90d3b6c
3b653819de72e5001c3b81f51ea542ad877dcba2aa2010fe18acfd87fa5f420af6cc99761c97a81d
9223fdecd05491d59622e314869d516732ddb788d57f46222e884753109c1e065cde9dd72b1540af
c54e71c447fbba33293dd5dbb7391774667a77c117e554eff136ea49004e6e51528c153394c25674
5a1965bc1127728b7c18ac6555afebd13c3a4c63eaae4d1b8e8acc11d54a31ce3fd0c64de8853143
a8a555b9b79ec08bc56561c49c7372c0fca9bccd907d8550a84167106de23f47c8469ab95021af2b
4b16c9b6f6de3828e64894ade9da0493ad00ed2b9051a5bbd3d1abfe4aa085dd601b02105c7def62
bc1f5db322736b66cae9d7e9f05c842368837b41444e1077d67d14be29a8df42a8fffa40eab53ddb
7509f6432c536bad4540e6e21b3f8964c698c907f22da5e67e3affbc0ec760bb447683a55b5afde5
7faa0db8293c9f9fec54040183e96f4ec9b25c869a53e9be55159ca868b91a5d3734efa31a275a59
4169fb619a753cec8f55bc9079acd2bcf5c815c8909d450de80cfd78957de8fb88eb1811a237d587
e980848346b9df90bc28c9bd18b085aff72f4742fd26151dbd47a131b4310d1f0bea6fcd19a2e940
88970282c2041be47cbed167b673bc4b006efb3f2830ba5ba89edaa23e2f6e1f5cef4605bf189080
a1e6968c0c51dcc22884ead067fcba9c1e5d4d35f6497b707fe1f4588be372f999af633c6dd161a8
b90de176fd68022f409acd4d52d21eaf1053fa0a1711254b7b07be1b2f962812d02c44c4540470af
7b9f171ffa570fd9ffa5ecbac639e99fdde4fa8349c8901da9638386385aae091c0fd0b560242f66
0f11786bf1a5afc3e10bf54dfc00cce4d0cacfef006cc1ca4bb07c0b8ace99437dcffe4d76c88f39
79c5738af0be65896153e7e4f7156f952beeafe26da94bf5e3de176d49846c5a20aa4c2d8aeae36e
8f8d147133b0c677281e73e5d9909afbc59c7237b8a88f96524ce6a2a96e7e1174cb4c00c6109d11
74d00707efc3d30b4161ad4edba227a6b2ab80232bf59071f55d85b300f9d484a3bf483dd708acf6
6fbc92eb63e8bae733a706dcb9a05773658eeea44f95bb8fea0f7b49530141b964181ee68aa896cd
90d28b028258bc1e563761942de9e900b86f194810727afd1fa208da13edce0a5e1066d0edeead51
8cf17386ee6d01d2525365305d42b9a50b5ee4ed6649ba0aeba835d39c3adbada97211abb4ec3af9
c6d5f21a121375f299cd0bc50a8fabfb9005f2755cad86b95c0efa2c56ecedff4666e74268ed3a1a
80b36a77faec30864196d6af87e7dce60eaa2bcafdebfe0c38655ef9aa20270cea8a5262f30fbf60
c73aa297d43817a9636e094da205aa0227656d31abf7ca9f95d7d544b2bf85d9f2b4cc865c116bf4
d6bed74160c02cee1e04fab02184cef868941b8aae63a65db488960ab8b773cbcfe160c94024a1ba
5b220d93d18af93676087d6bfb30ebe9ac5cf31eb4355c892a4aded469cbabaca816fb065e2d5a69
93e94ef464f0d633e5c960993520aeab24034779e7959acce63e9ebd36be86d6a7e53c46b39505ce
95085d0a4585bd784fa41761bc85bbe709cbb03cadfcc374ca519284a15a0bd5f0ac8fb0ee122585
6dd87939bbe4dbc7aa139eae8033a7deeae6953a58aed802c20a4a63f47d0bb2af55f01aef61d2de
652efbf4927c506356b1d8e2b1f9ff5e20cfdf0848e05b64fab823f8f1b41fec667c7fed8e91dbf6
6f27718ee371932da8fd1fa08904645e4d0c96b5ffefb7ab35f0dd04c9fe97c545e36906089da33d
645221e2d633bb119ecec5ded38b9dd997ab95be1ced08b702ed3daac345b518f55f37ab3a3b0d1f
43b473d2d07280c365412d90e6e21968e54190ae14e795a6603bd80f98d7264c8b41908080c1d8fd
3c4706ea42b1468374a7657357b2372e5fb33e25408d8ed3ab2f60a71f3e7a4c889950293a7e5b9f
7a86577706e7dd7ee8f8762dc914ab9e5db10dd46026b5d1c7655bacaeadf6850aa74e072ff74cf2
54023b046b4d4106f40a10e752fa1e7693c77719cfe98305bd8b61d5e8f766f071daf961ee599cc3
b401abfbb5d6e98470e4e32361bcd09b7be6275ccc9a24a2c898b250964cdcda788883b5ee883b38
567112a789991cb5ff483ba1ed125113719c8f936da66af82e7ecdbd152e0161e14131c0e8bcfa2a
31ce514bef7bca0486ad98b292a945f7604e474114c3b7bd5f500fa076651b1f63e19e77cf5607fe
94c04b47e19bb27f52c558ac0907d39d5f104fb311318764a20598ad4f0fec818ce8f68085d8062a
57ebf0b686b60f6523d14252c41f699b9b725aa9e0d64155b906c9f91f84141e99808010757dd331
4ebaaabaf911e5052897095d0766bd984ff17fc4a8f018aea8e013096e6178af5636be9f3b37750a
6933a17bd7ab6e4d6c8081878b8798df15f650b174b40cc78432107763667e80715d9f9ae3fd957e
17e1fbe088fcad4c9f52e5112fa2b3b8f58474db95dda05e64ad601c25f7952466c963945062d344
9274ad528ea96437bc41f7ef7609dd1539743107b6dd98fe06cd2962c984fdb0072db797a4c5e963
5cbbfac4e619809eca80ed798617d56acf19732eb83b211cb579b475a9e494ea6af60b6edcb6368d
58d8783c8686cc57662eb6aba501816995cc2701f5632ee2bd58d4c35027e40187cdd55ca0ba834c
29a7667fb6fb72a60a6f86e5c5b3aad7507fd4d1849dca9708705f1bc42052eb9bc1395aed3d1a0b
e5cd94cc4f0dd7aeda16ce381ed14573fb1ddd87fa5f24acd0eb82a57a2afb283eea7daeac3599e8
0b75c9709dbae24e64673975324e7c3fabdc0d19828ee622b4cd91373621df85a3d1e907de1499f3
18a433b2aec4c4b1341e4c20522ad2a06e10ddaeb1888f24c45da88acdb016a984399fcfa0be9406
b7b87192b04562f17ce1aeda6b1f4279da0588aa847ba6a60b88f53f86c632db5f4f975ce556ab99
7fa6283e745a0c04a11502ed46edb7e9aea8f8e3d3d5de650bd60b7a2b76dbb48d0cf28577ca43f1
e20bb1671ea58745f92fc9173d74a70327792113f3a1c2a58762f64a43b0d8bee6cabcb490265d19
3337f4bad189393fc342536993d3c2c487fc8d830f59ce4feae891f4e66752f63b95645cea3cff7c
8fc8fbc93734743af943c23f21df8d77e99b1ff95c2036cb5ed71942a0b8a7f29078e654f63aeb1e
10ea8ecab10d305a87072b74e9f9709bc4e9ce790344ee5ca76d88d7dec48a99ffbe69587e095d0f
4cd611199876f863315b1945170460d12812e75f3919b9c6dba585fe75bab9c1f0008ce50acd0fe7
6c2f6520d2907da4ca318bf5a6a20553163dfa74395b7b0612450ea425cbdee6a4b0d8685604b67d
3db65e74702f9043e954105b9461a532beebbd8858e53f6050c844afbdb3593d51a53c346971855f
a813c61eeb7f343ba944f082615264d3089aae9f4fae270073ed797ed8885cf5a2763bd3b266b336
6426d00895385c682260af2332bb4821948827d50c0b2889729bc35d006c1e5bef06b41ee6088414
f97a15fab25291b484a6fcba630aff17ba8f885425e8e36647c74c0e7f77037fc7a07aea27902138
37774a2012b5ffa38286dfeec4e246c217e94d701b8bed479b296eb5bdac91fdfb8088cd8be800d7
84e4b60085c7a32fa51c0fe651ecedbbf4de0ee7f0706d198b2e9efc7c8d37793a7e9eda03d49603
72afcd2f5a9928530a24a7956a11429782b150e92dd5fc215ab919ba3db6eb37b3514c7433ff09fb
6f652e3779bc0ac92e44b56dd88af5146b38172e164bfafa6211f25b5e835e7bc14d44b630575c8e
eac871df8df8a37f165316e733591b2694de0b168834fe097c2095ce7c5e903d271c58d106884abc
d5f5602023fc5a512de92a0d0d0ecdb649e65b305913e21bab4d38ea8227b84ed17c5e7475a80f9d
fad1a05e68dcf42b3575f9cf3866ccb48e2419202099215d0cf3e9147b9954ae13027aa2d0fc517b
38fb2c84be006177c85e9d325652f285a346fc8d4f2630daaf5aed2470be0278b016f975f97bee11
4358f4de9d1ff6d0f661aa3df4d6513e38b748be56a5ab330ad10d98e5342a96260dacb4426da437
2eacf0c8bf36834d8af4f0415ffafe3b36c68b918f0e5af07ef68d942dab068b2c428702fcb575bb
090821632bb7db37a1fe75e8d185a481b913a38f20f8a9ceb736cf1dcd357c766f13479bce70edf0
a278605233945fb6ac65bbc6f5f27cc23da4493d87ab379d8ac459fb353a8bf4ca23e492acf3166c
1e335843485b9267af2dae55458ea23168c1110b14b829f4df0633c2f2415bd56aee646b0e8e51f5
f6294d7dde3f929f79442bb59c9c7f0f8ebfee042362a047a6289a919c39b701a1ae4867e01c5328
26d6712bf44adf78843b95b3db5567b81fea423df5beef4baa99ca5fa14a0b0584dacca8f18dcf4c
55e89e3732c582732042072e799571e27cd24c9088cee87f846cf301837a3ae13514dbe512603b39
f13cc81f8c444ba366167ed42037f5bd7ead7d2da556c55676d8906768d552e047ffa4a1e4cb888c
e51356d6c5cee87c2585d734e1a51a1ec3d4c756ddeeffb0c8307ed0b7fe96be710475043ee41295
0ff6e2df50298d45e22a361db23efb403fc6362a51dc83686594e310f524a7b448de870cf47f6916
2660f09d79447edcc978a47b686f25d266641725c8006eb6e42ebc4567f40c79837bdba732e8cb8b
b72d6e3b6998ca60060b211d6fcb7ac2f1f317e9b0072834f08f7d92c5533b1d7a3090c9d524d7e6
f56b3f66b3f5c6ee1cb0a9d69af7c9c28e882507b28ebbf6a57ce49296e3f48b9e21cf7855a1e516
ee1eb2ae0e3c2d828f83ea42750ed1c25a53fa5facfef2020e8429fdb105bb1f47904922f0549074
87bf0398b670540fc80cc3715c0205f886af2714ba80fd15df8b3fe42f81ac7ab3e809ecbf65f0b9
0db6edc687b3c1d1af0b5de66a7d5f3052d9a9276c09d57a634c8bf592d6329f1f0ce0767f734cee
21f792612c91df93a79e39b9224984f90415d59011ad369286fb2ff755ca7ee485835f4d2af6eac2
45a8dffdbf6d01a698eb7b59e69557d89cece210c03ab286a2461ec565e2963da4cd4907f7013fb7
ccb38080254bf24713f05c4a2d0845d83854f0b3b068b1c904dcc519f5720623453dc63dec41d3be
61ec00abc2e449bbb2f0b14b7d91ea93afcd1e161bfa0595c0416928f33eeeaae2d2c1e5c6974279
ccdd3e2ef93c60ca9343054d01b4de6f3490b6cb5ce6c8d82c16d3a417ee824ecb300be14bc4a60e
a5d0056eadf9592e8ce239e9c0f8a1fba84968bb8d72de992dfcb9a4396ec9d38c55784ec025182c
5bf986c861edab5c9e5112fd841f6590733eec8a38e7cc7e5a9e670197b7d90ec97e6fd649769ac8
553b76e58902a5595c61e3da3ed324a91bde7f7da6f828bf56deb2a5b763d85720bfc5e78395a48e
59b383db32d061a6618ce95389b0e458de8c789db5cc64d12a1c44ba91ae07358cb9004cfd5997c5
54bb28699cf7b98ff1bdacf4350a99457aa65e72b642bd501e095417673c31f23fda6e3135c0c5ba
214ba83f7152d96095e9410cf375a364f3e21be88e7e2b88369578bb25d60fffed7b55d1d54aef0b
1e1a4d4b97ba631e3970c1d6d889a74288d231945fe6277c118492d151b0dfffa1a520be979c4381
8eaba1d4be0f87b02233e25afec67c690d84b7702fff43432f42f30f2f7f09a51c54ef1ccbc82705
c6e89d5977899a1f53ec5a2314ba7aaf0e89f256e76dba66b3223e64498af3a95b409de2b8b1ed08
db54d4759254b97e0b2ebf2ea178b0650344694e2905de065396d832e6e40bc41f148fab82ef08fa
39aa145917e4ba2376a2fe3a0afb5295c1a98880a73d9099db75c7b00cd93d0602b4026d71c87b0d
6d5dc15bb5d6a272e54aed50930d6f838c4c814e5f4c0fe14ddff8e8cbbb8b19eb012c7b729ff0b4
a054253b4b362e98fd7cb89da6696b33192bdec89a6e9a321766c42b39d57b5b6168f5f0a4052d18
cfa13e017f8c98acd2a153fa14cf929624152179297c52d3d9af95ac6ecc608f7065687a9a528695
8797f11e9c10d65a1f3a341864cef2274c4cbcbd978b23fa62b0afc0f4f9af9e1fd2acde9067c12c
4848fcce46884f0a0c83be623375e9d66532167cfee59079f8b348a120f22ae7959c843715ad4705
c89d6bbd63444a3ebbddb2a25791bc2ea57249ad2be3a2a919560dbe647d1237f29fe57c19fdf4bc
84e1f80410675768c3f5c8483e8a96d65318c5206dcefd3fd4c46cc7ef70e2f24949c0fe9cbadd47
726f61302c5fae10db44135712da19fb49341184dff4e1d0e9e2a2dc6012c354dd5ef8a62d6c5bbe
31b726ee3b3edc1eff35c139f5b1fa745ab4477c4ea32c42c1a30612dd5649beeded21b2b3df1a92
e71fd98bf75ced25197257639c19c369a1cfd9ea01f0f3874b4922951ef65739b3123ef581eb4d15
eb52b691707218a19c406118557b04a0c926523bfb6eafed88c2b165eba98f087f5a37b232f0d5a2
de9f15afe76c0880537c944bcfe47b6a283b74571d9fe59558aaf58b0f908edb36c1e4dc554a316f
ec27ef4d56bc29a235f804153520958f06d5f546876cea3221f41679aea0e143f7e7cc0b12b5f91b
b17fac5bb6bfc5d01df45dc47c2d30aa96c61463a45cd7b09034edc8f90384e34076e04aa4787130
7386dc74bede7a78218cecf58e9e26d91f7256bc5831ef129de1733b9d0c1d00f77337d3f233a8ac
0b7948b9605bc729e674775529a0ad0e9d818b8184f888afdb9f51370cb34cd66e48b818c6d3754b
136c13dd3950b041c5ba2898157252f62f0a3b75ccf7539f783acb10ebdbb0b2c67c0d9d1326990a
63dcb6e6831be2f8ff3ecfe24bb97e17fa7c468fb95a13e0de88ff0c92789f81029759347d65ef2b
26c8ac51cb0a3d3365f8bdf61adf8f3e5613def0d1ef6aa68f1d92c3cb3dcf74800984c9a829a2b9
66f469253918fb8a742271cb1a02d4dbad88867e1f0d6366a60770b593a2656543dd8ca250106349
fbf4d3da1c55de842f4390635ae28bffb66993137df645ae0d552c1f6f39cbd19f9f
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 HBW_Copy_State <Virtual>  0
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Encoders PROGRAM  0 -1
#END

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"Copy State"
#END

STR ST1
COPY 0x1 "4 0x0 MC101 C101 1 0x0 MC102 C102 1 0x0 MC103 C103 1 0x0 MC104 C104 1 0x0 MHR105 V105 1 0x0 MHR106 V106 1 0x0 MC110 C110 1 0x0 MC111 C111 1 0x0 MC112 C112 1 0x0 MC113 C113 1 0x0 MC114 C114 1 0x0 MC115 C115 1 0x0 MC116 C116 1 0x0 MC117 C117 1 0x0 MHR118 V118 1 0x0 MHR119 V119 1 0x0 MHR120 V120 1 0x0 C130 MC130 1 0x0 V131 MHR131 1 0x0 HBW_Program.S0_15 MHR132 1 0x0 CT10.Acc MHR137 1 0x0 V10 MHR139 1"

// Rung HBW_Copy_State#2
// Offset 49
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC400 C400 1 0x0 MC401 C401 1 0x0 MC402 C402 1 0x0 MC403 C403 1 0x0 MC404 C404 1 0x0 MC405 C405 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC3 C3 1"

// Rung VGR_Copy_State#2
// Offset 23
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC400 C800 1 0x0 Y39 MI400 1 0x0 MC401 C801 1 0x0 MC402 C802 1 0x0 Y53 MI401 1 0x0 Y15 MI402 1 0x0 MC403 C803 1"

// Rung MPO_Copy_State#2
// Offset 19
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MHR1600 V3200 1 0x0 MC800 C1610 1"

// Rung SLD_Copy_State#2
// Offset 9
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 C1200 1"

// Rung SSC_Copy_State#2
// Offset 7
NOP

// Rung SSC_Copy_State#3
// Offset 8
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Mini Factory Fall 2021 Project For CS 453/454/553/554 "
"Advanced Robotics I and II<br> <br>Date 09/17/21"
#END

NOP

// Rung $Main#2
// Offset 1
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#3
// Offset 4
#BEGIN FMT_COMMENT 
"Run HBW_Encoders"
#END

STR ST1
RUN HBW_Encoders

// Rung $Main#4
// Offset 7
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#5
// Offset 10
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#6
// Offset 13
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#7
// Offset 16
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Encoders
$PRGRM HBW_Encoders

// Rung HBW_Encoders#1
// Offset 0
#BEGIN FMT_COMMENT 
"<center><FONT tsize=4>HBW X (Horizontal) Encoder "
"logic</FONT><br></center>"
#END

NOP

// Rung HBW_Encoders#2
// Offset 1
#BEGIN FMT_COMMENT 
"X Encoder Up Down Counter"
#END

STR C51
STR C50
UDCG CT10 DST511 DST511

// Rung HBW_Encoders#3
// Offset 6
STR HBW_Encoders.FirstRun
OUT $HBW_X_Encoder.ResetLevel

// Rung HBW_Encoders#4
// Offset 8
STR ST1
COPY 0x1 "4 0x0 $HBW_X_Encoder.Acc V10 1"

// Rung HBW_Encoders#5
// Offset 15
STR X8
OUT C8

// Rung HBW_Encoders#6
// Offset 17
STR X9
OUT C9

// Rung HBW_Encoders#7
// Offset 19
#BEGIN FMT_COMMENT 
"Encoder Right. Move to Conveyor"
#END

STRPD X8
ANDN X9
STRND X8
AND X9
ORSTR
STR X8
ANDPD X9
ORSTR
STRN X8
ANDND X9
ORSTR
OUT C50

// Rung HBW_Encoders#8
// Offset 35
#BEGIN FMT_COMMENT 
"Encoder Left. Move to Storage"
#END

STRPD X9
ANDN X8
STRND X9
AND X8
ORSTR
STR X9
ANDPD X8
ORSTR
STRN X9
ANDND X8
ORSTR
OUT C51

// End of Code Block HBW_Encoders
$PGMEND HBW_Encoders

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
NOP

// Rung HBW_Program#2
// Offset 1
#BEGIN FMT_COMMENT 
"Initialization and Reset stage"
#END

SG HBW_Program.S0

// Rung HBW_Program#3
// Offset 3
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#4
// Offset 11
#BEGIN FMT_COMMENT 
"Jump to Homing Stage"
#END

STR ST1
JMP HBW_Program.S5

// Rung HBW_Program#5
// Offset 13
#BEGIN FMT_COMMENT 
"Ready Stage<br>"
#END

SG HBW_Program.S1

// Rung HBW_Program#6
// Offset 15
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#7
// Offset 23
#BEGIN FMT_COMMENT 
"Set Ready status"
#END

STR ST1
OUT C130

// Rung HBW_Program#8
// Offset 25
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 0 V131

// Rung HBW_Program#9
// Offset 28
#BEGIN FMT_COMMENT 
"Task Send"
#END

STR C101
JMP HBW_Program.S7

// Rung HBW_Program#10
// Offset 30
#BEGIN FMT_COMMENT 
"Task Recieve"
#END

STR C102
JMP HBW_Program.S12

// Rung HBW_Program#11
// Offset 32
#BEGIN FMT_COMMENT 
"Task Reset"
#END

STR C103
JMP HBW_Program.S0

// Rung HBW_Program#12
// Offset 34
#BEGIN FMT_COMMENT 
"Manual Control"
#END

STR C104
JMP HBW_Program.S3

// Rung HBW_Program#13
// Offset 36
SG HBW_Program.S12

// Rung HBW_Program#14
// Offset 38
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#15
// Offset 46
NOP

// Rung HBW_Program#16
// Offset 47
NOP

// Rung HBW_Program#17
// Offset 48
NOP

// Rung HBW_Program#18
// Offset 49
#BEGIN FMT_COMMENT 
"Task Send"
#END

SG HBW_Program.S7

// Rung HBW_Program#19
// Offset 51
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#20
// Offset 59
#BEGIN FMT_COMMENT 
"X Home - PWM"
#END

STRLE V10 700
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 200 V118
OUT Y50

// Rung HBW_Program#21
// Offset 78
STRGT V10 700
JMP HBW_Program.S1

// Rung HBW_Program#22
// Offset 83
#BEGIN FMT_COMMENT 
"Fault State"
#END

SG HBW_Program.S2

// Rung HBW_Program#23
// Offset 85
NOP

// Rung HBW_Program#24
// Offset 86
STR ST2
JMP HBW_Program.S0

// Rung HBW_Program#25
// Offset 88
#BEGIN FMT_COMMENT 
"HBW Manual Control"
#END

SG HBW_Program.S3

// Rung HBW_Program#26
// Offset 90
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#27
// Offset 98
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 50 V131

// Rung HBW_Program#28
// Offset 101
#BEGIN FMT_COMMENT 
"Manual X PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 100 V118

// Rung HBW_Program#29
// Offset 116
#BEGIN FMT_COMMENT 
"Manual X Left"
#END

STR C110
OUT Y50

// Rung HBW_Program#30
// Offset 118
#BEGIN FMT_COMMENT 
"Manual X Right"
#END

STR C111
ANDN X0
OUT Y51

// Rung HBW_Program#31
// Offset 121
#BEGIN FMT_COMMENT 
"Manual Y PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 100 V118

// Rung HBW_Program#32
// Offset 136
#BEGIN FMT_COMMENT 
"Manual Y In"
#END

STR C112
ANDN X11
OUT Y7

// Rung HBW_Program#33
// Offset 139
#BEGIN FMT_COMMENT 
"Manual Y Out"
#END

STR C113
ANDN X10
OUT Y6

// Rung HBW_Program#34
// Offset 142
#BEGIN FMT_COMMENT 
"Manual Z PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 100 V118

// Rung HBW_Program#35
// Offset 157
#BEGIN FMT_COMMENT 
"Manual Z Up"
#END

STR C114
ANDN X3
OUT Y5

// Rung HBW_Program#36
// Offset 160
#BEGIN FMT_COMMENT 
"Manual Z Down"
#END

STR C115
OUT Y4

// Rung HBW_Program#37
// Offset 162
#BEGIN FMT_COMMENT 
"Manual Conveyor PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 100 V118

// Rung HBW_Program#38
// Offset 177
#BEGIN FMT_COMMENT 
"Manual Conveyor In"
#END

STR C116
OUT Y49

// Rung HBW_Program#39
// Offset 179
#BEGIN FMT_COMMENT 
"Manual Conveyor Out"
#END

STR C117
OUT Y48

// Rung HBW_Program#40
// Offset 181
#BEGIN FMT_COMMENT 
"Jump to Ready"
#END

STR C103
JMP HBW_Program.S0

// Rung HBW_Program#41
// Offset 183
#BEGIN FMT_COMMENT 
"<FONT tsize=4>Homing Stage</FONT>"
#END

SG HBW_Program.S5

// Rung HBW_Program#42
// Offset 185
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#43
// Offset 193
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 33 V131

// Rung HBW_Program#44
// Offset 196
#BEGIN FMT_COMMENT 
"X Home - PWM"
#END

STRN X0
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 200 100
OUT Y51

// Rung HBW_Program#45
// Offset 212
#BEGIN FMT_COMMENT 
"Y Home - PWM"
#END

STRN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 75
OUT Y7

// Rung HBW_Program#46
// Offset 228
#BEGIN FMT_COMMENT 
"Z Home - PWM"
#END

STRN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 200 75
OUT Y5

// Rung HBW_Program#47
// Offset 244
#BEGIN FMT_COMMENT 
"Y Home - PWM"
#END

STRN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 200 75
OUT Y7

// Rung HBW_Program#48
// Offset 260
#BEGIN FMT_COMMENT 
"Jump to Homing Reset Stage"
#END

STR X0
AND X3
AND X11
JMP HBW_Program.S6

// Rung HBW_Program#49
// Offset 264
#BEGIN FMT_COMMENT 
"<FONT tsize=4>Homing Reset Stage</FONT>"
#END

SG HBW_Program.S6

// Rung HBW_Program#50
// Offset 266
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#51
// Offset 274
#BEGIN FMT_COMMENT 
"Reset counter for X axis encoder"
#END

STR ST1
RSTCT CT10

// Rung HBW_Program#52
// Offset 276
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 66 V131

// Rung HBW_Program#53
// Offset 279
#BEGIN FMT_COMMENT 
"Timer Delay<br>Wait for motor momentom to actually stop"
#END

STR ST1
ONDTMR T3 500 C0

// Rung HBW_Program#54
// Offset 283
#BEGIN FMT_COMMENT 
"Reset X Encoder"
#END

STR T3.Done
OUT $HBW_X_Encoder.ResetLevel

// Rung HBW_Program#55
// Offset 285
#BEGIN FMT_COMMENT 
"Jump to Ready"
#END

STR T3.Done
JMP HBW_Program.S1

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
SG VGR_Program.S0

// Rung VGR_Program#2
// Offset 2
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#3
// Offset 10
STR ST1
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 100 100

// Rung VGR_Program#4
// Offset 25
STR ST1
ANDN X27
OUT Y26

// Rung VGR_Program#5
// Offset 28
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#6
// Offset 30
SG VGR_Program.S1

// Rung VGR_Program#7
// Offset 32
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#8
// Offset 40
#BEGIN FMT_COMMENT 
"Rotate CW<br>"
#END

STR C400
JMP VGR_Program.S2

// Rung VGR_Program#9
// Offset 42
#BEGIN FMT_COMMENT 
"Rotate CCW"
#END

STR C401
JMP VGR_Program.S3

// Rung VGR_Program#10
// Offset 44
#BEGIN FMT_COMMENT 
"Move Up"
#END

STR C402
JMP VGR_Program.S4

// Rung VGR_Program#11
// Offset 46
#BEGIN FMT_COMMENT 
"Move Down"
#END

STR C403
JMP VGR_Program.S5

// Rung VGR_Program#12
// Offset 48
#BEGIN FMT_COMMENT 
"Move forward"
#END

STR C404
JMP VGR_Program.S6

// Rung VGR_Program#13
// Offset 50
#BEGIN FMT_COMMENT 
"Move Backward"
#END

STR C405
JMP VGR_Program.S7

// Rung VGR_Program#14
// Offset 52
STR C406
JMP VGR_Program.S8

// Rung VGR_Program#15
// Offset 54
STR C407
JMP VGR_Program.S9

// Rung VGR_Program#16
// Offset 56
SG VGR_Program.S2

// Rung VGR_Program#17
// Offset 58
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#18
// Offset 66
STR ST1
ANDN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y26

// Rung VGR_Program#19
// Offset 83
STRND C400
JMP VGR_Program.S1

// Rung VGR_Program#20
// Offset 86
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#21
// Offset 88
SG VGR_Program.S3

// Rung VGR_Program#22
// Offset 90
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#23
// Offset 98
STR ST1
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y27

// Rung VGR_Program#24
// Offset 114
STRND C401
JMP VGR_Program.S1

// Rung VGR_Program#25
// Offset 117
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#26
// Offset 119
SG VGR_Program.S4

// Rung VGR_Program#27
// Offset 121
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#28
// Offset 129
STR ST1
ANDN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y22

// Rung VGR_Program#29
// Offset 146
STRND C402
JMP VGR_Program.S1

// Rung VGR_Program#30
// Offset 149
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#31
// Offset 151
SG VGR_Program.S5

// Rung VGR_Program#32
// Offset 153
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#33
// Offset 161
STR ST1
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y23

// Rung VGR_Program#34
// Offset 177
STRND C403
JMP VGR_Program.S1

// Rung VGR_Program#35
// Offset 180
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#36
// Offset 182
SG VGR_Program.S6

// Rung VGR_Program#37
// Offset 184
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#38
// Offset 192
STR ST1
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 50
OUT Y25

// Rung VGR_Program#39
// Offset 208
STRND C404
JMP VGR_Program.S1

// Rung VGR_Program#40
// Offset 211
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#41
// Offset 213
SG VGR_Program.S7

// Rung VGR_Program#42
// Offset 215
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#43
// Offset 223
STR ST1
ANDN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 100
OUT Y24

// Rung VGR_Program#44
// Offset 240
STRND C405
JMP VGR_Program.S1

// Rung VGR_Program#45
// Offset 243
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#46
// Offset 245
SG VGR_Program.S8

// Rung VGR_Program#47
// Offset 247
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#48
// Offset 255
STR ST1
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 100 15
OUT Y53

// Rung VGR_Program#49
// Offset 271
STRND C406
JMP VGR_Program.S1

// Rung VGR_Program#50
// Offset 274
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#51
// Offset 276
SG VGR_Program.S9

// Rung VGR_Program#52
// Offset 278
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#53
// Offset 286
STR ST1
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 200 70
OUT Y15

// Rung VGR_Program#54
// Offset 302
STRND C407
JMP VGR_Program.S1

// Rung VGR_Program#55
// Offset 305
STR C3
JMP VGR_Program.S0

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"This first stage currently sends the crane back to the "
"turn table, resets the compressor, and resets out detection "
"bit. Once it is sent back to the turn table it jumps to "
"stage 1"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STRN X16
OUT Y15

// Rung MPO_Program#4
// Offset 12
STR ST1
RST Y17

// Rung MPO_Program#5
// Offset 14
STR ST1
RST Y18

// Rung MPO_Program#6
// Offset 16
STR ST1
RST C1000

// Rung MPO_Program#7
// Offset 18
STRN X12
OUT Y46

// Rung MPO_Program#8
// Offset 20
STR X16
JMP MPO_Program.S2

// Rung MPO_Program#9
// Offset 22
SG MPO_Program.S1

// Rung MPO_Program#10
// Offset 24
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#11
// Offset 32
#BEGIN FMT_COMMENT 
"Always be Detecting if we have something, if we get "
"something set C1000 on"
#END

STRND X24
SET C1000

// Rung MPO_Program#12
// Offset 35
#BEGIN FMT_COMMENT 
"If we have something (C1000) and we get a go from Doug "
"(C800), start by turning on the compressor"
#END

STR C1000
AND C800
SET Y17

// Rung MPO_Program#13
// Offset 38
#BEGIN FMT_COMMENT 
"If the compressor is on, and we are outside the oven, open "
"the door"
#END

STR Y17
AND X18
SET Y20

// Rung MPO_Program#14
// Offset 41
#BEGIN FMT_COMMENT 
"If the Oven Door is Open, and we are not all the way "
"inside, move the loading tray inside"
#END

STR Y20
ANDN X17
AND C800
OUT Y44

// Rung MPO_Program#15
// Offset 45
STR C801
OUT Y52

// Rung MPO_Program#16
// Offset 47
STR C802
OUT Y44

// Rung MPO_Program#17
// Offset 49
STR C803
JMP MPO_Program.S0

// Rung MPO_Program#18
// Offset 51
NOP

// Rung MPO_Program#19
// Offset 52
SG MPO_Program.S2

// Rung MPO_Program#20
// Offset 54
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#21
// Offset 62
#BEGIN FMT_COMMENT 
"If we have detected something at the oven (c800), are not "
"already at the oven (X19), and the vacuum is not on [Which "
"means we do not have anything] (Y18), move crane towards "
"oven (Y53)"
#END

STRN X19
AND C800
ANDN Y18
OUT Y53

// Rung MPO_Program#22
// Offset 66
#BEGIN FMT_COMMENT 
"When we first reach the oven (X19), turn on the compressor(Y17)"
#END

STRPD X19
SET Y17

// Rung MPO_Program#23
// Offset 69
#BEGIN FMT_COMMENT 
"When we reach the oven (X19) go down, and come back up "
"after 3 seconds"
#END

STRPD X19
OFFDTMR T0 3000 Y19

// Rung MPO_Program#24
// Offset 74
#BEGIN FMT_COMMENT 
"Turn on the vacuum in order to pick up disk, before the "
"timer turns the crane down bit off. #TODO finish comment "
"here"
#END

STRLE T0.Acc 750
AND T0.Timing
SET Y18

// Rung MPO_Program#25
// Offset 80
STRPD T0.Done
AND X19
JMP MPO_Program.S3

// Rung MPO_Program#26
// Offset 84
STR C803
JMP MPO_Program.S0

// Rung MPO_Program#27
// Offset 86
SG MPO_Program.S3

// Rung MPO_Program#28
// Offset 88
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#29
// Offset 96
#BEGIN FMT_COMMENT 
"When the vacuum is on [which means we have something] "
"(Y18), we are done timing (T0.Done), and we are not at the "
"turn table position (X16) then run the crane over to the "
"turn table position(Y15)"
#END

STR Y18
ANDN X16
OUT Y15

// Rung MPO_Program#30
// Offset 99
#BEGIN FMT_COMMENT 
"When we turn off the vacuum(Y18) and are at the turntable "
"positon(X16), jump to the next stage"
#END

STRPD X16
OFFDTMR T1 3000 Y19

// Rung MPO_Program#31
// Offset 104
STRLE T1.Acc 750
AND T1.Timing
RST Y18

// Rung MPO_Program#32
// Offset 110
STR X16
ANDPD T1.Done
JMP MPO_Program.S4

// Rung MPO_Program#33
// Offset 114
#BEGIN FMT_COMMENT 
"This is the reset button"
#END

STR C803
JMP MPO_Program.S0

// Rung MPO_Program#34
// Offset 116
SG MPO_Program.S4

// Rung MPO_Program#35
// Offset 118
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#36
// Offset 126
STRN X15
AND C800
OUT Y45

// Rung MPO_Program#37
// Offset 129
STRPD X15
OFFDTMR T2 3000 Y43

// Rung MPO_Program#38
// Offset 134
STR X15
ANDPD T2.Done
ANDN X13
JMP MPO_Program.S5

// Rung MPO_Program#39
// Offset 139
STR C803
JMP MPO_Program.S0

// Rung MPO_Program#40
// Offset 141
SG MPO_Program.S5

// Rung MPO_Program#41
// Offset 143
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#42
// Offset 151
STR C800
ANDN X13
OUT Y45

// Rung MPO_Program#43
// Offset 154
STRPD X13
SET Y18

// Rung MPO_Program#44
// Offset 157
STRPD X13
OFFDTMR T4 2000 Y21

// Rung MPO_Program#45
// Offset 162
NOP

// Rung MPO_Program#46
// Offset 163
STR C803
JMP MPO_Program.S0

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"State 0: Listen for Doug's instruction to start module."
#END

SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
#BEGIN FMT_COMMENT 
"Am planning to add a button to jump to a state where there "
"is a test suite. To run conveyor, and ejectors<br> <br>"
"For now, goes automatically to state 1."
#END

STR ST1
JMP SLD_Program.S1

// Rung SLD_Program#4
// Offset 12
SG SLD_Program.S1

// Rung SLD_Program#5
// Offset 14
#BEGIN FMT_COMMENT 
"When the light barrier is broken, turns on timer to run "
"conveyor belt with disk until the middle of color sensor."
#END

STR ST1
ANDND X35
OFFDTMR T200 3000 C1600

// Rung SLD_Program#6
// Offset 20
#BEGIN FMT_COMMENT 
"C1600 is set to true when timer is running so the conveyor moves"
#END

STR C1600
OUT Y30

// Rung SLD_Program#7
// Offset 22
#BEGIN FMT_COMMENT 
"When the timer is done, move to stage 2."
#END

STR T200.Done
JMP SLD_Program.S2

// Rung SLD_Program#8
// Offset 24
NOP

// Rung SLD_Program#9
// Offset 25
SG SLD_Program.S2

// Rung SLD_Program#10
// Offset 27
#BEGIN FMT_COMMENT 
"State 2 is where color is determined by checking if the "
"analog value is within a range, and conveyor timer distance "
"is set based on color.<br> <br>"
"Need to integrate a counter here still."
#END

NOP

// Rung SLD_Program#11
// Offset 28
#BEGIN FMT_COMMENT 
"Subscrib is to get value from color sensor and convert it "
"to something the HMI understands.<br> <br>Need help with HMI"
#END

STR ST1
SUBSCRIB "4 WX0 V3200 1 0x4"

// Rung SLD_Program#12
// Offset 33
#BEGIN FMT_COMMENT 
"The disk should now be in the center of the color sensor. "
"This function checks if the color of the disk is in the "
"blue range. If so, sets boolean value C1601 to true."
#END

STR ST1
RANGECHECK V3200 0x1 23000 22000 C1601

// Rung SLD_Program#13
// Offset 38
STR ST1
RANGECHECK V3200 0x1 20500 19500 C1602

// Rung SLD_Program#14
// Offset 43
STR ST1
RANGECHECK V3200 0x1 16000 15000 C1603

// Rung SLD_Program#15
// Offset 48
#BEGIN FMT_COMMENT 
"If C1601 is true, Off Delay timer starts output is set to "
"C1604 which when true runs Y30 for timer length."
#END

STR C1601
OFFDTMR T201 3000 C1604

// Rung SLD_Program#16
// Offset 52
#BEGIN FMT_COMMENT 
"When C1604 is true, turn on conveyor."
#END

STR C1604
OUT Y30

// Rung SLD_Program#17
// Offset 54
STR C1602
OFFDTMR T202 2000 C1605

// Rung SLD_Program#18
// Offset 58
STR C1605
OUT Y30

// Rung SLD_Program#19
// Offset 60
STR C1603
OFFDTMR T203 1000 C1606

// Rung SLD_Program#20
// Offset 64
STR C1606
OUT Y30

// Rung SLD_Program#21
// Offset 66
STR T201.Done
JMP SLD_Program.S3

// Rung SLD_Program#22
// Offset 68
NOP

// Rung SLD_Program#23
// Offset 69
SG SLD_Program.S3

// Rung SLD_Program#24
// Offset 71
NOP

// Rung SLD_Program#25
// Offset 72
STRND X36
OFFDTMR T204 5000 C1611

// Rung SLD_Program#26
// Offset 77
STR C1611
OUT Y34

// Rung SLD_Program#27
// Offset 79
STR T204.Done
JMP SLD_Program.S1

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STRN X40
OUT Y36

// Rung SSC_Program#4
// Offset 12
STRN X41
OUT Y38

// Rung SSC_Program#5
// Offset 14
STR X40
AND X41
JMP SSC_Program.S1

// Rung SSC_Program#6
// Offset 17
SG SSC_Program.S1

// Rung SSC_Program#7
// Offset 19
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#8
// Offset 27
STR C1200
OUT Y36

// End of Code Block SSC_Program
$PGMEND SSC_Program

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierOv en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInle t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierWh ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBlu e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOut sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBelt _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"T3","T_HBW_S6","",""
#END

