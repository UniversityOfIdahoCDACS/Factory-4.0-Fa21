// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\hunte\Documents\Factory-4.0-Fa21\Factory-Fa21.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
dbde83c72922a7349deddfc047e828e23ee6b2c41f8cd074d9f3f260d82c8a21f32aae96e37ba77b
332162e64365007f0f9aa233fb5654f5dcd9e445b98498c4da93a957c1ad63aa26f25f25d4a4f628
4d23391caf08b1807b65f1adcb80a5b233498cef91fa405485f835e22dcb92df5cffacbd0398b888
25895e04f323f725195add1f50b1324760734d0fc65a54797f5751295faf55c350994497b13e0963
202e1c90bfb15616a79a8affb4821cbc285d245a42fc7d8d5b1cc40460a10719755c19d1d0f6ca6f
dc23f5b4f84716038b4add7d5c03e9a13d1835e16b373b44500ab03ab3a52f97e17da8f099b83e5e
32f3e47a558702bfdc82579208ecae7ba48b2d1b0c694ea452b17d589bdab9e86e49d609f8a7164c
a200074d0b81a39860d276cf536f9c3b4fa418f3e1603d1b1e01e84c1c62d0714697a0e4578fc26a
ad42cb382ab4f49389d791dd965741bde3b09729dd0610680d2edd5632a010e3dc40315833e4137c
cf0f39b106764b0423636f0589dae34c5cb296b154103885c45b0e5307878f717c3bfa7953c74f24
29c9ac88d2a007a603dcd8a128d97d54393ba40cee12eb118a7b8afcdd7345cf73e55d0378153d2a
91fd30abb7b8867813dc8ea493bccf94c4dd232e836c2c3b37d6e4df289fad872e77a89f0d2333d0
33427bc8f330ff8689281ed4a3306d6abae873cd3415f4df5869fb5035dd01c289abe304f0a5f0b3
9cd04a7ed01d3aa39b503821a8286181d20ead1dc3eca304c3f554e05392633052f592f3db29b06b
6d86fb7a54f48097e6fe244b964872c0ca32e3c73b90af16f8097484281719253b45d420f5f09458
8bb3c3992f74425d8278fc013389321661de70ce05b288f1aa907445ed174238f6074e9a93878af7
0da65d7ae4aa85a27204297dc4821c2817e948f6c9aa411ba2f05307c1d3e66342d9dd280e20af0c
7bbd21f399242cd5da2d9252bcdab412f9299195bb5cda8fb18586106bd93645e27c47ced7ee6d68
17c574cab87633b704253c7a00a9a78365e49eb4553b751f9c9bf81930eaf221f07466ec08b2a634
c1efd5ea0f175faf1147bca0a192c8ddf1c453bd8276e130d9ac381336093a800d35e0a0ed99bef7
b0501647a39eb31414496b0496368235d084b4bf8e54164ba95516f177a19a38cfc39b11635cc8b2
48269536a8bc46fe9a5737e2f0c745c986df840e5533242ee0f4b141ea072dd1411314bf9432412c
f532469750945fe6897fbcfce9c0eeb99c027411abf06a107f8d83dd03da4993e1e135d668fbd30c
529b87c121a380d0a35b740df8626472c5f816f52c5a4acb5f8889b1ba220e3c769e1b27e932b382
e321fd5f5723c5823e2fe13b3efc2313a16c5ec8cec007fd2ddb85ea26d53f9547d310da380044f3
28f02eb55bc86dd4eb5e63f73fd8dcfe43c579c9e6af22f587e6db85835a9b81ea15ceb04cdaad3f
d4e4eca952704caa3717d8c90ba50763ce774c4aa40c7f552a307e2e9d9b5648b0b74079606dc20a
b3607fe83722977acc48696a4ed786966bb90c3e60bd60dcb14fabe1f3573315578e3e7c2eb41503
4d705d102cd5fb80373acd18dd8f28411109b6775f6b683e462a5ea9abbda5a96f1a4fbe17edb6b3
7b9d599a77ded40262723034406d38d6ab21758425755029aa46b4a8887cb1bc2c43c73e865f1b9c
ab9a9bca0ce32d7280316100d66cd43ba057e115e2895f305278e9a79307d8b4e9c69ca87db994ea
defe5a3375d62c20747d5b43f268e079e213b6310123289118e17e1963dbe2fe88e64cadcf1cfab8
67baf9ec087e12f02f23b7d11384696c91254d5b6e32bfd9b0a3c3216638af641cab6a60465e6d72
cb2a4d378fb039a9cd99431e14f1b11ca6de67ff4c458b967f0463717200d0866549e296bb4d6cfa
c67e3d08b9c6f2cbcf57a45d6330ac0987d808151864c100db61e74066d91187d1261fff1c309bdf
5a62aae0a8e5ce64572d69ffcf759191f92993bb7f1845385e19d208a826f2336994fc1b1e445b4b
de0d2c926cbc3b8b7c526e81fc5767bb3a44092de63a12d3c5d02ba40397379221af3e884f30d21a
e81b1e7f758b52f3dd9f8533acc6c199c7e44c9f434a1f3ba2bcf5b5378f3311d0694e48529869c2
52f92331a06f586f00c0c399cc5a500c0f6fbfe9d4b5f3b2c7c06fa4d3287d4b353379651b7ab288
b91d2ae7a28122bf3e1b333f6d2d2345848edec8fed6cbe0ac639417f929806fad6d783a0d19e20a
ca4e368c424ee4e06e9d832561f8915764494933784e73963f363406512ac73b1cbc5a3c73df859a
a89dc166561b6724bc00080e280bc22cce6f62a95845791cd033a8f22ce39072cda9f07594859f31
7cfb5a54cef59ccd0160f4315e9e516d84a8f16b31c19a9938bf9eb1c0083cd93d9c534123cb1ee4
55a6fe0df4c3a227375e096b4558be800082b10b9c62627f84207a09463bd1bc699823dd875186a5
8622d9f48d7507c556b5cd5ea58459480fec7ecc985e35e33329e3170b54fcdac1cc4fb5f87af980
74ef7722205b7fac8b125782e3ecf34a519cf5e476df4104f43d5044eba197ddb9153f2a927d755d
229491cca2c9c6f9c0d97487990d49d0b9c7f5f8fb81cafcf47f1a7096c5a098bd6ed4b1e9ce9444
6e436675c7f2ba0b5e5d73e05524defe9bcde29e6f8d7bdd50d14764c5917d9f3e5fcc700452912b
44bbd11ef8fc1d76291950b14c24d6c17febfbef941123a21675c54eeaa89f3c856a926a54ff8526
633b188e2b9341c4b3d48bc5e4db0c80216d3baa24d8a2560136df524350b85263db1b641dea212f
9c2d3e4833aaad60a9bf64fe7890fefd10c19af8a8ce4f2c03b23819eca48c131f9aca48860930a8
e9b739ff5987c8046369205e2ec9173ec94eb10fed28f5e7443b5bd48d21cda3fcebb063752f59d6
133509975bce7dada28503a00f5a771c4b43453ce64623f0d178f401ca33ee1cde654dcb2eb77f3e
1f4d6c8dfad96e3ef22c21dff6665a39e023849032701eb678176074e12db6abad76a7a33536de4f
cbeedde4867094185f45deadf6b4d2903e74faba14cfd0b2d6c2882bede90b69d53803b806175f00
ea1f7f69d971f7a16ecffda1883bce187558c7306c53b2fefad0d74046b699a3ebed15938e03117c
0ee5bc28d659a1e312c914b1ffefdf83955cac7a4b6a48bd03fb3861d2eafc1511c172c917f9ff1a
02e2e73c930edc54e430275af7194c375b49c19b337babc6aead746c44c76d5b908c3a5e1547dfec
b0d221e86a565eef1a1b7f0b3fa493470851e6ec401c686d19fdaa1c91fab479070ee0c94b41e37e
fbfe74bf1e203f6f4028e96d6de1103c067a8a8d6282262e1e427628a59d0cd2d59f0cfea97ce74d
b74b509f16461f73fa05db018e90a7928ce19d67657d1b1a30377112a5b5176c6f3f925068ad5d72
48a0627445c9dd5ec2d79ff970fc84d4f9afa940f8a80588f1e85205da02a933fa51e18ae6418c8f
a4470e82fbae7b505537f09ba5be8e88f80908fed4e0ce48b72968825e1dab9cfa689bc169c2b08e
20bdefd9ece309732d11832ee996954ccab56a4b3dd741f2b9afb9f82735356c65f6b983dc570fd5
b074c639cf371951079e6db3d0dac54d9ba1407a2c9116d694ef6cccc92555cfc917b4a37802237e
a34552c7586095d382524639aa4642c7072cef26deab256d2cf3e175cd323bde7fc3c87baacf0b79
842ea9b4cdddd4a20d15e04241a1002ca63e091aa429504f7529f62e852039b2026905a26e3da9b4
4e70048dbc62f80f599209ba75dfc338ce59773f69beed5a08577f409b3bdde7b10cbcacd2a92a8a
0fe3f3d53c4b8ffd01c32d506d48b4478b9906a9b9af6d92aac28329b534aedb008a969ee770e84b
5cb270efc189df76858b73d357fcab9af4678b0fa109f3c593fe96f8be6be32d877b8ca03fbfe5a5
3279b9ab349bd3c52f49db28f258b3ac38f80b44465cbb8e7ab841d5470832151f31b228b51eebc7
5ada80c0440fbfad329dfdab7a81f7504058ead31e4359a14448bbb6879eb0498b58763e688172c4
90cfe738ef5598579eb63bcb0fd5fefb9959e268ea70ed46b05ce961c3735241b5e1be96a972d26d
8cd285d8f74ee97a69d160eb33823d9ed82b0796f6be4acd32052d58554a040fcd601a8b4e7fb21b
0c1c2ac23196b4850b397b44f08d9e8267c10a4b8f6a10d98390a1f95a2f5e91fb81edc0565f824c
d578715f4020403653cec36ec8e15f72a8ab4424ab9e2cda4437805eb441cc2e3da9f756cac880c9
f1e82185209fa73e2f5f08608c886e836c83c1904753ead1972abe0e191069b4653aef6b062b3b84
2b096f08647685a78ea38fb11b4607052d2aa07f7ec7c86adc16a5bcf9f449f57c05142ec1adbf4c
963db686a520c1611d1467c5add153059ee5a32bf858c88d1ea54e223d7366e90c19edef16dae9a7
8af3c4f12d8d9b7a2d370d668db5dc9d376b9972a38779e0f2f19f05ab10d41d29effce4f39a74a9
c5504d65d44c87c0de2485451ead6e8dc22e720a4c3fae28d5e5154df4fc66c91d460b88e00a6007
3f1365b95c044363757edfc6ad1794bdd9582dfc7e968e4b4f06e6887d7de4c350882f491f8f41b1
cbbde807ff3c0b984014aa94469aecc6c7b291dee16471b595c116bfd8b4314c9fa3fa1149f6057b
6275e55a5792100621c639c70837a44f5f903fce9d448adb55e64850092ba459f8be21e0261da0ec
87e148520e06abb5cf2ff222b5d539aad80f36df54a8c881d2f77b503476c38901ee8c458e735339
b23ba559397093d526ac094406673d2d84a6c935a00e7f66670c5616fe7abb449ad96b295cf8ce99
ce90cdec2b8710f5e9ce7400eb50b75872883e575fd5e50bed5908720faab7ff03396c83e9625de8
67d6081925a1642063d716e17368a492c728427d208ab3d7db7db2a6e569ebf3a92b6822dee0b55a
30bb8431b20e4fc6dcc8202e42cce281938f8234e210a11a04c31fbcf5bb9ba4a779e0c66137a381
afec9049e4d2877e89ed5990a05a1e24c9cfb9961f5bb8ee7b7f39e420bfc43bca2533b81d70c4b6
5d50a04c426b357e3090943169868735095c4938658870a55db492e59817cab23db36f4ca5d45ade
bee33c43032bcddd13bd61581c2ff16658f518de65a4504e26245e0bbf55702895eef7e5a9881a97
49eaa846d7869e933f1c221c05a971d69d768eb4b1bbe5822388e14bdc5d2ab75d0a0fb51f40c82e
80fc03b6d9a69e58b0b51317eeca7c91336d3cf207d850138bcf0a49fb32954eb1837650aeaf0810
8a5ff84ddcc96a6a19a1f1f4761c9abb3c47a9736fa61c4ba0e0695d9d4cefa8c2c11a56efd2afac
b49c0e946f80c9197aa049658c592749003de03d6568b0f81df9088d60881d0e7d1eede457c22072
1c757176b34c2a6549dd3c48ed45705a02dab2b708d3e0e848b254c441c4f8eafe1f9a38ec571cb5
7d62f77737f1ee11894b2492438649bef59b0ecaddc54fae5d6b2f57cbda9beaa91ab3f04aed6575
54136379f9a42937dd711f2592094f69eba8b8c003bc8e858a1401ad7e16870c6c5a96c99824945d
4cf81483089df7dab56f38b8a727eb5ae5a60fffe2e4d0be8ef24beeda63dde725d9b131a1f1855a
8e6ae2ea0fa2fa2c0a50194f33cc1c6a28110f76bc3d65e85c967673cdaf5bfce9fa254095d1da93
fae48d9e04505a3614fe00b809f53911253f3a1af599343fbe4589fe7f3b6cb6883a0bb8833d7acc
8c30867f054b907c94a6121102e09a60de1b5a17985cbe00162be298bc7199afd55fb9d87f1f169b
7a78e184c6453382ddeb86102c656f0e306987c24d5d7a63a7b913575c9b8be4813eb9f533e568e4
8125f2f21a3626feb49458bb2e57d253475e75d6de00658400a87046f50c2171564abdc822fd5903
9a49671e961d4f12c652f3294c55a286907b1b51ba604e7a1ffa8ebca6f4b44c91edeb137f5d6338
65277ef777ad49eba3c29461d81c1cf54d9aecbde5878f08ea57fd2fe6183bffabe59325181b58a4
790486731b98f427a7a690c5a8b74c50feab111893bc4fff1e5dc02669cf2e585c87e45e4119cf0c
332007efe7e680076c38fe30ff7a5e0e65f00780a958734ca9fb0fd9a319180ab39312b79d18cfef
75469f820f19c573b463235a72122913fb5fde3f081e0bf9cd90ab0c5fd5d2f91f7fa79706fa4a95
32cf576221cde25c969bfcb857f05ff7d29098c45e023f6a602220b1474a702c07413973a9e49e01
234b22b49535d91bebf10f45d4713b0d9d61ee7f5b9653a8417d63ff4d42863e3a14953cb5d1544f
aed7f866247f0cc383fd889e0ec51e1c59a906eb41c0a97cdfbf2b219c3e5e595de30ef3abd8af9c
661cbb01910523c6103c956cc0d55b5ed1f6b28c12606f3913cb6b48c34b73235210c9b34660f03b
60fda8ffb070488dba51e29449704e12fc3e45c9580936813fa4677154affe2005597a451be7d070
982d8ccc4e112e325fe66b5b75c6522b1f1360cfad5b2df737ffbf960188fe475aa005ef1a94272b
90db0e016789a596a3442d17440c0aabd53a2afdbd15ae910f4dd60d0441ea1993898a187b642e03
9ad2847b168466d85d08ea557cf191abb8f963400a1a425ec00528f13c0b6230b0169cf3fd6856c8
91a7d41723c64ee46b3b302b267e682c625e604be918fd42f718c85f36b040ed00aac25ecfcef8ea
b64186272587753690b4d8651317ec9d10b4655be112605395ce2dfa6d22d3b97eb4657575342d08
c9b2f31fb744b37681529086a247c2dbaa46cbd0b5787b265eda9552eacb8fb97d6ca5dccf8bae6a
8f73a282f312288b1d0d83d83ce15e6ba844f82195d340243290ae595b580370ff52bbf2da02b907
a1f7cef19eb8b4f301ffe512a70feb83663282ec3a1c76f0487e94201d029305842f0c941bac6936
41f45e0e40231c71851116d69449256e8e13d2a9396fd1573d6d47a563b9292f8d7d76401b7dcecd
a384e7527c6ce9400abdce5418e7a4e684697a6698539f0ddb8b3848e0dbf49414b4c4351d490fdf
c43ba4be1a8e3ff173586d47675cb00295bbb2b4e1364248aaa5fa558390eeea96146b823aa3f20b
6135beb2146e478aa730ad59fcf22668aae5ba46e4c4729157f06d58bafa1974791d0375702df3df
a21e05437343fa90d624b7a731ea9c6e6e87af5c1523b4a04cf33c0cea71e1eb6c7575e5808826c4
bb4f5f4f0ce410f0dd62fca8f293486dba048a315d05ed5b5d15e6fc9b948d5aa3c34b6acec280ff
9cc6548e225e9bb8997574727e726d2ae003a5448141f93271c7e58296938b7584a86a6f1608608b
e2140e157d0958b96aa710e4da57464d0071812e602855ab915895e9d00260d1933c9661a59726b1
678158a77b5c91c249b4021a83fc28e0cc81c4f243286d0bf338dc973c710845f2d8426251301c96
a94e0f3113ec756b3f75188c73e2209f3aec86db4dced4e9408c41805c11611f9f03fe9b2943c378
ad2d8dc9737339a293db435e50f4749c6039d2f40096db1748ad2136a5d211f4723820a9554f76b9
dc52938a430e8753ff9a731030465f22a58a212471683f62fd85aaee31d5a71e6e34ccaf18c8effe
10386139baf8225b2fe33bcdeb24b0860ee828720faad159251e77508fdf0eddcb1f885b59c06c1d
fe803c85684f17bb9192cc80c7bb89ca5e29f8ec777b13d7413864c2c3d42a7056241cf22be16c06
ed51c6475b313144c1ebb9d5a7df27559be5285b447d7ad131a85d7f3845e35c71cc6a3a554b61f3
424d846745b0970489145b2f9eeab78c2ff07d5f718e5353fe7d00ca7333c72eaaba62a910a35e6c
8a53ddcb81aff9f154e0f718b318421c5b5d0d1626202b90fe23fe8fde832e4178f90770823fb604
17fe4492eb5072b00cda3ce2c88152f6d28cd4e606543750729703bfb6452d4b133f494165d3a8ec
c6c2014f247cccca36b7a69c6626373172097876faac3bba1f1d64011392a703ce6091a91fc90a89
7a3d0e3cc2c181cf0cb637cad42a78821c6eea0ca9d5c33eab22ecb7554d5207658d13a103cf1eeb
e51f7b3f44f8c5af72f2de811c0c856e311c3b8cf6b11ba952987d222b317f6c0a4b9cad8bfca8fa
b923e4ec6d830d96c4aeecb0e2f19524dde712aaccec4c332e50700b804f4c3405f57910ff38fa12
99da90d5276588513fc47e005357f0a6e3c80f81ccae8ef3e7b0fb51d03e2b1351452d9da3f14388
c843ab8185da65b61ca1e5ae619450c74b1e487dad10ca95a53db15a4846acc8a450c9c19c8470aa
5de633eb1e8ac1ce5cb1057794a79126fd6f5b6aba5bd2f586188c8b2d7da9005783ce26479346c3
91d325fd60cda99dd7955ad6c74ebdd4617dd220f9fedd7c876e36a8f599ebae1af341eb13fd71e1
0c8fe00f47a764417153094f96ff0ae24f7a7da1d01d1693b232b9fb8a82f68a32558f1fd265d4cd
c282bfd5e7400a5677732a1b3117b337e21cb885ee7e18b26edc9b40485964080e757d387e1df522
711143f5703256da50e9fa13a419184e012bfb12058598ec7edb6b098978c28ccf8b6b2ff62163f6
875a38daaf6cdda6ffd152609fe4b7627744a51cd82009d4af4cec4fc8431ec246a4b981c60afc0e
9a90dbc28c49ff3cdbb140982d7f00e19ecde2dbe3be0f0f97e407aeab76ab8e34b8b143c5a2a97b
1f3d842a780d568ae3a6e312c6aceed3612bfee37dc10bfc89d5603b89ab65c8d2e9ad24f37dbf49
200095d5d609afa4d81cdff8f8fb3843bc13aec5ace617ee5eb8cd1f77d24dbb2489ab81805dfa68
0f2455ab9d2901dec0800c3acd9339417bd1ecd5d56cd4a8f9061ce18e6ca15be6f78f572509a48e
cd0ed9714bf594823dab68c7a3a7077056b30978bad3c52f5aaf18d1854bf78d45e30c800c8e1be4
b6ad012b68ea032503945fc80123a4cbcd42bd4ba3505ec6ff24f86d10c1df63d3f85941b79851c2
db59053d4ac376b87f0105b4aa0f0bcec3337e647afbaf058b037861d85ef37ed9b772f70940804e
fcfdd496de422ec2540b801d247051744ce6567ad50d5c3b42c33ae838c089839ae6b26e3b851805
578d95a7c661aa4359904e3300078937c851bcc8725ec2687f31ac0ec0cf7e013fd611675906e399
ebc6adb6bdae67925ad85ba0b07b57c49d34e4fee14ddc012af3c63707b4ae209f1b919efb7ba400
03dcb8882bca676a8cb1de4069698afa7b4a1bf1d69755b253dd6f6469cc42f4545bbd9215e9a6dd
d32384de01bf2a8d71ce60462ea0924dea1fb7c8004b1abe5f6c3faa54bffef0712f395d04783ab9
a01d6bc2c7307786d5b7f2db8c6084178927b9657d3b1d8a719906f4768fcf14c0e12e10e795cecc
04c93dea79b1be5693e38b21d5c200488b5888d850a330a3832d65929d20a715b20a5154113e7d79
10e6a323303b1d89d07022c11450efeb362132a3281b0a453dc58b25420b634b84f180f1cb11e760
fa03172aa5dc78b017dfc3e847cb0eb5ca33c3dfa429769d906116e500d15241bd2b72f9018a9ce3
d39505688cb18b293c8d518e9d9ad0279391e2d03df59b4311db49b09201f98c768e2e52c71d3e7e
42d89bce9c6d3f95f3fed4e89a3e8f370406e21c45f2ddc1057a886730a6cee88fc5653c20d12213
009eca934600331be9455c236f023c377b7dd0f2477b4e03508911676316017e6bd43a8da05410e3
1beb475bfbc9d8777a761fb780fb2437afa60faa590b07f7fb71dc0844f04eeab265bcd705a16581
724af66d4385a1fa3df93684a9f7f00d735ad2e14f7508e02a7eca11da74598f461dfc194a90054c
f8431833724634245afea8139f88aac5a72c5cd299fc208f96b97e006723c76aeaf915838a86b91b
d4026794d9642a66526bcc4cd7bc710cf1e02065e458c367730eda02a03f8b117076aab8df031f37
b05d2a084a98f4536d1e8eac1360a22d691917e535cf477357b3eb30901763c85138bcf202f4ca42
39467575d0be07b2e605a9bfd8fdb02dcda10546459d443cf12930ec0087f3d6b0c833c819b4264b
9419f55e3711bc4e470544be88641f665a38ebe3ee0ff06035b49cdd06cb1b5f172734103362b78c
3928cbdb0cc9953f66b6f0b8f4412b9ac165433ea9133d2dd9e32651e21b77bb3ec5fe14be3153fb
5025f09b580cacdb7917cc1c350d540e5dbc9d4e78872b6cd8094c51cc9b3c2679a08dbb35d0edd9
ae0c733d94185ea96ba4e70871ea906586cb197fcd12398baf6b92f462422cfb3c8b9a23bc836f3d
a0ce83107cf750aca994162fcb26d15cee2b8a88530ddd4aa32b475042962da2d54a30127660517b
ac46762ec725945394791ca67c4511ad2b798d6840399124dfe9b14f645bf2c0794cf5b908ac6230
a14edd9c69024c7a04485901c0ff6cb08f53ab8743b748a5ebfca1e292c9c407ca2f9bc4c035304f
d4be5dca84a72c95601cb4f9068056910617ee1d7b8bde7dc3608d4ed023fa0a188ea02420bf1afe
ebefb8be624f96ebcc8534232d7c52b77d27c461aa13d289e4716724a4452a0a5450d54b6269b674
7b5e54214bfa7245d7c617af0b33899cf8714285da0ab6b6dab706fada8afc50e9a11ae93e3dd2f0
331d68ac827c6feaa619afd6e14f8f5afb7c07a312984f9346d7cb91bc7f065caeb568174d4418fd
2ea1218067a14c8bfedb4adb548d4590f6b19cbbdcf02bf3a6632dc71311fe31eae17a5e771afd0f
cc5fe1ace2114fd683570bcfff0ea760345c7d7552c8656c2e803245f92cc8f3f741f798843d8ef8
98a834ae4023578710bf18a566f89a7679b974bbaab9fa14b82a0d1d3e4e7eec1ef4d98e876a0541
55a1d0cebec3db6d08894d68539c9ec6ecde2b3d6f9b6fc7e29331decc208eae949d000551f0d8ed
3a54cbf48a796d592754a60fe13a6763d1e0d48cdc89a7262c5a60599b39957a85909d8f6fa77360
726204eb69e523afeacfc1ed913b07d2b9b94948627ed60f97455a35010c5a6bea27592b659234d9
bdbd093bb37dbafff9764b97c6801c2390c7e3890b10658c0d46bd54d507df12606971c2e058b2f0
3d689e4896b1bfcb4e284757a26449db5087bc58de16575ceca3f84b9188e7c2076a1089ec080149
71140df1e592a29d36003dbdcb7f6323a6ed30d5983b08ca213199321a851707bcbc350b694f28b2
879a94c5d9aa5be52eb1e6a2e72fec0ebcc1e4712a0114251c17572995e736a128ab0d53d899ae4b
c442d31bcecb29eb0ac034cc00440f81af41b289bb56d9b73456f3e728a3bc4b1818d447462aef67
12ea2c7e02a918d0ec87a29669ec369c543a2c1ff4050672bebcd760eb03a2cc46e7cb00741eb8e0
1ea743648587ed5469b594eda08ef1553cd3a7ce0e9b5a187d3744901e5c7afd8aafc247c7052057
2b6ae05a1299fd75a68961be3a118e9fddce81a2e86a1060ad5f007efa657b2ec3341129a0bfc49a
19d21ab8a349dc57c00df1e0c0d5607af32000b372991fc7d401e38c5b5514b6021239fee7400cee
448a59ae434a3025e801a83189d8c55f6333e19651a9224565c1183d0cf67116b58315bf518d84c5
867329814b2b8f8dd47919007b6bd32cea87a349adc41ae7681486ce68f9e8f50286c22607c65d59
fe8cbd4c95ae32dc138182a0dc5558fb68747e74710d7d5a2e6aa4c2f946b9239bbd4ded332680be
e699e628cca545b4304fdd6de087a703daffce803902a66a8dcf3ee51e2e45473389f868e6d36cff
9629431376ee170d0acb3a17be4c8be20f89b37a4cafe6152b7d0af9678d6a74f762acc188901ade
d33d59a43effc8c6900d4803ef2a7acba3e62b05241a9f537ae867363ec83a8175fc713c5ddc574c
93019cd0cced0e7f81d7843eeff7212e587d738beaf8969353f2854066579090b6287957a5e596bc
0e01262fe9a02b71dab66596af177e0a439c66e68803b05bf8a0d9ea9acc3e246a6a
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 HBW_Copy_State <Virtual>  0
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Encoders PROGRAM  0 -1
#END

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"Copy State"
#END

STR ST1
COPY 0x1 "4 0x0 MC101 C101 1 0x0 MC102 C102 1 0x0 MC103 C103 1 0x0 MC104 C104 1 0x0 MHR105 V105 1 0x0 MHR106 V106 1 0x0 MC110 C110 1 0x0 MC111 C111 1 0x0 MC112 C112 1 0x0 MC113 C113 1 0x0 MC114 C114 1 0x0 MC115 C115 1 0x0 MC116 C116 1 0x0 MC117 C117 1 0x0 MHR118 V118 1 0x0 MHR119 V119 1 0x0 MHR120 V120 1 0x0 C130 MC130 1 0x0 V131 MHR131 1 0x0 HBW_Program.S0_15 MHR132 1 0x0 CT10.Acc MHR137 1 0x0 V10 MHR139 1"

// Rung HBW_Copy_State#2
// Offset 49
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC400 C400 1 0x0 MC401 C401 1 0x0 MC402 C402 1 0x0 MC403 C403 1 0x0 MC404 C404 1 0x0 MC405 C405 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC3 C3 1"

// Rung VGR_Copy_State#2
// Offset 23
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC400 C800 1 0x0 MC401 C801 1 0x0 MC402 C802 1 0x0 MC403 C803 1 0x0 MC404 C804 1 0x0 MC405 C805 1 0x0 MC406 C806 1 0x0 MC407 C807 1 0x0 Y16 MI400 1 0x0 Y43 MI401 1"

// Rung MPO_Copy_State#2
// Offset 25
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MHR1600 V3200 1 0x0 MC800 C1610 1"

// Rung SLD_Copy_State#2
// Offset 9
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 C1200 1"

// Rung SSC_Copy_State#2
// Offset 7
NOP

// Rung SSC_Copy_State#3
// Offset 8
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Mini Factory Fall 2021 Project For CS 453/454/553/554 "
"Advanced Robotics I and II<br> <br>Date 09/17/21"
#END

NOP

// Rung $Main#2
// Offset 1
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#3
// Offset 4
#BEGIN FMT_COMMENT 
"Run HBW_Encoders"
#END

STR ST1
RUN HBW_Encoders

// Rung $Main#4
// Offset 7
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#5
// Offset 10
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#6
// Offset 13
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#7
// Offset 16
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Encoders
$PRGRM HBW_Encoders

// Rung HBW_Encoders#1
// Offset 0
#BEGIN FMT_COMMENT 
"<center><FONT tsize=4>HBW X (Horizontal) Encoder "
"logic</FONT><br></center>"
#END

NOP

// Rung HBW_Encoders#2
// Offset 1
#BEGIN FMT_COMMENT 
"X Encoder Up Down Counter"
#END

STR C51
STR C50
UDCG CT10 DST511 DST511

// Rung HBW_Encoders#3
// Offset 6
STR HBW_Encoders.FirstRun
OUT $HBW_X_Encoder.ResetLevel

// Rung HBW_Encoders#4
// Offset 8
STR ST1
COPY 0x1 "4 0x0 $HBW_X_Encoder.Acc V10 1"

// Rung HBW_Encoders#5
// Offset 15
STR X8
OUT C8

// Rung HBW_Encoders#6
// Offset 17
STR X9
OUT C9

// Rung HBW_Encoders#7
// Offset 19
#BEGIN FMT_COMMENT 
"Encoder Right. Move to Conveyor"
#END

STRPD X8
ANDN X9
STRND X8
AND X9
ORSTR
STR X8
ANDPD X9
ORSTR
STRN X8
ANDND X9
ORSTR
OUT C50

// Rung HBW_Encoders#8
// Offset 35
#BEGIN FMT_COMMENT 
"Encoder Left. Move to Storage"
#END

STRPD X9
ANDN X8
STRND X9
AND X8
ORSTR
STR X9
ANDPD X8
ORSTR
STRN X9
ANDND X8
ORSTR
OUT C51

// End of Code Block HBW_Encoders
$PGMEND HBW_Encoders

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
NOP

// Rung HBW_Program#2
// Offset 1
#BEGIN FMT_COMMENT 
"Initialization and Reset stage"
#END

SG HBW_Program.S0

// Rung HBW_Program#3
// Offset 3
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#4
// Offset 11
#BEGIN FMT_COMMENT 
"Jump to Homing Stage"
#END

STR ST1
JMP HBW_Program.S5

// Rung HBW_Program#5
// Offset 13
#BEGIN FMT_COMMENT 
"Ready Stage<br>"
#END

SG HBW_Program.S1

// Rung HBW_Program#6
// Offset 15
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#7
// Offset 23
#BEGIN FMT_COMMENT 
"Set Ready status"
#END

STR ST1
OUT C130

// Rung HBW_Program#8
// Offset 25
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 0 V131

// Rung HBW_Program#9
// Offset 28
#BEGIN FMT_COMMENT 
"Task Send"
#END

STR C101
JMP HBW_Program.S7

// Rung HBW_Program#10
// Offset 30
#BEGIN FMT_COMMENT 
"Task Recieve"
#END

STR C102
JMP HBW_Program.S12

// Rung HBW_Program#11
// Offset 32
#BEGIN FMT_COMMENT 
"Task Reset"
#END

STR C103
JMP HBW_Program.S0

// Rung HBW_Program#12
// Offset 34
#BEGIN FMT_COMMENT 
"Manual Control"
#END

STR C104
JMP HBW_Program.S3

// Rung HBW_Program#13
// Offset 36
SG HBW_Program.S12

// Rung HBW_Program#14
// Offset 38
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#15
// Offset 46
NOP

// Rung HBW_Program#16
// Offset 47
NOP

// Rung HBW_Program#17
// Offset 48
NOP

// Rung HBW_Program#18
// Offset 49
#BEGIN FMT_COMMENT 
"Task Send"
#END

SG HBW_Program.S7

// Rung HBW_Program#19
// Offset 51
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#20
// Offset 59
#BEGIN FMT_COMMENT 
"X Home - PWM"
#END

STRLE V10 700
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 200 V118
OUT Y50

// Rung HBW_Program#21
// Offset 78
STRGT V10 700
JMP HBW_Program.S1

// Rung HBW_Program#22
// Offset 83
#BEGIN FMT_COMMENT 
"Fault State"
#END

SG HBW_Program.S2

// Rung HBW_Program#23
// Offset 85
NOP

// Rung HBW_Program#24
// Offset 86
STR ST2
JMP HBW_Program.S0

// Rung HBW_Program#25
// Offset 88
#BEGIN FMT_COMMENT 
"HBW Manual Control"
#END

SG HBW_Program.S3

// Rung HBW_Program#26
// Offset 90
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#27
// Offset 98
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 50 V131

// Rung HBW_Program#28
// Offset 101
#BEGIN FMT_COMMENT 
"Manual X PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 100 V118

// Rung HBW_Program#29
// Offset 116
#BEGIN FMT_COMMENT 
"Manual X Left"
#END

STR C110
OUT Y50

// Rung HBW_Program#30
// Offset 118
#BEGIN FMT_COMMENT 
"Manual X Right"
#END

STR C111
ANDN X0
OUT Y51

// Rung HBW_Program#31
// Offset 121
#BEGIN FMT_COMMENT 
"Manual Y PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 100 V118

// Rung HBW_Program#32
// Offset 136
#BEGIN FMT_COMMENT 
"Manual Y In"
#END

STR C112
ANDN X11
OUT Y7

// Rung HBW_Program#33
// Offset 139
#BEGIN FMT_COMMENT 
"Manual Y Out"
#END

STR C113
ANDN X10
OUT Y6

// Rung HBW_Program#34
// Offset 142
#BEGIN FMT_COMMENT 
"Manual Z PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 100 V118

// Rung HBW_Program#35
// Offset 157
#BEGIN FMT_COMMENT 
"Manual Z Up"
#END

STR C114
ANDN X3
OUT Y5

// Rung HBW_Program#36
// Offset 160
#BEGIN FMT_COMMENT 
"Manual Z Down"
#END

STR C115
OUT Y4

// Rung HBW_Program#37
// Offset 162
#BEGIN FMT_COMMENT 
"Manual Conveyor PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 100 V118

// Rung HBW_Program#38
// Offset 177
#BEGIN FMT_COMMENT 
"Manual Conveyor In"
#END

STR C116
OUT Y49

// Rung HBW_Program#39
// Offset 179
#BEGIN FMT_COMMENT 
"Manual Conveyor Out"
#END

STR C117
OUT Y48

// Rung HBW_Program#40
// Offset 181
#BEGIN FMT_COMMENT 
"Jump to Ready"
#END

STR C103
JMP HBW_Program.S0

// Rung HBW_Program#41
// Offset 183
#BEGIN FMT_COMMENT 
"<FONT tsize=4>Homing Stage</FONT>"
#END

SG HBW_Program.S5

// Rung HBW_Program#42
// Offset 185
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#43
// Offset 193
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 33 V131

// Rung HBW_Program#44
// Offset 196
#BEGIN FMT_COMMENT 
"X Home - PWM"
#END

STRN X0
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 200 100
OUT Y51

// Rung HBW_Program#45
// Offset 212
#BEGIN FMT_COMMENT 
"Y Home - PWM"
#END

STRN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 75
OUT Y7

// Rung HBW_Program#46
// Offset 228
#BEGIN FMT_COMMENT 
"Z Home - PWM"
#END

STRN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 200 75
OUT Y5

// Rung HBW_Program#47
// Offset 244
#BEGIN FMT_COMMENT 
"Y Home - PWM"
#END

STRN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 200 75
OUT Y7

// Rung HBW_Program#48
// Offset 260
#BEGIN FMT_COMMENT 
"Jump to Homing Reset Stage"
#END

STR X0
AND X3
AND X11
JMP HBW_Program.S6

// Rung HBW_Program#49
// Offset 264
#BEGIN FMT_COMMENT 
"<FONT tsize=4>Homing Reset Stage</FONT>"
#END

SG HBW_Program.S6

// Rung HBW_Program#50
// Offset 266
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#51
// Offset 274
#BEGIN FMT_COMMENT 
"Reset counter for X axis encoder"
#END

STR ST1
RSTCT CT10

// Rung HBW_Program#52
// Offset 276
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 66 V131

// Rung HBW_Program#53
// Offset 279
#BEGIN FMT_COMMENT 
"Timer Delay<br>Wait for motor momentom to actually stop"
#END

STR ST1
ONDTMR T3 500 C0

// Rung HBW_Program#54
// Offset 283
#BEGIN FMT_COMMENT 
"Reset X Encoder"
#END

STR T3.Done
OUT $HBW_X_Encoder.ResetLevel

// Rung HBW_Program#55
// Offset 285
#BEGIN FMT_COMMENT 
"Jump to Ready"
#END

STR T3.Done
JMP HBW_Program.S1

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
SG VGR_Program.S0

// Rung VGR_Program#2
// Offset 2
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#3
// Offset 10
STR ST1
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 100 100

// Rung VGR_Program#4
// Offset 25
STR ST1
ANDN X27
OUT Y26

// Rung VGR_Program#5
// Offset 28
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#6
// Offset 30
SG VGR_Program.S1

// Rung VGR_Program#7
// Offset 32
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#8
// Offset 40
#BEGIN FMT_COMMENT 
"Rotate CW<br>"
#END

STR C400
JMP VGR_Program.S2

// Rung VGR_Program#9
// Offset 42
#BEGIN FMT_COMMENT 
"Rotate CCW"
#END

STR C401
JMP VGR_Program.S3

// Rung VGR_Program#10
// Offset 44
#BEGIN FMT_COMMENT 
"Move Up"
#END

STR C402
JMP VGR_Program.S4

// Rung VGR_Program#11
// Offset 46
#BEGIN FMT_COMMENT 
"Move Down"
#END

STR C403
JMP VGR_Program.S5

// Rung VGR_Program#12
// Offset 48
#BEGIN FMT_COMMENT 
"Move forward"
#END

STR C404
JMP VGR_Program.S6

// Rung VGR_Program#13
// Offset 50
#BEGIN FMT_COMMENT 
"Move Backward"
#END

STR C405
JMP VGR_Program.S7

// Rung VGR_Program#14
// Offset 52
STR C406
JMP VGR_Program.S8

// Rung VGR_Program#15
// Offset 54
STR C407
JMP VGR_Program.S9

// Rung VGR_Program#16
// Offset 56
SG VGR_Program.S2

// Rung VGR_Program#17
// Offset 58
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#18
// Offset 66
STR ST1
ANDN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y26

// Rung VGR_Program#19
// Offset 83
STRND C400
JMP VGR_Program.S1

// Rung VGR_Program#20
// Offset 86
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#21
// Offset 88
SG VGR_Program.S3

// Rung VGR_Program#22
// Offset 90
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#23
// Offset 98
STR ST1
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y27

// Rung VGR_Program#24
// Offset 114
STRND C401
JMP VGR_Program.S1

// Rung VGR_Program#25
// Offset 117
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#26
// Offset 119
SG VGR_Program.S4

// Rung VGR_Program#27
// Offset 121
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#28
// Offset 129
STR ST1
ANDN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y22

// Rung VGR_Program#29
// Offset 146
STRND C402
JMP VGR_Program.S1

// Rung VGR_Program#30
// Offset 149
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#31
// Offset 151
SG VGR_Program.S5

// Rung VGR_Program#32
// Offset 153
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#33
// Offset 161
STR ST1
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y23

// Rung VGR_Program#34
// Offset 177
STRND C403
JMP VGR_Program.S1

// Rung VGR_Program#35
// Offset 180
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#36
// Offset 182
SG VGR_Program.S6

// Rung VGR_Program#37
// Offset 184
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#38
// Offset 192
STR ST1
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 50
OUT Y25

// Rung VGR_Program#39
// Offset 208
STRND C404
JMP VGR_Program.S1

// Rung VGR_Program#40
// Offset 211
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#41
// Offset 213
SG VGR_Program.S7

// Rung VGR_Program#42
// Offset 215
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#43
// Offset 223
STR ST1
ANDN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 100
OUT Y24

// Rung VGR_Program#44
// Offset 240
STRND C405
JMP VGR_Program.S1

// Rung VGR_Program#45
// Offset 243
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#46
// Offset 245
SG VGR_Program.S8

// Rung VGR_Program#47
// Offset 247
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#48
// Offset 255
STR ST1
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 100 15
OUT Y53

// Rung VGR_Program#49
// Offset 271
STRND C406
JMP VGR_Program.S1

// Rung VGR_Program#50
// Offset 274
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#51
// Offset 276
SG VGR_Program.S9

// Rung VGR_Program#52
// Offset 278
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#53
// Offset 286
STR ST1
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 200 70
OUT Y15

// Rung VGR_Program#54
// Offset 302
STRND C407
JMP VGR_Program.S1

// Rung VGR_Program#55
// Offset 305
STR C3
JMP VGR_Program.S0

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"This first stage currently sends the crane back to the "
"turn table, resets the compressor, and resets out detection "
"bit. Once it is sent back to the turn table it jumps to "
"stage 1"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STRN X16
OUT Y15

// Rung MPO_Program#4
// Offset 12
STR ST1
RST Y17

// Rung MPO_Program#5
// Offset 14
STR ST1
RST Y47

// Rung MPO_Program#6
// Offset 16
STR ST1
RST Y18

// Rung MPO_Program#7
// Offset 18
STR ST1
RST C1000

// Rung MPO_Program#8
// Offset 20
STR ST1
RST Y20

// Rung MPO_Program#9
// Offset 22
STR ST1
RST Y21

// Rung MPO_Program#10
// Offset 24
STRN X12
OUT Y46

// Rung MPO_Program#11
// Offset 26
STR C801
JMP MPO_Program.S7

// Rung MPO_Program#12
// Offset 28
STR X16
AND X12
ANDN C801
JMP MPO_Program.S1

// Rung MPO_Program#13
// Offset 32
SG MPO_Program.S1

// Rung MPO_Program#14
// Offset 34
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#15
// Offset 42
#BEGIN FMT_COMMENT 
"Always be Detecting if we have something, if we get "
"something set C1000 on"
#END

STRND X24
SET C1000

// Rung MPO_Program#16
// Offset 45
#BEGIN FMT_COMMENT 
"If we have something (C1000) and we get a go from Doug "
"(C800), start by turning on the compressor"
#END

STR C1000
AND C800
ANDN X17
SET Y17

// Rung MPO_Program#17
// Offset 49
#BEGIN FMT_COMMENT 
"If the compressor is on, and we are outside the oven, open "
"the door"
#END

STR Y17
AND X18
SET Y20

// Rung MPO_Program#18
// Offset 52
#BEGIN FMT_COMMENT 
"If the Oven Door is Open, and we are not all the way "
"inside, move the loading tray inside"
#END

STR Y20
ANDN X17
AND C800
OUT Y44

// Rung MPO_Program#19
// Offset 56
STR Y20
AND X17
RST Y20

// Rung MPO_Program#20
// Offset 59
STRND Y20
AND X17
RST Y17

// Rung MPO_Program#21
// Offset 63
STRND Y20
AND X17
OFFDTMR T100 3000 Y16

// Rung MPO_Program#22
// Offset 69
STRPD T100.Done
AND X17
JMP MPO_Program.S2

// Rung MPO_Program#23
// Offset 73
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#24
// Offset 75
SG MPO_Program.S2

// Rung MPO_Program#25
// Offset 77
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#26
// Offset 85
STR X17
SET Y17

// Rung MPO_Program#27
// Offset 87
STR X17
ANDN Y20
SET Y20

// Rung MPO_Program#28
// Offset 90
STR Y20
ANDN X18
OUT Y52

// Rung MPO_Program#29
// Offset 93
STR X18
RST Y17

// Rung MPO_Program#30
// Offset 95
STR X18
RST Y20

// Rung MPO_Program#31
// Offset 97
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#32
// Offset 99
STR X18
JMP MPO_Program.S3

// Rung MPO_Program#33
// Offset 101
SG MPO_Program.S3

// Rung MPO_Program#34
// Offset 103
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#35
// Offset 111
#BEGIN FMT_COMMENT 
"If we have detected something at the oven (c800), are not "
"already at the oven (X19), and the vacuum is not on [Which "
"means we do not have anything] (Y18), move crane towards "
"oven (Y53)"
#END

STRN X19
AND C800
ANDN Y18
OUT Y53

// Rung MPO_Program#36
// Offset 115
#BEGIN FMT_COMMENT 
"When we first reach the oven (X19), turn on the compressor(Y17)"
#END

STRPD X19
SET Y17

// Rung MPO_Program#37
// Offset 118
#BEGIN FMT_COMMENT 
"When we reach the oven (X19) go down, and come back up "
"after 3 seconds"
#END

STRPD X19
OFFDTMR T101 3000 Y19

// Rung MPO_Program#38
// Offset 123
#BEGIN FMT_COMMENT 
"Turn on the vacuum in order to pick up disk, before the "
"timer turns the crane down bit off. #TODO finish comment "
"here"
#END

STRLE T101.Acc 750
AND T101.Timing
SET Y18

// Rung MPO_Program#39
// Offset 129
STRPD T101.Done
AND X19
JMP MPO_Program.S4

// Rung MPO_Program#40
// Offset 133
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#41
// Offset 135
SG MPO_Program.S4

// Rung MPO_Program#42
// Offset 137
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#43
// Offset 145
#BEGIN FMT_COMMENT 
"When the vacuum is on [which means we have something] "
"(Y18), we are done timing (T0.Done), and we are not at the "
"turn table position (X16) then run the crane over to the "
"turn table position(Y15)"
#END

STR Y18
ANDN X16
OUT Y15

// Rung MPO_Program#44
// Offset 148
#BEGIN FMT_COMMENT 
"When we turn off the vacuum(Y18) and are at the turntable "
"positon(X16), jump to the next stage"
#END

STRPD X16
OFFDTMR T102 3000 Y19

// Rung MPO_Program#45
// Offset 153
STRLE T102.Acc 750
AND T102.Timing
RST Y18

// Rung MPO_Program#46
// Offset 159
STR X16
ANDPD T102.Done
JMP MPO_Program.S5

// Rung MPO_Program#47
// Offset 163
#BEGIN FMT_COMMENT 
"This is the reset button"
#END

STR C802
JMP MPO_Program.S0

// Rung MPO_Program#48
// Offset 165
SG MPO_Program.S5

// Rung MPO_Program#49
// Offset 167
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#50
// Offset 175
STRN X15
AND C800
OUT Y45

// Rung MPO_Program#51
// Offset 178
STRPD X15
OFFDTMR T103 3000 Y43

// Rung MPO_Program#52
// Offset 183
STR X15
ANDPD T3.Done
ANDN X13
JMP MPO_Program.S6

// Rung MPO_Program#53
// Offset 188
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#54
// Offset 190
SG MPO_Program.S6

// Rung MPO_Program#55
// Offset 192
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#56
// Offset 200
STR C800
ANDN X13
OUT Y45

// Rung MPO_Program#57
// Offset 203
STRPD X13
SET Y18

// Rung MPO_Program#58
// Offset 206
STRPD X13
OFFDTMR T103 750 Y21

// Rung MPO_Program#59
// Offset 211
STRPD X13
SET Y47

// Rung MPO_Program#60
// Offset 214
STRPD X14
RST Y47

// Rung MPO_Program#61
// Offset 217
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#62
// Offset 219
STRN X14
JMP MPO_Program.S0

// Rung MPO_Program#63
// Offset 221
NOP

// Rung MPO_Program#64
// Offset 222
SG MPO_Program.S7

// Rung MPO_Program#65
// Offset 224
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#66
// Offset 232
STR ST1
FLASHER 500 500 Y39

// Rung MPO_Program#67
// Offset 237
STR ST1
FLASHER 500 500 Y40

// Rung MPO_Program#68
// Offset 242
STR ST1
FLASHER 500 500 Y41

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"State 0: Listen for Doug's instruction to start module."
#END

SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
#BEGIN FMT_COMMENT 
"Am planning to add a button to jump to a state where there "
"is a test suite. To run conveyor, and ejectors<br> <br>"
"For now, goes automatically to state 1."
#END

STR ST1
JMP SLD_Program.S1

// Rung SLD_Program#4
// Offset 12
SG SLD_Program.S1

// Rung SLD_Program#5
// Offset 14
#BEGIN FMT_COMMENT 
"When the light barrier is broken, turns on timer to run "
"conveyor belt with disk until the middle of color sensor."
#END

STR ST1
ANDND X35
OFFDTMR T200 3000 C1600

// Rung SLD_Program#6
// Offset 20
#BEGIN FMT_COMMENT 
"C1600 is set to true when timer is running so the conveyor moves"
#END

STR C1600
OUT Y30

// Rung SLD_Program#7
// Offset 22
#BEGIN FMT_COMMENT 
"When the timer is done, move to stage 2."
#END

STR T200.Done
JMP SLD_Program.S2

// Rung SLD_Program#8
// Offset 24
NOP

// Rung SLD_Program#9
// Offset 25
SG SLD_Program.S2

// Rung SLD_Program#10
// Offset 27
#BEGIN FMT_COMMENT 
"State 2 is where color is determined by checking if the "
"analog value is within a range, and conveyor timer distance "
"is set based on color.<br> <br>"
"Need to integrate a counter here still."
#END

NOP

// Rung SLD_Program#11
// Offset 28
#BEGIN FMT_COMMENT 
"Subscrib is to get value from color sensor and convert it "
"to something the HMI understands.<br> <br>Need help with HMI"
#END

STR ST1
SUBSCRIB "4 WX0 V3200 1 0x4"

// Rung SLD_Program#12
// Offset 33
#BEGIN FMT_COMMENT 
"The disk should now be in the center of the color sensor. "
"This function checks if the color of the disk is in the "
"blue range. If so, sets boolean value C1601 to true."
#END

STR ST1
RANGECHECK V3200 0x1 23000 22000 C1601

// Rung SLD_Program#13
// Offset 38
STR ST1
RANGECHECK V3200 0x1 20500 19500 C1602

// Rung SLD_Program#14
// Offset 43
STR ST1
RANGECHECK V3200 0x1 16000 15000 C1603

// Rung SLD_Program#15
// Offset 48
#BEGIN FMT_COMMENT 
"If C1601 is true, Off Delay timer starts output is set to "
"C1604 which when true runs Y30 for timer length."
#END

STR C1601
OFFDTMR T201 3000 C1604

// Rung SLD_Program#16
// Offset 52
#BEGIN FMT_COMMENT 
"When C1604 is true, turn on conveyor."
#END

STR C1604
OUT Y30

// Rung SLD_Program#17
// Offset 54
STR C1602
OFFDTMR T202 2000 C1605

// Rung SLD_Program#18
// Offset 58
STR C1605
OUT Y30

// Rung SLD_Program#19
// Offset 60
STR C1603
OFFDTMR T203 1000 C1606

// Rung SLD_Program#20
// Offset 64
STR C1606
OUT Y30

// Rung SLD_Program#21
// Offset 66
STR T201.Done
JMP SLD_Program.S3

// Rung SLD_Program#22
// Offset 68
NOP

// Rung SLD_Program#23
// Offset 69
SG SLD_Program.S3

// Rung SLD_Program#24
// Offset 71
NOP

// Rung SLD_Program#25
// Offset 72
STRND X36
OFFDTMR T204 5000 C1611

// Rung SLD_Program#26
// Offset 77
STR C1611
OUT Y34

// Rung SLD_Program#27
// Offset 79
STR T204.Done
JMP SLD_Program.S1

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STRN X40
OUT Y36

// Rung SSC_Program#4
// Offset 12
STRN X41
OUT Y38

// Rung SSC_Program#5
// Offset 14
STR X40
AND X41
JMP SSC_Program.S1

// Rung SSC_Program#6
// Offset 17
SG SSC_Program.S1

// Rung SSC_Program#7
// Offset 19
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#8
// Offset 27
STR C1200
OUT Y36

// End of Code Block SSC_Program
$PGMEND SSC_Program

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierOv en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInle t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierWh ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBlu e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOut sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBelt _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"T3","T_HBW_S6","",""
#END

