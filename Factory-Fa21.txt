// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\njost\OneDrive\Documents\Factory-4.0-Fa21\Factory-Fa21.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
31dc4d93df313abf2c85fe2a45269cccf583c18dbf56f2dd22ea0282db799fee089ef455bfd7e079
d1d3d1222df63eb412b65e09b16a52c58a4c3f84fa5405ff4e196118a43465ac0a5eef6b978c3e75
03c8ad10dd9e03db31c1f2becdf946aaba1528924073f57e0265393c80a9ae844178c3cbbad04e0a
6eae7f28643d9bea88e83cbfe06cc9c0370681e7f8e07758b2133ba8b94864e371f16946d0c536e0
28a256046de3bf54e75346ef93ab69e9086d015ba43da03d558a76fec3e7512ebe9ef1925c9c79ef
a46def5e61bd3a36221d133b35f074dc65a17d6be81d28ca9b58be325455be8b6940cfb26ec0d2f7
f6230f34022c05ee1c073e4255981699eca610180e5c589b3a5fea9e233ee0b73e03bf00ad0140ba
f4d92a6ad5bb1569e8f2fe97443981e6b015b5ea09205ea36e58a7ddbf97e95997eb7141f597ec9b
d4757b9bc26fcf2b36df7efab25db2ed82aafceaa59c186ac6d05c27ef355a9d7ca1ba47df9b1e09
8e556ea4dd07ef4b71114e584337b1c724673c18c67a70c070679617b1e7879e2a65c84e456a13ac
4eb104cf9a64d5839a957f9400180db0188116e4c56f7ff6b4516d266b165478cef2add692425e78
f41f640b7f482ee3b9039f10ec09715d04f7fd051b43a12b47ca4f97f4c617eb50f8661680628a06
f868ae36ce5d817e14ddf1908765c3809d99080f064a536a5700ac4deb7a36ab6d919b7375da2184
1e6cbcebe6fd12a4eb89ce999f3606142b8fa106172a19418d48c2950db269e3fdc8838fecbe8e82
80ec7d21a0d0f451102f28609c0d5e263452c0187a449dca133cde848100e6496eab0871c6b6383a
32c6dfb1bb3f9bae74f230f59314323aa27362f93cf784fd5b4e816a5a2231bce007b3082a930e01
e17dcf4e765f6796d0b314a9a7e7676806c4ce737a560cc55fd708d51ad1cc9c1007b2467dda1e57
8ea77bd9fbd5967b961f59e68084100a67054ec6789eaed702bd15a49d01b4ed56b1561396fc31a5
46f14b7f0f2510bfada734b02d9ae4fa56846ae348cba45e6c823df389c39721826c5ca4cd507e21
ebd839f5a64619cfdfd88fdbf9702ac86d17d4587c0887b16e2edade11b52f01924f5181b2eee875
a0f6ce5e7d436aa0b36f2455fa3ac0e7448118843c9eb51d05af0b0a7a2f71263bd91036cfcfb404
482d230aaecbf7ae2af0dc3426fb66930616d27216005eb1a1b4d57f99ac86827d0e80dfe208a08c
c5203c425c0846f8380965c9b7a083aa6396d637c36390fb7064f8d6af57028227bb3d73321a58d8
b9d112da794a88a0d40ae2757b21d306a858b199fb3b1c8279fa409a6444c30fd984fb7bcc8c4a18
397c016de45b2592c19e3e92907d6e7d057d7ff314b06d45b7644acdbf1c90881e04500e1d40fe91
c6b4cb96e385afd1f6189fd1c827708a9f2cb9e1b4b7147789e05e596702c437854dd0784917082e
7140e05a87d4730052bf1c77505e7e26bc58e68b7bd7079707e8753f74b00ec479d35527690cba09
b582ba25996134eeb494147a920487346b90ef1480b40c392e4f2347d391229918b457bce29fe228
307e23bfd806f43568270a428ecf47defa352dd80142385a8e0acaa2c8fc7e2d3ce6fea1f501641d
3f04edd2740bad705d8826fa221735a216d45435f17cab0d2c424dcdb75d4e8e89bd81f897f68469
b9f1dcfa0fd20cf1c3e6e0f517d0d9c0cba2dca5e8a9262cc0eb395f0182400620a5238f66d40a6d
138e5dd25709a98b19db849f4908e71372aa4fac91e15cc4625ddcfce98b71bce310e7f04fa6d782
73a76fd285741fcaebe86a679dfdfb9506fd7d3e12fc10cd4a8c938f3e3af2630ef32b984abe1e59
b642af90f0f73a6596713207c1481201ca67fbee25ae9a0a8a3d09fd88a3215b27dd1c4a28d9b486
ce6d90c651b079a3ac27ce067f4503f1e4bccfd4ae2c1dfbd1dd0f4a852ddb3bc8342c4b92982270
cb68e6b3516921b69292253d11cf8d6519d03fc85a900726274c762b5445d07b8904d5965a875748
7f21c8e2e23e3de33f8be48e058aaa9719af175a7efd694b88441a3f57bda3007f87d7a358156850
d33f2a62494064f649838cdc682d0c15aab9789e04c67ab03a91096b81ac2247e539cf3ee69073d6
755a9721897f06a3d9cef3c9d473915cd57a5884ea7fb5d47f7cbfc02788edf8e5bfbf5c81e2640e
8d0f9ba71d05abee2c1eb795e684359192876bb8670602bc1725e936a5e17a48da2877326bc002fe
1dd4e66f8dfe2cca6e6d7991c2d0b3b7018ab89448db5ff8602ba4b4a7f59d40a9261e2b69cb3894
bc5227e638d0459f6dd50303f1a214e61df74f03d4de884957f420181dfbc16e22b6aea3a131b5f8
64d7381c0ae7b9096781200ce27648d6dbf485497d983c04abb1b118566bb644fc4ddbcb45bf1a87
5b474f7cb4e5c892306da358bc08e6f9957d355cb6db511f55e21fa1af414059f9322c9c870b1259
a924fdfec2f36e5b055522335c88fe021cace10d9edd6463e9c0f870793735636738cb1a5fec766b
eda84ac42ec5ab4b7f8e7cb6429a8a4e587d365f3137224e9375480c517f7c17a028639405037cc3
9534c93c6aa112ba5e6e0bc740ae1edcb7514222b05102b16bb63d426b9e5a18fbdf4a74832127d5
9ecee19003b819a3d93c8a77ff473ac76a9e9ec03103999b7f8247aec50bc8f6fb7e987856d602c4
05c6de5a73d1d326ff6fff1b16b604ee8c4ef429f6be8457753569d6e3bd09db1a70aacd3ce5e2f7
a0e42077ef6e300454468c03b3761d8e6221542d263d017f4f0781ac86130f28621d1b4f8aebe2e0
f95b3a6fb6e845cf7d26d93509b535c5ac8a10d2f559a037cdf07bdf5691c429d238e5ea52a32794
d26c8d732f337d2b672815119db3edbe4b91ced1688a4f09ff3109c77a39a5c3d29540d1cbdf4e7a
7ccd29b1a8ae254d93efd7b7dcede019781ab91c2a8ee54dabc9d28edb3ee39b25d26d316aa27da7
4d2132a86ed6f07bd1c199b4f21390818f4e4974b1372710ef352f566cdb7ba6c33cb48c79c30107
5509348f4244f915acbdf160f0b4fdb90de81611a0a893019068742c35faef1613a0bb48f9910b4b
4c73b35d7781e0b0c82feadaed918934754da9e2736574702615a5426228ddbd79c554c87c5ed071
c3f7eea8796a32cdacb4597b124d150067cbade51cec9f42e66271af284874560d94efdd77fd403b
748ce78f8cfd8a64f47b9c40c78fa930902daa9e20df7b0e79c7e55beead8001a2889050e426d763
7a487d6b782a6217aa72ad0eaffc7e7b2ec74aacb9725c02f65cae3f6aaf66955155834be2b4196f
c598a4bed65f995ac9e23a0198388502d30d19e3e43ce438a95813f34d30af83700f656ca4ac8ecc
839745b1f175bd59656f91c41106abec5ac5a3d3b1085ebbfbdad30dd93c7f4ad7caaa780e63fea3
d01a4a743e240169831ad15f1eea28ee38a2094ef867f9085c8a2f122877fc14a5aa011de99f7a07
3411a28105b1fcb56b3c1dd67b25933b2705c601f9fc72a4e50210d4ecc5910bf0555409945f95f1
d10babf5c82e39abb44f14b81588d2e4a2e30416d2e8a1e2e0bf4b230ff2255e56794d871393fac5
0baebe30d019220ce050585394f3c1eb1c0e3663aca9e70f33bdc4d3e9eb67d60e7f165821367110
17fb28f0a77ab1acdf30f6696ab3308f615dd36a7af4265035278099b7eca4e3078b9f1c7095f587
55803c31d82bf8fdc6a4e11e3ef91b31f70a6683cb7bb4145322b59e95a6ba8b95bb5a98931b8131
ecbff8a9361f20f0d0013b63de4181bb8de38e0669bf71aeb08bb09afdefd782ada927aa7c9ec9de
d0bd31805899f086167ab78c52ba87469987bc8329b2fcdea780b5e5888c0e4851bcd2e6b6be9c79
3e3880d6b7f019646d66a1c6fcd6fc1b8a4a67523a1a83cc8f15fef250ec22bdccb438bb1b90b03e
96d73022962ec1fc8c1bd0da332c1d03ad7bd176580c5a051682bacf8adb079379431ba666760a9a
3ab1cfe1ccc0ba65dce72e75ef14b181b4b4bf801dde5269c38a096580c8780fee271c32dcec2af5
eb10203ea7b58dd88bce230be3b4d1d3b5f609d1b948e2e958324607732d79d8ed9fcaf26cfcb290
e9c6f3e7e7f8d2f19443599588dc30989e319bc5eca593ac9883d4af26cdb572c33a51daf8d95765
276463407b6886fab5b64b9b7b820e06844423d52589f2ad8f9cf2c4630ad60c541e013b26095610
73c202b1239324d0335490334f0f0af640bc68ecffe47788eb9e594fd6982d32fb5df8e7ddd95bed
0b84f778b34707eb290fd434fb68870c3b4aa54324a829e9bb5ee088cc4e0811fc573711c09506cc
0c1d853a000fc48f1718b14dbfd344381b3e9dbe1863fcd708dc66c34aa643631250e0cad1b36bd0
da414ee7fb07f1b0b9287d4b933890ee19d0ea34de63c2c906e1ee7c79bcbce1a12e655fadfd792a
ff481e756aa43f8f885bd969b270cb0198973ea24d0f532c54bd3d49fc804297119eb7ff31a2ca44
08db371858b87b88fa6ef9828d31ae9f745c4159605344fab3a6d04430a556dfa4e2fd179dc170f8
1906879c39ee62cb5fae3cf9d551b21ce18c0e5f23211e76813329c6ff5057c163c364b8d7cb51da
f6af99309636cefcfbddbb46c03cfbd9e0d4319c0e18ef10e7e124c0d799c6d6394484163f5c301f
326b4f0ddc3e653ae906130c721ad2eb70c7cf009ba60f2d2ebc9e176fb5219fa8dbbf832638f5ed
1aff8c679b5b43242777a3626bb87b4b52e3e8502792c05d47b190d58a1858f08d208733a3d95bd1
2e8595d577b71de0c184db917c34b154d4830675308f255cccd6102c0f5b70a8739c008ea1b9ea07
9aa8777c4aae567e73d51a4aea8c17cc0b8648439ce540f1e357bc3f73e0541c35974519bc91b124
c41b33e585efeb1969969525fdef0816a64fec41fc0b91e7d1421f19a28b12c4da42506b73c938e7
446945d030efc71171031fae69154c859848afb4283e63fb9fd1b35ed077c7a47479fcc129ace2e5
a29e140aadb93132f362d85154da36b6344bb70dc216d2aa07c4e7d631704b7560ae714f68828146
660fd6805b85ebec06ced55ef6482a1e54575c76024c0cf01207e8a9ee52f8afffe27121a242d8ba
6ae398191f36c5c8ea4bfa3f51d5dabcdceac769967c970c9bc8d6acd1d1357db83787ac7093d497
bf1237ef86d1e254ba5434cd2535ab8cde65691f2921e01e55513c69487cc6c94678a950b7c0b21b
57e13629832548a52d86c1187dbce804142955fe4ca8c30a9888236e167ee0d02a0a9e05d8f5ed42
f63c9be9357595e61f6fb4b6af68e4dbba9861f98f726220c5dcd74ddb18503ea6982a7ecef11f74
74447bf48cc22ac2e80d297ada0f32a0a05bf391aae7fe89b061f9b7d049c734b0e5ce74136fcead
ec50d624c382f0c8f56bf657e47fa4d11ba87c6b02e9a65ad3f8861f7826c36304974c18e06cd963
9197e537696141cb0fa3288a3674340eeb1c9aab772cb6ad2a377c5e9c79db3c5cc590cfb34ef9be
5f37e8c690ccf05db1b4313f1a1d36826fea385bbc8293326d44b58299e0a33ffe589bedd9c1911a
7b62c01440d235956d77904ec7721593e6b1b5430b6cf8bb2f6f39586171bbde58b71da27f960509
e55596393f60d9c9592faf70a480554551e9d55ed493ba5e3e85dcac031098859ceeaae5a10e712a
470199c9c79b20684079e75fae6a09fc7b28f775bb1ac1da2b4cf0ce8785f9b48134c19108ed0650
4f220f03a20dbfa6c8d02c743901c535c8685bead055b1bbf8558a2bf3e9ad048d180a66c1905f9d
5388076da77c3f753bfdae9dbe983f23a9d5d87f0ecc25818ebf7f4be83bdba0378a1e9c699dca02
0c3ff5f0849732733a089f3a55b12cb5f62026795da5b106fd37c9c57133e6b5e4ba5907c08f7176
6ec93374c0f15e15f7353b343aaefeea2c3460bda38d4f2abf7c871d6ae1b6cd5507a6fa4df0fc64
7655083ae0357e89b86dfe9f8fea039c0ccfcea0c727ce5366e81353649e40c7e3a2c6b28f61c5d1
a99ceb3b067ec31edee8ca0ba9a8674e649f16729011bb90d85c22c4cf8be89515fb02aa6ecc7bed
d0cc2f19643fb072e4874a8587b0f48db936c192f25a9f5ce1466454a4103ac7a934fd30f062d195
c160e098127b0dcebe41dff1590859d7bebebe9e9f3c62bf679410e5fed01ddb91aaaef0d2e81fba
92da96e0be08bc5d13507daff4bc372051adf29b9a9b81845815ccf0c2805e2bab7f17bb4376b4ab
9a6b5eb827a4a4c311f65a86aa33c7e003626d19225a1bfa61d294c9ab5132efe7ba3c1a9f6c524c
6c8aa352432cc9d75246ed452cfd96bc5491a151ac6eed2e2d770090cf39c7c3f3dc51d72f30643b
62a251b0c7f4f57f9bcc3b7d2a8469e6e4684570d400e648a233943b539768deb140c4d37a92e736
5db7dfdaf502ff3dd02233fc37e22f3dab59f4fc4578bab323d15793c678251a45e02a47bd1f2736
320f102c023ff48add1bc03365b0405085c44881e0c5f8d1b4b33878d7c8ef9fba66758353a16bb1
1f43141ffbdeb3f8b84cf4bc7fdaeccea84061986f46db1cff71bd40ab46dbac6650bcab9a2d4fcc
d836c7940f61b34818f8a31668615e685609cb01e573a03d2f258d51abae2b3131bf1fe68a0a830f
8ef79437e6c87281434f8952b1667174844e14b21a193451cdff0cdb067a2817e71ad8880495a081
eec7c2fdf17836733111646805d51f80f62c9c556f02d86982b9b467480530275a86e19e7f9b58f1
7e459788d31550ce815bac1f080fb0fce1868791b4fda88637d7bbeb576a2e69495a24f06fb26091
ebe7f6d29dc59dee221b74fd52fad31d0f84dc6b3966970a3d4cbd93b9c3550574f641aa636d494d
10ed818ea968f3f81e08cc2a6909da5e6c173e0b69615f91c926806dc72a726391ed7f1510544cf9
bcf059436b7e3f743ca59cfe08fd0f5baaf4e546256a86d762c058f407638a43c348b636ce9173eb
9596365b93b463bdd14912ded61578e9330a1f99a9be2beb3fa999c3a33ce365b30fb0bd890e1dad
c1bc630b1e50ae60dc1c2485e51014fac8dca42d3780554b539fdb3d85242e93e4a456a357eb17d7
278631b3f7b2818b981cf488252a2da69e1bd45f243fc5cc6be409a2f40d471ebb84c483bf71ec92
f48fee2270a10175ba455588ce44c8fa9d6fa1b782fa41daeccc174998806cd0301e0639d4cc7ee3
465ae8574f0056cad2be4a5a8d916ac06da92280f9da55ff9ee0058162d0a6b7dcb8ce30587a8136
f7cece98caf7828c30a6ae66eea40ebb995aaccac99869b6532232040564a6c5115b8eaac716b978
d09754b311b1f3d7fe88db5fbc5b746bc9d066cb297e4ffb84647a51b8a9812edd5223fab9f201af
a5583e1be125d79cd84b4ecce79678ba0e6484d4a198859cbfb6ae69ee1d369d1916e5b8eef3be59
2ca326c836dcc3dfc7c806c0e0e1041559e339395a86484b9769b2f5823d7df97dd71ec403aa6800
e8fd084f853e53474ebd15f48e195586eb262d22d15674031379a6da6779ca07c27ecabbb5813617
e84aa775111b0b8b917a69df4133620f65215f11dce9f1c03256fef1ad3395f9d464213c5204cad8
a9d7a87f67f973fe4c59adb482496d08021f8be9da4daec039ca857cc5f3506cd3717be257f8f848
6e4fbbc4ea244ee8646041e63e5869a5c67ca9d3222d17ebcdf41a7a534bcb5af606564aa2cba713
b94366f20252027ff5f3b9bd93edc601480386a8fd27609196c33318a047864350ba1f54cb78a5cd
ee55aa334ce3f0ac6e0739f01b8f01e7e5c16b641afa5165df8e722b7f52ba715faa4151ed6034d3
98ab93e8f262c7d47cf2d60d29a06e5fd9b3c8ebc1c153435ab0024d004cfa132bc551fad32cf820
717601260d3b4c2ad9f96016131e7ffecbffc9ad326f58be6d1c5df7bedc379e078c27a7f687b52a
22967c6acd76e4d247b11b733397d7c6e8c75a595b26922ead52c9f940223f2728c68d944c79394a
54c196af3299ea5b31064e39cfa96c501fb3da85c980ed29d4d3672285706a97219d9eb4055867a1
4db4a82363a7c3247d967cbc8ff03751d08afc86cf94f70a9dc186c09b77d964e8e148cc114b0d1e
88d4ba949a9d60dc09bc6035958beaa0a6e4e575ab03610f17c951d23e9c6d3fec758a1624f4b602
15af78af9bfa4bede1cbef7e9f30fb1f6f9b14b182f410e100296d32fef97ea7e18104e5a7cedccd
561ccf9fe52411c1850d7f762e2846ef8ddc8539be2327233e353816a67e5fb5d1824eaefaec59ae
2ed28c11acfe1e0f8cdad5ac01ee6fd28d2eede5a8f985707996687903fb50223e39084700dd105e
c28c8735aaf1239b051bf66fb7e35e4df6a84546cf98f0634a5cbb183e4833813edde6bfb365ed8a
3f0496c6e2cac2dfbf9d6ddc01e3495469a4d134d59b5e57776925a7b4d768e94c9bf3488d94bd2c
017079849bef77359329561bb0bf11d5b33f8b9ef6f816d3dca8344b4146e02b411185eb188a9044
35d94e55b0a69a6b83ccdaef06a68a66169ac7d5190c3031dc3d4db17d5679e61d763b8cfaef6174
31a6c559d6d46e26ad2a12e157abe5af6fa166174e84fbcfa8ce4c20c674d89b852e22cc2de4d1b9
ede8e61fbc1d9374c12db6f4b36f1a8546d752547c024a4facd9a6cf65124ef083589ce2d70aec87
dd06f1eaf2821fc4d1ac155adf7ef2256eb048c7d0365113bbf6574cf30702321a6ad3c67ddc572b
b1564ab6e8af02be0f6acaeaee05a95d5938b43603dd8f7d2d0744b6ddf4eaa575e0290304290e01
c137df2c22ba7a41fd18244916661bcb29e49185016de531bb97ae564fc714f585cffa4e3f2a563b
99a93aff2d35b0d08145b171efc03122a30545e7ea7d1ce1ca0a1eda2611db7a5094701aeefcc30c
ead584e50c5d82f6023636f98f3b1052df93b9cdc5e4dcf772cc69cf02e9c316d8a516917e403fa6
cbbf0527fbb12668f5d03fabcf9a1c66225c1e099ee846cd22a6ad539a6f9f1c9c607c73dc9b70ff
4ba51430c81c80fb775c5bf06df2d1a85571ee94f72e6ee484eab3770535b2fc373d8812610d12ab
5e7b70bf2992cd3dca0a1c00918ccfd31716d50c46645d41b5904c5ec2025792fe1e8e062153056a
b25bb57124f57638b6b8054685befecf5f1c2a283d70550095d4e4135a95ce92d7feaa46a2319f31
af726a2c0a1d056ff0e2649ddda61203bc9aed8ad1d31b8f7bac5f97d830f5c6ce34c8df5c14c748
98f0798a198af8a60f98876af59171b3fee5652da4d611ced98e9f94b82b11b1ff18cd8b343ce1b6
0574cf7c7a358d551bb5a2eaa2955d2b5a2d17f50b8c14bf2e8d2386498a730abd8a57623d8a2c9f
a0b4f4fa90ee7f3a6b8ad78e989f22cea9fabb9163aed18fc554189328b54014e54cab3b3a570887
abd230943e440759acbcf2e3d9f18d4542fd03be2794a70eee3edbf340efaf5936ff92a1a4f177d5
e67a7224d28bdf8f34d094f427ebb79700e7d6633c74e52d1f8511aaa442c0252db3693fce1e8f99
4a6740f1ade0ca099b0ac3014a6297bafb480f31e5a050400aadc58ba5bb5707b43b0957f4593f52
b2c998deaebd5ac40f8ce25e536fec118b491760fdb46b68c11accabeffc563e3b24208119675f56
d137676e5c60d2423faf48c0dfe3cc7e5a70a0c331ae8451fec9ae8433b1387813d707558d182167
14f699b4569c7edd501586ddf302f806819a8175839233771a84439d8a9b6b13cfcf8adbbd5f1d73
1679da41e61a9ed93d9bb481fdfe593c8c3396b872f0527ff1d60e6ee0cd30a8036ffbcc8ef5899b
4967e2879d16a34e2b6956b25b1c1bdbfb3842a1429141d1367be6472b9750de95904d52d29a700b
4ffcb5e2ac7570caf5ea79e2ea0b9c7c3d12a3ea93c62d65b2f0a4b03b5a3d131de253e5fa2eda7d
9810dccff07e6292b444f002e3963e17d516a4f86987d18b2789a48010ba3b75fe01c80d25676386
a14ec6582fc3441a9c8515db2f087da3bac30930cf23fdbd2d8bb83e5f0defd9d810fe5df0b6ba52
3e3d7396334597d0e5d70b1af4e89ef1bb5de07a66bd5232c33f7a14a3f8cfb2e5c67e64201c8a77
db0d9075794ad8cc3c8af16c0285a63f84c7f30a7aa870324c22f3eb588ddbb5f9279bc68e656d39
4999575186e4f03599f1a7730d3e6a9a58228089afb46cde4a59aad1344f262e23d13b0a4deeb3d6
8f69dd2f0dcc860a094ae3df31a26cb3c1f2d0987e63859a3b9a94ab1911ea6b27b6cd26e144bfb3
e875cb45d4415c4b7e0cc0361fa1e9cc3dca2827d45e67ea225d38955042b84a7d0fd40789ec469e
4ff16b8dfbab4f83ccfd4a47c1cfc355a0233eb7cf232750aad504929c084362141316147ba41c98
2a91ac991e61cfb6d3da37d813b1c47d81638f97527cfb8a142f954d2de3972a64c93aaa3b9b42da
9a478a1d01103dce979a6a441e48aa920f8843a85e0f740911e6a78eb26055a4763ec681f8b05144
b2207341752d98a482758011fc2f1456f3dd34e4f7fc6b42b6da8283282e0310e5619e1339380cee
49b1ba9283936a305fdb5ee0fa9ce944d6a6e09446dcd2f773e475b26bf36f2da75c145919ab7d30
48c7bc41f985b57bda4aa61c7c3394fdf8f2cd476a5b37da143b7c70073b90ee0b4f6c8b41c63f72
9b852dfb4a30bf7ffbcddd0d34274d15691e864653e9431b5423e6a947a339648194af7ff3cc8656
0a2c4df55d2f9d0b207eef71e60fb45960a353afd6802133621a180b18e25932ed6c0020abd96e77
378982f08ba5c867ac76791b2c7011edd27c598df22305332ed719a6965ed6809614ae160c38c38a
6a29fce57f544256190b1988f2c01af28ae5bf3ccaf7d22f1f27ce1981936af6498f4596de64c03d
ac0473fe5fe183e8442368825769ee84ac87ef599494a86470a430815ec4d3b1a3078b4da0d65b38
a94d16c5b330e5119e1183b3be8e3fc0b0949206ad825792a0edc531ee44ae403b2b080e74080adc
d3fef702f95c6373c7e35cc6a091eb73cb3996286681becaed2f46aafb1fd8cf4d02fb8ce118ccdd
2fbf2d686b6f5d5b223a3195cbd02eafcde757b85ea32e08470f523e540f6f7f71e1e97a404caff4
5eee08b5b8ce8600bd9cc46fb6238e751b9a5f4bb384b8e88d1f84a3e4524895300c1ee93d5382ec
5b96fd671424e4161dbbc42ead0ed39cb5d9b2b69106e2f3f2fdb224731f2e07094ee82001371e3e
7c4a000dda59bd9bcf3f635cdd040857f9d9e1486d811b1c3b30eefb74abdb9be46c41f00fe7d913
360b8f3bd28ff0b27c58010699d3113c48fec54154c1e97441f2e8dff09e4b580ee46ce1542ea472
90b6aa276e8324dd205b89a7674bfa50bb9dc74194305458ea24328eaf934fc4a6ff1918c8e9fbf0
c01b08fb1a8b6cfe724f09179429ad9dd3ebf9cdb0868cc824bb29e1b44752e3f7aaa1f55d082fda
54faaab45d0965c2832c8d2918c1c076395d4aca844f4b9a42d4c31667bf8f3b0e15e6b45dc23fb0
49db9321b1a074834caa91ed6080fa276ee8fc06139ba233e56e913cdfc395d4c4b151c33c9e929e
dbdd2bc85f3e97b75a308edd81fdb0de1aadd515829f4a67889c319d5df672a0934086dc643ba581
15ddc47358bbf4d6850ac4f57ab300161791f152aeb9f35c70736ab29d25577feec162e403d60071
c6babb25ae634571e89be75210c044c1684bb473d008edf76b0ef692873c2b343d84cdc6c6f12d0a
bd7052cfcfa6215ffe08e2d0913e635f351aa8ff0c60d23bf33ca02dedb94b51d01c
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 HBW_Copy_State <Virtual>  0
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 PID_0 PID  0
 SSC_Copy_State <Virtual>  0
 HBW_Encoders PROGRAM  0 -1
#END

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"Copy State"
#END

STR ST1
COPY 0x1 "4 0x0 MC101 C101 1 0x0 MC102 C102 1 0x0 MC103 C103 1 0x0 MC104 C104 1 0x0 MHR105 V105 1 0x0 MHR106 V106 1 0x0 MC110 C110 1 0x0 MC111 C111 1 0x0 MC112 C112 1 0x0 MC113 C113 1 0x0 MC114 C114 1 0x0 MC115 C115 1 0x0 MC116 C116 1 0x0 MC117 C117 1 0x0 MHR118 V118 1 0x0 MHR119 V119 1 0x0 MHR120 V120 1 0x0 C130 MC130 1 0x0 V131 MHR131 1 0x0 HBW_Program.S0_15 MHR132 1 0x0 CT10.Acc MHR137 1 0x0 V10 MHR139 1"

// Rung HBW_Copy_State#2
// Offset 49
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC200 C400 1 0x0 MC210 C410 1 0x0 MC220 C420 1 0x0 MC230 C430 1 0x0 MC240 C440 1 0x0 MC300 C500 1 0x0 MC301 C501 1 0x0 MC302 C502 1 0x0 MC303 C503 1 0x0 MC304 C504 1 0x0 MC305 C505 1 0x0 MC306 C506 1 0x0 MC307 C507 1 0x0 MC350 C550 1 0x0 X32 MHR400 1 0x0 1345 V810 1 0x0 180 V811 1 0x0 175 V812 1 0x0 860 V813 1 0x0 200 V814 1 0x0 400 V820 1 0x0 420 V821 1 0x0 440 V822 1"

// Rung VGR_Copy_State#2
// Offset 51
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC400 C800 1 0x0 MC401 C801 1 0x0 MC402 C802 1 0x0 MC403 C803 1 0x0 MC404 C804 1 0x0 MC405 C805 1 0x0 MC406 C806 1 0x0 MC407 C807 1 0x0 Y16 MI400 1 0x0 Y43 MI401 1"

// Rung MPO_Copy_State#2
// Offset 25
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MHR1600 V3200 1 0x0 MC800 C1610 1 0x0 MC801 C1650 1 0x0 MC802 C1651 1 0x0 MC803 C1652 1 0x0 MC804 C1653 1 0x0 MC805 C1654 1 0x0 MC806 C1655 1 0x0 V3201 MHR1601 1"

// Rung SLD_Copy_State#2
// Offset 23
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 C1200 1"

// Rung SSC_Copy_State#2
// Offset 7
NOP

// Rung SSC_Copy_State#3
// Offset 8
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Mini Factory Fall 2021 Project For CS 453/454/553/554 "
"Advanced Robotics I and II<br> <br>Date 09/17/21"
#END

NOP

// Rung $Main#2
// Offset 1
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#3
// Offset 4
#BEGIN FMT_COMMENT 
"Run HBW_Encoders"
#END

STR ST1
RUN HBW_Encoders

// Rung $Main#4
// Offset 7
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#5
// Offset 10
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#6
// Offset 13
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#7
// Offset 16
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Encoders
$PRGRM HBW_Encoders

// Rung HBW_Encoders#1
// Offset 0
#BEGIN FMT_COMMENT 
"<center><FONT tsize=4>HBW X (Horizontal) Encoder "
"logic</FONT><br></center>"
#END

NOP

// Rung HBW_Encoders#2
// Offset 1
#BEGIN FMT_COMMENT 
"X Encoder Up Down Counter"
#END

STR C51
STR C50
UDCG CT10 DST511 DST511

// Rung HBW_Encoders#3
// Offset 6
STR HBW_Encoders.FirstRun
OUT Y99

// Rung HBW_Encoders#4
// Offset 8
STR ST1
OUT C99

// Rung HBW_Encoders#5
// Offset 10
STR X8
OUT C8

// Rung HBW_Encoders#6
// Offset 12
STR X9
OUT C9

// Rung HBW_Encoders#7
// Offset 14
#BEGIN FMT_COMMENT 
"Encoder Right. Move to Conveyor"
#END

STRPD X8
ANDN X9
STRND X8
AND X9
ORSTR
STR X8
ANDPD X9
ORSTR
STRN X8
ANDND X9
ORSTR
OUT C50

// Rung HBW_Encoders#8
// Offset 30
#BEGIN FMT_COMMENT 
"Encoder Left. Move to Storage"
#END

STRPD X9
ANDN X8
STRND X9
AND X8
ORSTR
STR X9
ANDPD X8
ORSTR
STRN X9
ANDND X8
ORSTR
OUT C51

// End of Code Block HBW_Encoders
$PGMEND HBW_Encoders

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
NOP

// Rung HBW_Program#2
// Offset 1
#BEGIN FMT_COMMENT 
"Initialization and Reset stage"
#END

SG HBW_Program.S0

// Rung HBW_Program#3
// Offset 3
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#4
// Offset 11
#BEGIN FMT_COMMENT 
"Jump to Homing Stage"
#END

STR ST1
JMP HBW_Program.S5

// Rung HBW_Program#5
// Offset 13
#BEGIN FMT_COMMENT 
"Ready Stage<br>"
#END

SG HBW_Program.S1

// Rung HBW_Program#6
// Offset 15
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#7
// Offset 23
#BEGIN FMT_COMMENT 
"Set Ready status"
#END

STR ST1
OUT C130

// Rung HBW_Program#8
// Offset 25
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 0 V131

// Rung HBW_Program#9
// Offset 28
#BEGIN FMT_COMMENT 
"Task Send"
#END

STR C101
JMP HBW_Program.S7

// Rung HBW_Program#10
// Offset 30
#BEGIN FMT_COMMENT 
"Task Recieve"
#END

STR C102
JMP HBW_Program.S12

// Rung HBW_Program#11
// Offset 32
#BEGIN FMT_COMMENT 
"Task Reset"
#END

STR C103
JMP HBW_Program.S0

// Rung HBW_Program#12
// Offset 34
#BEGIN FMT_COMMENT 
"Manual Control"
#END

STR C104
JMP HBW_Program.S3

// Rung HBW_Program#13
// Offset 36
SG HBW_Program.S12

// Rung HBW_Program#14
// Offset 38
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#15
// Offset 46
NOP

// Rung HBW_Program#16
// Offset 47
NOP

// Rung HBW_Program#17
// Offset 48
NOP

// Rung HBW_Program#18
// Offset 49
#BEGIN FMT_COMMENT 
"Task Send"
#END

SG HBW_Program.S7

// Rung HBW_Program#19
// Offset 51
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#20
// Offset 59
#BEGIN FMT_COMMENT 
"X Home - PWM"
#END

STRLE V10 700
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 200 V118
OUT Y50

// Rung HBW_Program#21
// Offset 78
STRGT V10 700
JMP HBW_Program.S1

// Rung HBW_Program#22
// Offset 83
#BEGIN FMT_COMMENT 
"Fault State"
#END

SG HBW_Program.S2

// Rung HBW_Program#23
// Offset 85
NOP

// Rung HBW_Program#24
// Offset 86
STR ST2
JMP HBW_Program.S0

// Rung HBW_Program#25
// Offset 88
#BEGIN FMT_COMMENT 
"HBW Manual Control"
#END

SG HBW_Program.S3

// Rung HBW_Program#26
// Offset 90
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#27
// Offset 98
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 50 V131

// Rung HBW_Program#28
// Offset 101
#BEGIN FMT_COMMENT 
"Manual X PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 100 V118

// Rung HBW_Program#29
// Offset 116
#BEGIN FMT_COMMENT 
"Manual X Left"
#END

STR C110
OUT Y50

// Rung HBW_Program#30
// Offset 118
#BEGIN FMT_COMMENT 
"Manual X Right"
#END

STR C111
ANDN X0
OUT Y51

// Rung HBW_Program#31
// Offset 121
#BEGIN FMT_COMMENT 
"Manual Y PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 100 V118

// Rung HBW_Program#32
// Offset 136
#BEGIN FMT_COMMENT 
"Manual Y In"
#END

STR C112
ANDN X11
OUT Y7

// Rung HBW_Program#33
// Offset 139
#BEGIN FMT_COMMENT 
"Manual Y Out"
#END

STR C113
ANDN X10
OUT Y6

// Rung HBW_Program#34
// Offset 142
#BEGIN FMT_COMMENT 
"Manual Z PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 100 V118

// Rung HBW_Program#35
// Offset 157
#BEGIN FMT_COMMENT 
"Manual Z Up"
#END

STR C114
ANDN X3
OUT Y5

// Rung HBW_Program#36
// Offset 160
#BEGIN FMT_COMMENT 
"Manual Z Down"
#END

STR C115
OUT Y4

// Rung HBW_Program#37
// Offset 162
#BEGIN FMT_COMMENT 
"Manual Conveyor PWM"
#END

STR ST1
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 100 V118

// Rung HBW_Program#38
// Offset 177
#BEGIN FMT_COMMENT 
"Manual Conveyor In"
#END

STR C116
OUT Y49

// Rung HBW_Program#39
// Offset 179
#BEGIN FMT_COMMENT 
"Manual Conveyor Out"
#END

STR C117
OUT Y48

// Rung HBW_Program#40
// Offset 181
#BEGIN FMT_COMMENT 
"Jump to Ready"
#END

STR C103
JMP HBW_Program.S0

// Rung HBW_Program#41
// Offset 183
#BEGIN FMT_COMMENT 
"<FONT tsize=4>Homing Stage</FONT>"
#END

SG HBW_Program.S5

// Rung HBW_Program#42
// Offset 185
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#43
// Offset 193
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 33 V131

// Rung HBW_Program#44
// Offset 196
#BEGIN FMT_COMMENT 
"X Home - PWM"
#END

STRN X0
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 200 100
OUT Y51

// Rung HBW_Program#45
// Offset 212
#BEGIN FMT_COMMENT 
"Y Home - PWM"
#END

STRN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 60 75
OUT Y7

// Rung HBW_Program#46
// Offset 228
#BEGIN FMT_COMMENT 
"Z Home - PWM"
#END

STRN X3
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 200 75
OUT Y5

// Rung HBW_Program#47
// Offset 244
#BEGIN FMT_COMMENT 
"Y Home - PWM"
#END

STRN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 200 75
OUT Y7

// Rung HBW_Program#48
// Offset 260
#BEGIN FMT_COMMENT 
"Jump to Homing Reset Stage"
#END

STR X0
AND X3
AND X11
JMP HBW_Program.S6

// Rung HBW_Program#49
// Offset 264
#BEGIN FMT_COMMENT 
"<FONT tsize=4>Homing Reset Stage</FONT>"
#END

SG HBW_Program.S6

// Rung HBW_Program#50
// Offset 266
#BEGIN FMT_COMMENT 
"Call Copy"
#END

STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#51
// Offset 274
#BEGIN FMT_COMMENT 
"Reset counter for X axis encoder"
#END

STR ST1
RSTCT CT10

// Rung HBW_Program#52
// Offset 276
#BEGIN FMT_COMMENT 
"Set Task Completion %25"
#END

STR ST1
MOVE 66 V131

// Rung HBW_Program#53
// Offset 279
#BEGIN FMT_COMMENT 
"Timer Delay<br>Wait for motor momentom to actually stop"
#END

STR ST1
ONDTMR T3 500 C0

// Rung HBW_Program#54
// Offset 283
#BEGIN FMT_COMMENT 
"Reset X Encoder"
#END

STR T3.Done
OUT C99

// Rung HBW_Program#55
// Offset 285
#BEGIN FMT_COMMENT 
"Jump to Ready"
#END

STR T3.Done
JMP HBW_Program.S1

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
SG VGR_Program.S0

// Rung VGR_Program#2
// Offset 2
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#3
// Offset 10
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#4
// Offset 12
SG VGR_Program.S1

// Rung VGR_Program#5
// Offset 14
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#6
// Offset 22
#BEGIN FMT_COMMENT 
"Rotate Crane CW if limiter is not hit"
#END

STR ST1
ANDN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y26

// Rung VGR_Program#7
// Offset 39
#BEGIN FMT_COMMENT 
"Retract crane arm on X axis until limiter is hit"
#END

STR ST1
ANDN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 50
OUT Y24

// Rung VGR_Program#8
// Offset 56
#BEGIN FMT_COMMENT 
"Retract crane arm on Y axis until limiter is hit"
#END

STR ST1
ANDN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y22

// Rung VGR_Program#9
// Offset 73
STR X25
AND X26
AND X27
JMP VGR_Program.S2

// Rung VGR_Program#10
// Offset 77
SG VGR_Program.S2

// Rung VGR_Program#11
// Offset 79
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#12
// Offset 87
#BEGIN FMT_COMMENT 
"VGR.T0 - Reset VGR to 0 state"
#END

STR C400
JMP VGR_Program.S2

// Rung VGR_Program#13
// Offset 89
#BEGIN FMT_COMMENT 
"VGR.T1 - Move disk from HBW to MPO"
#END

STR C410
JMP VGR_Program.S3

// Rung VGR_Program#14
// Offset 91
#BEGIN FMT_COMMENT 
"VGR.T2 - Move disk from SLD to Loading Bay"
#END

STR C420
JMP VGR_Program.S4

// Rung VGR_Program#15
// Offset 93
#BEGIN FMT_COMMENT 
"VGR.T3 - Move disk from Loading Bay to HBW"
#END

STR C430
JMP VGR_Program.S5

// Rung VGR_Program#16
// Offset 95
#BEGIN FMT_COMMENT 
"VGR.T4 - Move disk from Loading Bay to Shipping Truck"
#END

STR C440
JMP VGR_Program.S6

// Rung VGR_Program#17
// Offset 97
#BEGIN FMT_COMMENT 
"MANUAL CONTROL"
#END

STR C500
JMP VGR_Program.S7

// Rung VGR_Program#18
// Offset 99
SG VGR_Program.S3

// Rung VGR_Program#19
// Offset 101
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#20
// Offset 109
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#21
// Offset 111
SG VGR_Program.S3

// Rung VGR_Program#22
// Offset 113
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#23
// Offset 121
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#24
// Offset 123
SG VGR_Program.S4

// Rung VGR_Program#25
// Offset 125
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#26
// Offset 133
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#27
// Offset 135
SG VGR_Program.S5

// Rung VGR_Program#28
// Offset 137
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#29
// Offset 145
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#30
// Offset 147
SG VGR_Program.S6

// Rung VGR_Program#31
// Offset 149
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#32
// Offset 157
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#33
// Offset 159
SG VGR_Program.S7

// Rung VGR_Program#34
// Offset 161
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#35
// Offset 169
#BEGIN FMT_COMMENT 
"Rotate Crane CW"
#END

STR C501
ANDN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y26

// Rung VGR_Program#36
// Offset 186
#BEGIN FMT_COMMENT 
"Rotate Crane CCW"
#END

STR C502
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y27

// Rung VGR_Program#37
// Offset 202
#BEGIN FMT_COMMENT 
"Extend Crane X+"
#END

STR C503
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 50
OUT Y25

// Rung VGR_Program#38
// Offset 218
#BEGIN FMT_COMMENT 
"Retract Crane X-"
#END

STR C504
ANDN X25
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 50
OUT Y24

// Rung VGR_Program#39
// Offset 235
#BEGIN FMT_COMMENT 
"Extend Crane Y-"
#END

STR C506
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y23

// Rung VGR_Program#40
// Offset 251
#BEGIN FMT_COMMENT 
"Retract Crane Y+"
#END

STR C505
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y22

// Rung VGR_Program#41
// Offset 267
#BEGIN FMT_COMMENT 
"Turn on Compressor when in S7"
#END

STR C500
SET Y28

// Rung VGR_Program#42
// Offset 269
#BEGIN FMT_COMMENT 
"Set Vacuum"
#END

STRN C507
SET Y29

// Rung VGR_Program#43
// Offset 271
#BEGIN FMT_COMMENT 
"Release Vacuum"
#END

STR C507
RST Y29

// Rung VGR_Program#44
// Offset 273
#BEGIN FMT_COMMENT 
"Turn off compressor when not in S7"
#END

STRN C500
RST Y28

// Rung VGR_Program#45
// Offset 275
STRN C500
JMP VGR_Program.S1

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
SG MPO_Program.S0

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"This first stage currently sends the crane back to the "
"turn table, resets the compressor, and resets out detection "
"bit. Once it is sent back to the turn table it jumps to "
"stage 1"
#END

STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 10
STRN X16
OUT Y15

// Rung MPO_Program#4
// Offset 12
STR ST1
RST Y17

// Rung MPO_Program#5
// Offset 14
STR ST1
RST Y47

// Rung MPO_Program#6
// Offset 16
STR ST1
RST Y18

// Rung MPO_Program#7
// Offset 18
STR ST1
RST C1000

// Rung MPO_Program#8
// Offset 20
STR ST1
RST Y20

// Rung MPO_Program#9
// Offset 22
STR ST1
RST Y21

// Rung MPO_Program#10
// Offset 24
STRN X12
OUT Y46

// Rung MPO_Program#11
// Offset 26
STR C801
JMP MPO_Program.S7

// Rung MPO_Program#12
// Offset 28
STR X16
AND X12
ANDN C801
JMP MPO_Program.S1

// Rung MPO_Program#13
// Offset 32
SG MPO_Program.S1

// Rung MPO_Program#14
// Offset 34
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#15
// Offset 42
#BEGIN FMT_COMMENT 
"Always be Detecting if we have something, if we get "
"something set C1000 on"
#END

STRND X24
SET C1000

// Rung MPO_Program#16
// Offset 45
#BEGIN FMT_COMMENT 
"If we have something (C1000) and we get a go from Doug "
"(C800), start by turning on the compressor"
#END

STR C1000
AND C800
ANDN X17
SET Y17

// Rung MPO_Program#17
// Offset 49
#BEGIN FMT_COMMENT 
"If the compressor is on, and we are outside the oven, open "
"the door"
#END

STR Y17
AND X18
SET Y20

// Rung MPO_Program#18
// Offset 52
#BEGIN FMT_COMMENT 
"If the Oven Door is Open, and we are not all the way "
"inside, move the loading tray inside"
#END

STR Y20
ANDN X17
AND C800
OUT Y44

// Rung MPO_Program#19
// Offset 56
STR Y20
AND X17
RST Y20

// Rung MPO_Program#20
// Offset 59
STRND Y20
AND X17
RST Y17

// Rung MPO_Program#21
// Offset 63
STRND Y20
AND X17
OFFDTMR T100 3000 Y16

// Rung MPO_Program#22
// Offset 69
STRPD T100.Done
AND X17
JMP MPO_Program.S2

// Rung MPO_Program#23
// Offset 73
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#24
// Offset 75
SG MPO_Program.S2

// Rung MPO_Program#25
// Offset 77
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#26
// Offset 85
STR X17
SET Y17

// Rung MPO_Program#27
// Offset 87
STR X17
ANDN Y20
SET Y20

// Rung MPO_Program#28
// Offset 90
STR Y20
ANDN X18
OUT Y52

// Rung MPO_Program#29
// Offset 93
STR X18
RST Y17

// Rung MPO_Program#30
// Offset 95
STR X18
RST Y20

// Rung MPO_Program#31
// Offset 97
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#32
// Offset 99
STR X18
JMP MPO_Program.S3

// Rung MPO_Program#33
// Offset 101
SG MPO_Program.S3

// Rung MPO_Program#34
// Offset 103
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#35
// Offset 111
#BEGIN FMT_COMMENT 
"If we have detected something at the oven (c800), are not "
"already at the oven (X19), and the vacuum is not on [Which "
"means we do not have anything] (Y18), move crane towards "
"oven (Y53)"
#END

STRN X19
AND C800
ANDN Y18
OUT Y53

// Rung MPO_Program#36
// Offset 115
#BEGIN FMT_COMMENT 
"When we first reach the oven (X19), turn on the compressor(Y17)"
#END

STRPD X19
SET Y17

// Rung MPO_Program#37
// Offset 118
#BEGIN FMT_COMMENT 
"When we reach the oven (X19) go down, and come back up "
"after 3 seconds"
#END

STRPD X19
OFFDTMR T101 3000 Y19

// Rung MPO_Program#38
// Offset 123
#BEGIN FMT_COMMENT 
"Turn on the vacuum in order to pick up disk, before the "
"timer turns the crane down bit off. #TODO finish comment "
"here"
#END

STRLE T101.Acc 750
AND T101.Timing
SET Y18

// Rung MPO_Program#39
// Offset 129
STRPD T101.Done
AND X19
JMP MPO_Program.S4

// Rung MPO_Program#40
// Offset 133
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#41
// Offset 135
SG MPO_Program.S4

// Rung MPO_Program#42
// Offset 137
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#43
// Offset 145
#BEGIN FMT_COMMENT 
"When the vacuum is on [which means we have something] "
"(Y18), we are done timing (T0.Done), and we are not at the "
"turn table position (X16) then run the crane over to the "
"turn table position(Y15)"
#END

STR Y18
ANDN X16
OUT Y15

// Rung MPO_Program#44
// Offset 148
#BEGIN FMT_COMMENT 
"When we turn off the vacuum(Y18) and are at the turntable "
"positon(X16), jump to the next stage"
#END

STRPD X16
OFFDTMR T102 3000 Y19

// Rung MPO_Program#45
// Offset 153
STRLE T102.Acc 750
AND T102.Timing
RST Y18

// Rung MPO_Program#46
// Offset 159
STR X16
ANDPD T102.Done
JMP MPO_Program.S5

// Rung MPO_Program#47
// Offset 163
#BEGIN FMT_COMMENT 
"This is the reset button"
#END

STR C802
JMP MPO_Program.S0

// Rung MPO_Program#48
// Offset 165
SG MPO_Program.S5

// Rung MPO_Program#49
// Offset 167
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#50
// Offset 175
STRN X15
AND C800
OUT Y45

// Rung MPO_Program#51
// Offset 178
STRPD X15
OFFDTMR T103 3000 Y43

// Rung MPO_Program#52
// Offset 183
STR X15
ANDPD T3.Done
ANDN X13
JMP MPO_Program.S6

// Rung MPO_Program#53
// Offset 188
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#54
// Offset 190
SG MPO_Program.S6

// Rung MPO_Program#55
// Offset 192
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#56
// Offset 200
STR C800
ANDN X13
OUT Y45

// Rung MPO_Program#57
// Offset 203
STRPD X13
SET Y18

// Rung MPO_Program#58
// Offset 206
STRPD X13
OFFDTMR T103 750 Y21

// Rung MPO_Program#59
// Offset 211
STRPD X13
SET Y47

// Rung MPO_Program#60
// Offset 214
STRPD X14
RST Y47

// Rung MPO_Program#61
// Offset 217
STR C802
JMP MPO_Program.S0

// Rung MPO_Program#62
// Offset 219
STRN X14
JMP MPO_Program.S0

// Rung MPO_Program#63
// Offset 221
NOP

// Rung MPO_Program#64
// Offset 222
SG MPO_Program.S7

// Rung MPO_Program#65
// Offset 224
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung MPO_Program#66
// Offset 232
STR ST1
FLASHER 500 500 Y39

// Rung MPO_Program#67
// Offset 237
STR ST1
FLASHER 500 500 Y40

// Rung MPO_Program#68
// Offset 242
STR ST1
FLASHER 500 500 Y41

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"State 0: Listen for Doug's instruction to start module."
#END

SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
NOP

// Rung SLD_Program#3
// Offset 3
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#4
// Offset 11
#BEGIN FMT_COMMENT 
"Wait for Doug Start Command"
#END

STR C1610
JMP SLD_Program.S1

// Rung SLD_Program#5
// Offset 13
#BEGIN FMT_COMMENT 
"Enter manual mode S10"
#END

STR C1650
JMP SLD_Program.S10

// Rung SLD_Program#6
// Offset 15
#BEGIN FMT_COMMENT 
"Stage 10 has manual controls for SLD"
#END

SG SLD_Program.S10

// Rung SLD_Program#7
// Offset 17
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#8
// Offset 25
#BEGIN FMT_COMMENT 
"Manual control for conveyor belt"
#END

STR C1651
OUT Y30

// Rung SLD_Program#9
// Offset 27
#BEGIN FMT_COMMENT 
"Manual Compressor Control"
#END

STR C1652
OUT Y31

// Rung SLD_Program#10
// Offset 29
#BEGIN FMT_COMMENT 
"Manual White Ejector"
#END

STR C1653
OUT Y32

// Rung SLD_Program#11
// Offset 31
#BEGIN FMT_COMMENT 
"Manual Red Ejector"
#END

STR C1654
OUT Y33

// Rung SLD_Program#12
// Offset 33
#BEGIN FMT_COMMENT 
"Manual Blue Ejector"
#END

STR C1655
OUT Y34

// Rung SLD_Program#13
// Offset 35
STR ST1
SUBSCRIB "4 WX0 V3201 1 0x4"

// Rung SLD_Program#14
// Offset 40
#BEGIN FMT_COMMENT 
"Manual Auto Run"
#END

STR C1611
JMP SLD_Program.S1

// Rung SLD_Program#15
// Offset 42
STRN C1650
JMP SLD_Program.S0

// Rung SLD_Program#16
// Offset 44
SG SLD_Program.S1

// Rung SLD_Program#17
// Offset 46
#BEGIN FMT_COMMENT 
"When the light barrier is broken, turns on timer to run "
"conveyor belt with disk until the middle of color sensor."
#END

STR ST1
ANDND X35
OFFDTMR T200 3000 C1600

// Rung SLD_Program#18
// Offset 52
#BEGIN FMT_COMMENT 
"C1600 is set to true when timer is running so the conveyor moves"
#END

STR C1600
OUT Y30

// Rung SLD_Program#19
// Offset 54
#BEGIN FMT_COMMENT 
"When the timer is done, move to stage 2."
#END

STR T200.Done
JMP SLD_Program.S2

// Rung SLD_Program#20
// Offset 56
NOP

// Rung SLD_Program#21
// Offset 57
SG SLD_Program.S2

// Rung SLD_Program#22
// Offset 59
#BEGIN FMT_COMMENT 
"State 2 is where color is determined by checking if the "
"analog value is within a range, and conveyor timer distance "
"is set based on color.<br> <br>"
"Need to integrate a counter here still."
#END

NOP

// Rung SLD_Program#23
// Offset 60
#BEGIN FMT_COMMENT 
"Subscrib is to get value from color sensor and convert it "
"to something the HMI understands.<br> <br>Need help with HMI"
#END

STR ST1
SUBSCRIB "4 WX0 V3200 1 0x4"

// Rung SLD_Program#24
// Offset 65
#BEGIN FMT_COMMENT 
"The disk should now be in the center of the color sensor. "
"This function checks if the color of the disk is in the "
"blue range. If so, sets boolean value C1601 to true."
#END

STR ST1
RANGECHECK V3200 0x1 23000 22000 C1601

// Rung SLD_Program#25
// Offset 70
STR ST1
RANGECHECK V3200 0x1 20500 19500 C1602

// Rung SLD_Program#26
// Offset 75
STR ST1
RANGECHECK V3200 0x1 16000 15000 C1603

// Rung SLD_Program#27
// Offset 80
#BEGIN FMT_COMMENT 
"If C1601 is true, Off Delay timer starts output is set to "
"C1604 which when true runs Y30 for timer length."
#END

STR C1601
OFFDTMR T201 3000 C1604

// Rung SLD_Program#28
// Offset 84
#BEGIN FMT_COMMENT 
"When C1604 is true, turn on conveyor."
#END

STR C1604
OUT Y30

// Rung SLD_Program#29
// Offset 86
STR C1602
OFFDTMR T202 2000 C1605

// Rung SLD_Program#30
// Offset 90
STR C1605
OUT Y30

// Rung SLD_Program#31
// Offset 92
STR C1603
OFFDTMR T203 1000 C1606

// Rung SLD_Program#32
// Offset 96
STR C1606
OUT Y30

// Rung SLD_Program#33
// Offset 98
STR T201.Done
JMP SLD_Program.S3

// Rung SLD_Program#34
// Offset 100
NOP

// Rung SLD_Program#35
// Offset 101
SG SLD_Program.S3

// Rung SLD_Program#36
// Offset 103
NOP

// Rung SLD_Program#37
// Offset 104
STRND X36
OFFDTMR T204 5000 C1611

// Rung SLD_Program#38
// Offset 109
STR C1611
OUT Y34

// Rung SLD_Program#39
// Offset 111
STR T204.Done
JMP SLD_Program.S1

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
SG SSC_Program.S0

// Rung SSC_Program#2
// Offset 2
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#3
// Offset 10
STRN X40
OUT Y36

// Rung SSC_Program#4
// Offset 12
STRN X41
OUT Y38

// Rung SSC_Program#5
// Offset 14
STR X40
AND X41
JMP SSC_Program.S1

// Rung SSC_Program#6
// Offset 17
SG SSC_Program.S1

// Rung SSC_Program#7
// Offset 19
#BEGIN FMT_COMMENT 
"This Stage will be for looking at the High Bay Warehouse"
#END

STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung SSC_Program#8
// Offset 27
#BEGIN FMT_COMMENT 
"If something is detected for pick up for 2 seconds (X42 is "
"not on), write to MI600 to let Doug know we got something."
#END

STRN X42
ONDTMR T150 2000 MI600

// Rung SSC_Program#9
// Offset 31
#BEGIN FMT_COMMENT 
"This means something has been dropped off, but is now "
"being picked up by the crane so turn off MI600"
#END

STRPD X42
AND MI600
RST MI600

// Rung SSC_Program#10
// Offset 35
#BEGIN FMT_COMMENT 
"If something is detected for drop off (x43 is not on), "
"write to MI601 to let Doug know we have something"
#END

STRN X43
ONDTMR T150 2000 MI601

// End of Code Block SSC_Program
$PGMEND SSC_Program

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"T3","T_HBW_S6","",""
#END

